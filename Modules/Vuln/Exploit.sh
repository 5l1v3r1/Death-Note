#!/bin/bash
######Color##########
cyan='\e[1;36m'
green='\e[0;34m'
okegreen='\033[92m'
lightgreen='\e[1;32m'
white='\e[1;37m'
red='\e[1;31m'
yellow='\e[1;33m'
BlueF='\e[1;34m' #Biru
RESET="\033[00m" #normal
orange='\e[38;5;166m'
BC=$'\e[4m'
EC=$'\e[0m'
#######################
automod_value="off"
path=`pwd`
config_language="$path/../../config/config-language"
config_file="$path/Config/config-file"
language_source="$path/Language"
payload_list_file="$path/Config/payloads"
source $config_language
if [ "$language" = "VN" ]; then
	vunl_data="$path/Database/exploits_vn"
	payload_data="$path/Database/payloads_vn"
	source $language_source/VN
elif [ "$language" = "EN" ]; then
	vunl_data="$path/Database/exploits_en"
	payload_data="$path/Database/payloads_en"
	source $language_source/EN
fi
config="$path/../../config/config"
source $config
######################
######################
######################
######### Functions #########
function windows {
	sleep 1
	guide
	while true; do
		module_payload="off"
		echo -ne "${BC}death-note${EC}"
		read -p " > " -e value
		if [ "$value" = "show all" ]; then
if [ "$language" = "VN" ]; then
cat <<!
Mô-dun
========

   Tên                                                  	Miêu tả
   ----                                                 	-----------
!
elif [ "$language" = "EN" ]; then
cat <<!
Modules
========

   Name                                                 	Description
   ----                                                 	-----------
!
fi
			cat $vunl_data
		else 
			processing_variables=`echo $value | awk '{print $2}'`
			value=`echo $value | awk '{print $1}'`
			if [ "$value" = "search" ]; then
if [ "$language" = "VN" ]; then
cat <<!

Kết quả tìm kiếm :
   Tên                                                  	Miêu tả
   ----                                                 	-----------
!
elif [ "$language" = "EN" ]; then
cat <<!

Search results
   Name                                                 	Description
   ----                                                 	-----------
!
fi
			grep -i $processing_variables $vunl_data
			elif [ "$value" = "automod" ]; then
				if [ "$processing_variables" = "on" ]; then
					automod_value="on"
				else
					automod_value="off"
				fi
			elif [[ "$value" = "use" ]]; then
				module_method=`echo $processing_variables | cut -d'/' -f1` > /dev/null 2>&1
				if [[ "$module_method" = "auxiliary" ]] || [[ "$module_method" = "exploit" ]]; then
					module_method=$module_method
				else
					processing_variables1="auxiliary/$processing_variables"
					check_module_data1=`grep -w $processing_variables1 $vunl_data`
					processing_variables2="exploit/$processing_variables"
					check_module_data2=`grep -w $processing_variables2 $vunl_data`
					if [ "$check_module_data1" != "" ]; then
						module_method="auxiliary"
						processing_variables=$processing_variables1
					elif [ "$check_module_data2" != "" ]; then
						module_method="exploit"
						processing_variables=$processing_variables2
					fi
				fi
				name_module=`echo $processing_variables | cut -d'/' -f4` > /dev/null 2>&1
				cd Framework/$module_method
				check_module=`find -name $name_module.sh`  > /dev/null 2>&1
				cd $path 
				compare2=`grep -w $processing_variables $vunl_data`
				module_name=${processing_variables#*/}
				if [[ "$check_module" != "" ]] && [[ "$compare2" != "" ]]; then
					if [[ "$automod_value" = "on" ]] && [[ "$module_method" = "exploit" ]]; then
						echo -e "${BC}death-note${EC} $module_method($red$module_name$RESET)"
						info_file="$path/Framework/$processing_variables.sh"
						source $info_file
						defaul_module_options
						payload_list
						payload_name
						info_payload="$path/Framework/payloads/$payload.sh"
						source $info_payload
						defaul_payload_options
						exploit
					else
					info_file="$path/Framework/$processing_variables.sh"
					source $info_file
					defaul_module_options
					payload_list
				while true; do
					compare=`grep -w $processing_variables $vunl_data`
					if [ "$compare" != "" ]; then
					echo -ne "${BC}death-note${EC} $module_method($red$module_name$RESET)"
					read -p " > " -e input_value
					new_value=`echo $input_value | awk '{print $1}'`
					new_processing_variables=`echo $input_value | awk '{print $2}'`
					module_set=`echo $input_value | awk '{print $3}'`
						if [ "$new_value" = "set" ]; then
							if [ "$new_processing_variables" = "payload" ]; then
								payload_OS=`echo $module_set| cut -d'/' -f1` > /dev/null 2>&1
								value_registers=`echo $module_set | cut -d'/' -f2` > /dev/null 2>&1
								if [[ "$value_registers" = "x86" ]] || [[ "$value_registers" = "x64" ]] || [[ "$value_registers" = "auto" ]]; then
									payload_registers=$value_registers
									payload_format=`echo $module_set | cut -d'/' -f3` > /dev/null 2>&1
									payload_name=`echo $module_set | cut -d'/' -f4` > /dev/null 2>&1
								else
									payload_registers="x86"
									payload_format=`echo $module_set | cut -d'/' -f2` > /dev/null 2>&1
									payload_name=`echo $module_set | cut -d'/' -f3` > /dev/null 2>&1
								fi
								compare1=`grep -w $module_set $payload_list_file`
								if [ "$compare1" != "" ]; then
								echo -e "$new_processing_variables => $module_set"
									module_payload="on"
						payload="$payload_OS/$payload_registers/$payload_format/$payload_name"
						info_payload="$path/Framework/payloads/$payload.sh"
						source $info_payload
						defaul_payload_options
								else	echo -e "[${red}-${RESET}] $not_find_payload"
								fi
							else
							echo -e "$new_processing_variables => $module_set"
							fi
							set_module
							set_payload
						elif [ "$new_value" = "info" ]; then
						module_info
						elif [[ "$new_value" = "run" ]] || [[ "$new_value" = "exploit" ]]; then
							exploit	
						elif [[ "$new_value" = "show" ]] && [[ "$new_processing_variables" = "options" ]]; then
							if [ "$module_payload" = "on" ]; then
								platform
								module_compare
								payload_compare	
								target
							else
								platform
								module_compare
if [ "$module_method" = "exploit" ]; then
	if [ "$language" = "VN" ]; then
cat <<!
Các tùy chọn của tải trọng (Không có):

   Tên       	  Thiết lập hiện tại 	Yêu cầu   Miêu tả
   ----       	  ---------------- 	--------  -----------

!
	elif [ "$language" = "EN" ]; then
cat <<!
Payload options (None):

   Name           Current Setting 	Required  Description
   ----           --------------- 	--------  -----------

!
	fi
fi
								target
							fi
						elif [[ "$new_value" = "show" ]] && [[ "$new_processing_variables" = "payloads" ]]; then
payload_list
if [ "$language" = "VN" ]; then
cat <<!

Các tải trọng tương thích :
   Tên                                                  Miêu tả
   ----                                                 -----------
!
elif [ "$language" = "EN" ]; then
cat <<!

Compatible Payloads :
   Name                                                 Description
   ----                                                 -----------
!
fi
cat $payload_list_file
						elif [[ "$new_value" = "show" ]] && [[ "$new_processing_variables" = "targets" ]]; then
							show_targets
						elif [[ "$new_value" = "show" ]] && [[ "$new_processing_variables" = "platforms" ]]; then
							show_platforms
						elif [[ "$new_value" = "search" ]] && [[ "$new_processing_variables" = "payload" ]]; then
if [ "$language" = "VN" ]; then
cat <<!

Kết quả tìm kiếm :
   Tên                                                  Miêu tả
   ----                                                 -----------
!
elif [ "$language" = "EN" ]; then
cat <<!

Search results
   Name                                                 Description
   ----                                                 -----------
!
fi
							grep -i $module_set $payload_list_file
						elif [ "$new_value" = "help" ]; then
							guide
						elif [ "$new_value" = "back" ]; then
							break
						elif [ "$new_value" = "$new_value" ]; then
							$new_value
						elif [ "$new_value" = "exit" ]; then
						exit
						elif [ "$new_value" = "" ]; then
						echo -ne ""
						else 	echo "[${red}?${RESET}] $your_mean" 						
						fi

					else 
					echo "[${red}?${RESET}] $your_mean" 
					break
					fi
				done
					fi
				elif [[ "$check_module" = "" ]]; then
					if [[ "$compare2" != "" ]]; then
					echo -e "[${red}-${RESET}] $not_install"
					else
					echo -e "[${red}-${RESET}] $not_data"
					fi
				else 
					echo -e "[${red}-${RESET}] $not_data"
				fi
				
			elif [ "$value" = "help" ]; then
							guide
			elif [[ "$value" = "$value" ]] && [[ "$value" != "set" ]]; then
				$value
			elif [ "$value" = "exit" ]; then
			exit
			fi
		fi
	done
}

function set_payload {
t="Death-Note"
}
function payload_run {
u="Death-Note"
}
function guide {
if [ "$language" = "VN" ]; then
echo "     ---------------------------------   "
echo -e "    ⊱ ${cyan}Exploit$RESET ${red}vulnerability$RESET ${yellow}framework$RESET ⊰"
echo "     ---------------------------------   "
cat << !
	Cách dùng :
		automod		 :  chế độ tự động (Được chấp nhận : on, off )
		search	     :  tìm kiếm mô-đun theo từ khóa
		show	     :  hiển thị các mô-đun của một kiểu nhất định hoặc tất cả các mô-đun (show targets,show payloads,..)
		show all     : 	hiển thị tất cả các mô-đun có trong dữ liệu
		show options :	hiển thị các tùy chọn của mô-đun đang sử dụng
		info	     :  hiển thị các thông tin về mô-đun đang sử dụng
	    	use 	     :	dùng mô-đun có trong dữ liệu để khai thác
		set	     :	đặt giá trị vào biến
		back	     :	trở lại
	    	run 	     :  chạy mô-đun
	    	exit         :	thoát
	Ví dụ :
		search bluekeep
		search CVE-2019-0708
		show windows
		use exploit/windows/rdp/BlueKeep_CVE-2019-0708
!
elif [ "$language" = "EN" ]; then
echo "     ---------------------------------   "
echo -e "    ⊱ ${cyan}Exploit$RESET ${red}vulnerability$RESET ${yellow}framework$RESET ⊰"
echo "     ---------------------------------   "
cat << !
	Use :
		automod		 :  Auto mode (Accepted: on, off)
		search	     :  Searches module names and descriptions
		show	     :  Displays modules of a given type, or all modules (show targets,show payloads,..)
		show all     : 	Displays all modules in the data
		show options :	Display options of the module in use
		info	     :  Displays information about the module in use
	    	use 	     :	Selects a module by name
		set	     :	Sets a context-specific variable to a value
		back	     :	Move back from the current context
	    	run 	     :  Run the module
	    	exit         :	Exit the console
	Example :
		search bluekeep
		search CVE-2019-0708
		show windows
		use exploit/windows/rdp/BlueKeep_CVE-2019-0708
!
fi
}
function exploit {
	module_run
	payload_run
	attack
}
windows
